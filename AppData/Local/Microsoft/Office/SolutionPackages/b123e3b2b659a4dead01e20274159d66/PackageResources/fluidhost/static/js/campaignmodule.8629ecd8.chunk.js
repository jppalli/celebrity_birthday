"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[28573],{83887:(t,s,e)=>{e.r(s),e.d(s,{CampaignModule:()=>I});var i=e(75992);class c extends i.r{constructor(t){super(c.actionType),this.campaignInfo=t}}c.actionType="IRISAPI_FETCH_CAMP_SUCCEEDED";class r extends i.r{constructor(){super(r.actionType)}}r.actionType="IRISAPI_SET_IMP_SUCCEEDED";var n=e(32512);class a extends n.v{constructor(t,s,e){super(a.actionType,t,s,e)}}a.actionType="IRISAPI_SET_IMP_FAILED";class o extends i.r{constructor(){super(o.actionType)}}o.actionType="IRISAPI_SET_ACT_SUCCEEDED";class p extends n.v{constructor(t,s,e){super(p.actionType,t,s,e)}}p.actionType="IRISAPI_SET_ACT_FAILED";class h extends n.v{constructor(t,s,e){super(h.actionType,t,s,e)}}h.actionType="IRISAPI_FETCH_CAMP_FAILED";var u=e(38752),d=e(45795);class I{get name(){return"CampaignModule"}async fetchCampaignDataAsync(){try{if(u.B.clientSettings.Flights.EnableIrisApiPlex&&u.B.clientType===d.s.Plex&&!u.B.isUnoContext&&!u.B.isGovEnvironment()){const t=await this.serviceProviders.iris(),s=await t.getIrisDataAsync();this.dispatcher.dispatchAction(new c(s))}return}catch(t){return this.dispatcher.dispatchAction(new h(null,t,"")),Promise.reject()}}async setIrisImpression(){try{this.dispatcher.dispatchAction(new r);const t=await this.serviceProviders.iris();return void await t.setUserImpression()}catch(t){return this.dispatcher.dispatchAction(new a(null,t,"")),Promise.reject()}}async setIrisAction(t){try{this.dispatcher.dispatchAction(new o);const s=await this.serviceProviders.iris();return void await s.setUserAction(t)}catch(s){return this.dispatcher.dispatchAction(new p(null,s,"")),Promise.reject()}}constructor(t,s){this.dispatcher=t,this.serviceProviders=s}}}}]);
//# sourceMappingURL=campaignmodule.8629ecd8.chunk.js.map