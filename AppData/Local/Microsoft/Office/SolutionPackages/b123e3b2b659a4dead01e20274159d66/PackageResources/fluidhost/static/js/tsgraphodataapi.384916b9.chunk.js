"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[40513],{6189:(e,t,r)=>{r.d(t,{y:()=>p});var a=r(98990),n=r.n(a),i=r(84048),s=r.n(i),o=r(37535),l=r(33411),c=r.n(l),u=r(50204),d=r(44430),h=r(91246);class m{build(){return new p(this)}fromUnifiedGroupDetailsResource(e){const t=c()(e.Owners,e=>u.K.builder.fromUserResource(e).build()),r='"value":"';let a;if(null!=e.OneDriveUrl){const t=e.OneDriveUrl.indexOf(r);a=0===t?e.OneDriveUrl:e.OneDriveUrl.substring(t+9,e.OneDriveUrl.length-2)}return this.withPropertyBag({creationOptions:e.CreationOptions,currentUserRelationToGroup:e.CurrentUserRelationToGroup,endpoints:e.Endpoints,id:e.Id,owners:t,oneDriveUrl:a})}withPropertyBag(e){return this.currentUserRelationToGroup=e.currentUserRelationToGroup,this.creationOptions=e.creationOptions||[],this.owners=e.owners||[],this.endpoints=e.endpoints||[],this.id=e.id,this.oneDriveUrl=e.oneDriveUrl||null,this}withUserRelationToGroup(e){return this.currentUserRelationToGroup=e,this}withLocallyUniqueId(){return this.id=h.o.generate(),this}constructor(){this.currentUserRelationToGroup=d.N.NonMember,this.id=""}}var g=r(33268);class p{static get builder(){return new m}toWebSerializable(){const e=this.owners.map(e=>e.toWebSerializable());return{CreationOptions:this.creationOptions,CurrentUserRelationToGroup:this.currentUserRelationToGroup,Endpoints:this.endpoints,Id:this.id,Owners:e,OneDriveUrl:this.oneDriveUrl}}isFullyProvisioned(){return this.isSharePointProvisioned()}isSharePointProvisioned(){return!!this.oneDriveUrl}isYammerGroup(){return s()(this.creationOptions,"YammerProvisioning")}getSharepointDomainUrl(){const e=this.oneDriveUrl;return e?"https://"+g.wS.extractHostname(e):null}getWorkloadUrl(e){switch(o.P[e]){case o.P.Yammer:if(this.isYammerGroup()){var t;const e=n()(this.endpoints,e=>"Yammer"===e.ServiceName);return null!==(t=null===e||void 0===e?void 0:e.ServiceEndpointUri)&&void 0!==t?t:""}return"";case o.P.Documents:return this.oneDriveUrl;case o.P.Calendar:case o.P.Conversations:case o.P.Notebook:case o.P.People:default:return null}}constructor(e){this.creationOptions=e.creationOptions,this.currentUserRelationToGroup=e.currentUserRelationToGroup,this.endpoints=e.endpoints,this.id=e.id,this.owners=e.owners,this.oneDriveUrl=e.oneDriveUrl}}},8403:(e,t,r)=>{r.d(t,{f:()=>C});var a=r(55491),n=r.n(a),i=r(42410),s=r(72761);class o{static fromResource(e){return new o(e.contextScenarioId,e.externalContextId,e.externalObjectId,e.ownerAppId)}toGraphSerializable(){return{contextScenarioId:this.contextScenarioId,externalContextId:this.externalContextId,externalObjectId:this.externalObjectId,ownerAppId:this.ownerAppId}}constructor(e,t,r,a){this.externalObjectId=r,this.externalContextId=t,this.contextScenarioId=e,this.ownerAppId=a}}class l{toGraphSerializable(){const e={};return this.external&&(e.external=this.external.toGraphSerializable()),e}constructor(e){null!=e.external&&(this.external=o.fromResource(e.external))}}var c=r(41740),u=r.n(c),d=r(91246);class h{build(){return new C(this)}newFromDifferentialUpdate(e){if(e.entityType!==s.I.Bucket)throw new Error("ArgumentException: invalid entity");const t=C.builder.withPropertyBag({id:e.id,itemVersion:e.itemVersion,planId:"",title:""}).build(),r=e.getCreateDiffData(),a=t.applyDiffs(r);return this.forClone(a)}forClone(e){var t;return this.withPropertyBag({id:e.id,itemVersion:e.itemVersion,title:e.title,planId:e.planId,orderHint:e.orderHint,creationSource:null!==(t=u()(e.creationSource))&&void 0!==t?t:new l({})})}fromWebResource(e){return this.withPropertyBag({id:e.Id,itemVersion:null!=e.ItemVersion?e.ItemVersion.toString():void 0,orderHint:e.OrderHint,planId:e.PlanId,title:e.Title,creationSource:e.creationSource?new l(e.creationSource):void 0})}fromGraphResource(e){return this.withPropertyBag({itemVersion:e["@odata.etag"],title:e.name,planId:e.planId||"",orderHint:e.orderHint,id:e.id,creationSource:e.creationSource?new l(e.creationSource):void 0})}withPropertyBag(e){return this.id=e.id,this.itemVersion=e.itemVersion||this.itemVersion,this.orderHint=e.orderHint||this.orderHint,this.planId=e.planId,this.title=e.title,this.creationSource=e.creationSource||this.creationSource,this}withLocallyUniqueId(){return this.id=d.o.generate(),this}getDiffDataFromWebResource(e,t){const r=new i.F;r.addMapping("Title","title"),r.addMapping("OrderHint","orderHint"),r.addMapping("PlanId","planId"),r.addMapping("creationSource","creationSource");const a={};return n()(e.Changes,e=>{const t=e.FieldName;switch(t){case"OrderHint":case"PlanId":case"Title":const n=r.getMappedClientKey(t);a[n]=r.translateValue(t,n,e.Value)}}),a}getDiffDataFromGraphResource(e,t){const r=new i.F;return r.addMapping("name","title"),r.addMapping("orderHint","orderHint"),r.addMapping("planId","planId"),r.addMapping("creationSource","creationSource"),r.translate(e)}withValidData(){return this.id=d.o.generate(),this.itemVersion="1",this.title="Test bucket",this.planId=d.o.generate(),this.orderHint=" !",this}constructor(){this.id=d.o.generate(),this.title="",this.planId=d.o.generate(),this.itemVersion="",this.orderHint=" !",this.creationSource=new l({})}}var m=r(88908),g=r(17002),p=r.n(g),y=r(54320),f=r.n(y),T=r(36777),b=r.n(T),k=r(679);class C extends m.W{static get builder(){return new h}get entityType(){return s.I.Bucket}toWebSerializable(){return{Id:this.id,ItemVersion:null!=this.itemVersion?parseInt(this.itemVersion,10):null,OrderHint:this.orderHint,PlanId:this.planId,Title:this.title,creationSource:this.creationSource.toGraphSerializable()}}toGraphSerializable(){const e=this.creationSource.toGraphSerializable();return{id:this.id,"@odata.etag":this.itemVersion,orderHint:this.orderHint,planId:this.planId,name:this.title,creationSource:f()(e)?void 0:e}}setProperty(e,t){if("id"===e||"itemVersion"===e||"planId"===e||"creationSource"===e)throw new Error("ReadOnlyException: "+e);const r=this.getClone();return r[e]=t,r}getDiff(e){return k.B.getDiff(this,e,k.B.getDiffMomentCustomizer)}applyDiffs(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(!p()(t,e=>null!=e))throw new Error("ArgumentException: diffs - Diffs array contains null elements");return t.length>0?b()(C.builder.build(),this,...t,k.B.applyDiffMomentCustomizer):this}applyDifferentialUpdate(e){if(e.id!==this.id)throw new Error("ArgumentException: update.id must match this.id");const t=e.getUpdateDiffData(this);return this.applyDiffs(t)}getClone(){return this.getCloneBuilder().build()}getCloneBuilder(){return C.builder.forClone(this)}constructor(e){super(e.id,e.itemVersion),this.orderHint=e.orderHint,this.planId=e.planId,this.title=e.title,this.creationSource=e.creationSource}}C.TitleMaxLength=256},8838:(e,t,r)=>{r.r(t),r.d(t,{TaskServiceGraphOdataApi:()=>Te});var a,n=r(27051),i=r(95783),s=r(45078),o=r(38752),l=r(26796),c=r(65818),u=r(94283),d=r(5312),h=r(55337),m=r(8403),g=r(33287),p=r(56434),y=r.n(p),f=r(72761),T=r(88908);!function(e){e[e.PlexDiffSync=0]="PlexDiffSync",e[e.GraphDeltaSync=1]="GraphDeltaSync"}(a||(a={}));var b=r(53443),k=r(45277);class C{build(){return new U(this)}fromWebResource(e){return this.withPropertyBag({id:e.ItemId,itemVersion:e.ItemVersion?e.ItemVersion.toString():"",entityType:e.ItemType,updateType:e.Operation,change:e,strategy:a.PlexDiffSync})}fromGraphResource(e){var t;const r=this.parseGraphDiffMetadata(e);return this.withPropertyBag({id:e.id,itemVersion:r.updateType===b.U.Delete?"":null!==(t=e["@odata.etag"])&&void 0!==t?t:"",entityType:r.entityType,change:e,updateType:r.updateType,strategy:a.GraphDeltaSync})}withPropertyBag(e){return this.id=e.id,this.version=e.itemVersion,this.entityType=e.entityType,this.updateType=e.updateType,this.change=e.change||this.change,this.diffStrategy=e.strategy||this.diffStrategy,this}parseGraphDiffMetadata(e){const t={};t[k.U.Task]=f.I.Task,t[k.U.TaskDetails]=f.I.TaskDetails,t[k.U.TaskboardAssignedToTaskFormatting]=f.I.TaskboardAssignedToTaskFormatting,t[k.U.TaskboardBucketTaskFormatting]=f.I.TaskboardBucketTaskFormatting,t[k.U.TaskboardStatusTaskFormatting]=f.I.TaskboardStatusTaskFormatting,t[k.U.Bucket]=f.I.Bucket,t[k.U.Plan]=f.I.Plan,t[k.U.PlanDetails]=f.I.PlanDetails;const r=e["@odata.type"];if(null==r)throw new Error("OdataType not specified in graph diff");const a=t[r];let n;if(e["@removed"])n=b.U.Delete;else switch(n=b.U.Update,a){case f.I.Task:case f.I.Plan:n="createdDateTime"in e?b.U.Insert:b.U.Update;break;case f.I.Bucket:n="planId"in e?b.U.Insert:b.U.Update}return{entityType:a,updateType:n}}constructor(){this.id="",this.version="",this.diffStrategy=a.PlexDiffSync}}var R=r(95810),w=r(59889),D=r(34717),x=r(32561),P=r(64696),I=r(17776),v=r(97139),S=r(94078),A=r(54320),j=r.n(A);class U extends T.W{get entityType(){return this._entityType}static get builder(){return new C}getCreateDiffData(e){if(this._strategy===a.PlexDiffSync)return this.getDiffDataFromWebResource(e||this.entityType,this._change);if(this._strategy===a.GraphDeltaSync)return this.getDiffDataFromGraphResource(this._change);throw new Error("ArgumentException: invalid strategy")}getUpdateDiffData(e,t){if(this._strategy===a.PlexDiffSync)return this.getDiffDataFromWebResource(t||this.entityType,this._change,e);if(this._strategy===a.GraphDeltaSync)return this.getDiffDataFromGraphResource(this._change,e);throw new Error("ArgumentException: invalid strategy")}getDiffDataFromWebResource(e,t,r){let a;switch(e){case f.I.Task:a=D.Y.builder.getDiffDataFromWebResource(t,r);break;case f.I.TaskDetails:a=x.U.builder.getDiffDataFromWebResource(t,r);break;case f.I.Plan:a=R.c.builder.getDiffDataFromWebResource(t,r);break;case f.I.PlanDetails:a=w.y.builder.getDiffDataFromWebResource(t,r);break;case f.I.Bucket:a=m.f.builder.getDiffDataFromWebResource(t,r);break;case f.I.User:a={};break;case f.I.UserDetails:a=S.I.builder.getDiffDataFromWebResource(t,r);break;case f.I.TaskboardStatusFormatting:a={};break;case f.I.TaskboardStatusTaskFormatting:a=v.j.builder.getDiffDataFromWebResource(t,r);break;case f.I.TaskboardAssignedToFormatting:a={};break;case f.I.TaskboardAssignedToTaskFormatting:a=P.x.builder.getDiffDataFromWebResource(t,r);break;case f.I.TaskboardBucketFormatting:a={};break;case f.I.TaskboardBucketTaskFormatting:a=I.g.builder.getDiffDataFromWebResource(t,r);break;default:a={}}return e!==this.entityType&&j()(a)||(a.itemVersion=this.itemVersion),a}getDiffDataFromGraphResource(e,t){let r;switch(this.entityType){case f.I.Task:r=D.Y.builder.getDiffDataFromGraphResource(e,t);break;case f.I.TaskDetails:r=x.U.builder.getDiffDataFromGraphResource(e,t);break;case f.I.Plan:r=R.c.builder.getDiffDataFromGraphResource(e,t);break;case f.I.PlanDetails:r=w.y.builder.getDiffDataFromGraphResource(e,t);break;case f.I.Bucket:r=m.f.builder.getDiffDataFromGraphResource(e,t);break;case f.I.User:case f.I.UserDetails:case f.I.TaskboardStatusFormatting:r={};break;case f.I.TaskboardStatusTaskFormatting:r=v.j.builder.getDiffDataFromGraphResource(e,t);break;case f.I.TaskboardAssignedToFormatting:r={};break;case f.I.TaskboardAssignedToTaskFormatting:r=P.x.builder.getDiffDataFromGraphResource(e,t);break;case f.I.TaskboardBucketFormatting:r={};break;case f.I.TaskboardBucketTaskFormatting:r=I.g.builder.getDiffDataFromGraphResource(e,t);break;default:r={}}return r.itemVersion=this.itemVersion,r}constructor(e){super(e.id,e.version),this._entityType=e.entityType,this._change=e.change,this.updateType=e.updateType,this._strategy=e.diffStrategy}}class E{build(){return new B(this)}fromWebResource(e){const t=(e.Updates||[]).map(e=>U.builder.fromWebResource(e).build());return this.withPropertyBag({nextToken:e.NextToken,updates:t})}fromGraphResource(e){const t=(e.value||[]).map(e=>U.builder.fromGraphResource(e).build());return this.withPropertyBag({nextToken:e["@odata.deltaLink"],updates:t})}withPropertyBag(e){return this.nextToken=e.nextToken||"",this.updates=e.updates||[],this}constructor(){this.nextToken="",this.updates=[]}}class B{static get builder(){return new E}constructor(e){this.updates=y()(e.updates),this.nextToken=e.nextToken}}var F=r(40468),q=r(11910),G=r(80708),N=r(39589),M=r(76241),L=r(92970),O=r(6189),J=r(88457),H=r(77265),z=r(50204),K=r(44430),V=r(11755),_=r(679),W=r(41740),$=r.n(W),Y=r(88458),X=r.n(Y),Q=r(55491),Z=r.n(Q),ee=r(19853),te=r.n(ee),re=r(33411),ae=r.n(re),ne=r(34677),ie=r.n(ne),se=r(98990),oe=r.n(se),le=r(32520),ce=r.n(le),ue=r(86178),de=r.n(ue),he=r(52416),me=r(91246),ge=r(98502),pe=r(61739),ye=r(89962),fe=r(31028);class Te extends V.K{getAugmentationLoopToken(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async getRosterContainerAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["containerId"]);if(null!==t)return Promise.reject(t);const r="".concat(this.betaBaseUrl,"planner/rosters/").concat(e.containerId),a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getRosterContainerAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No roster data returned");return new H.j(e.id,e.assignedSensitivityLabel,e["@odata.etag"])}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getUnifiedGroupDetailsAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["groupId"]);if(null!==t)return Promise.reject(t);try{const[t,r,a,n]=await Promise.allSettled([this.getUnifiedGroupDriveUrlAsync(e),this.getOwnersOfGroupAsync(e),this.getJoinedGroupsCountByIdAsync({groupId:e.groupId,userId:o.B.currentUserId}),this.getGroupCreationOptionsAsync(e)]);if("rejected"===r.status)return Promise.reject(r.reason);const i=r.value,s=ce()(i,e=>e.id===o.B.currentUserId);let l,c;if("fulfilled"===t.status&&(l=t.value),"fulfilled"===n.status&&(c=n.value),"rejected"===a.status)return Promise.reject(a.reason);const u=a.value,d=-1!==s?K.N.Owner:u>0?K.N.Member:K.N.NonMember;return O.y.builder.withPropertyBag({creationOptions:c,id:e.groupId,currentUserRelationToGroup:d,oneDriveUrl:l,owners:i}).build()}catch(r){return Promise.reject(r)}}async getGroupCreationOptionsAsync(e){const t="".concat(this.v1BaseUrl,"groups/").concat(e.groupId,"?$select=creationOptions"),r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getGroupCreationOptionsAsync")});try{const e=await r.clone().json();if(null==e)throw new Error("No group creation options data returned");return e.creationOptions}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async getOwnersOfGroupAsync(e){const t="".concat(this._baseUrl,"groups/").concat(e.groupId,"/owners"),r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getOwnersOfGroupAsync")});try{const e=await r.clone().json();if(null==e)throw new Error("No unified group owners data returned");return ae()(e.value,e=>z.K.builder.fromGraphUserResource(e).build())}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async getJoinedGroupsCountByIdAsync(e){const t="".concat(this._baseUrl,"groups/").concat(e.groupId,"/members?$filter=id eq '").concat(e.userId,"'&$count=true&$select=id"),r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getJoinedGroupCountAsync"),headers:{ConsistencyLevel:"eventual"}});try{const e=(await r.clone().json())["@odata.count"];if("number"!==typeof e)throw new Error("Invalid response from server, expected a number");return e}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async getUnifiedGroupDriveUrlAsync(e){const t="".concat(this._baseUrl,"groups/").concat(e.groupId,"/drive/root/weburl");try{const e=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getUnifiedGroupDriveUrlAsync")});try{const t=await e.clone().json();if(null==t)throw new Error("No unified group drive url data returned");return t.value}catch(n){return Promise.reject(ge.g.generateAjaxClientError(e,n))}}catch(n){var r,a;const e=null===(r=n.response)||void 0===r?void 0:r.status,t=null===(a=n.response)||void 0===a?void 0:a.headers.get("Location");return e===308&&t?t:Promise.reject(n)}}async getJoinedGroupsAsync(e){const t="".concat(this._baseUrl,"me/memberOf/microsoft.graph.group?$filter=groupTypes/any(g:g eq 'Unified')"),r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getJoinedGroupsAsync")});try{const e=await r.clone().json();if(null==(null===e||void 0===e?void 0:e.value))throw new Error("No unified group data returned");const t=(0,pe.n0)(e[this.skipTokenKey]),a=[];return Z()(e.value,e=>{a.push(L.E.builder.fromGraphResource(e).build())}),{data:a,skipToken:t}}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async getFavoritePlansForUserAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["userId"]);if(null!==t)return Promise.reject(t);const r=null==e.nextContinuationToken?"".concat(this.betaBaseUrl,"me/planner/favoritePlans?$expand=details"):e.nextContinuationToken,a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getFavoritePlansForUserAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No task data for plan returned");const t=(0,pe.n0)(e[this.skipTokenKey]),r=e.value;return{data:{Results:r.map(e=>F.T.builder.fromGraphPlanResourceTypes(e,e.details).build()),NextContinuationToken:t},statusCode:a.status,xCorrelationId:null}}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getRecentPlansForUserAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["userId"]);if(null!==t)return Promise.reject(t);const r=null==e.nextContinuationToken?"".concat(this.betaBaseUrl,"me/planner/recentPlans?$expand=details"):e.nextContinuationToken,a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getRecentPlansForUserAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No task data for plan returned");const t=(0,pe.n0)(e[this.skipTokenKey]),r=e.value;return{data:{Results:r.map(e=>F.T.builder.fromGraphPlanResourceTypes(e,e.details).build()),NextContinuationToken:t},statusCode:a.status,xCorrelationId:null}}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}getRecommendedDocumentPlansForUserAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}getAllDocumentPlansForUserAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async getContainersAsync(e){var t;let r=[];switch(e.containerType){case c.K.Group:r=await this.getUserGroupContainersAsync();break;case c.K.Roster:r=await this.getUserRosterContainersAsync(e.nextContinuationToken);break;default:return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}return{data:{Results:r,NextContinuationToken:null!==(t=e.nextContinuationToken)&&void 0!==t?t:null},statusCode:null,xCorrelationId:null}}async getUserGroupContainersAsync(){return(await this.getJoinedGroupsAsync()).data.map(e=>new J.Z(e.id,e,null))}async getUserRosterContainersAsync(e){return(await this.getUserRosterPlansAsync({nextContinuationToken:e})).Results.map(e=>new H.j(e.container.externalId,null,""))}async getPlansForGroupAsync(e){return this.getPlansForContainerRecursiveAsync({containerType:c.K.Group,accumulator:[],containerId:e.groupId})}async getPlansForGroupInternalAsync(e){var t;const r=null!==(t=e.nextLink)&&void 0!==t?t:"".concat(this.betaBaseUrl,"groups/").concat(e.groupId,"/planner/plans"),a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getPlansForGroupAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No plan data returned");const t=(0,pe.n0)(e[this.skipTokenKey]),r=e.value.map(e=>R.c.builder.fromGraphResource(e).build());return{skipToken:t,data:r}}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async resolveGroupsToPlansBatchedAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["groupIds"]);if(null!==t)return Promise.reject(t);const r=[],a={};e.groupIds.forEach(e=>{r.push(this.getPlansForGroupAsync({groupId:e}).then(t=>{a[e]=t}))});try{return await Promise.all(r),a}catch(n){return Promise.reject(n)}}resolveContainerIdsToPlansBatchedAsync(e){const{containerType:t,containerIds:r}=e;switch(e.containerType){case c.K.Group:case c.K.Roster:case c.K.User:return this.resolveContainersToPlansBatchedAsync({containerType:t,containerIds:r});default:return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}}async resolveContainersToPlansBatchedAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["containerIds"]);if(null!==t)return Promise.reject(t);const{containerType:r}=e,a=[],n={};e.containerIds.forEach(e=>{a.push(this.getPlansForContainerRecursiveAsync({containerType:r,accumulator:[],containerId:e}).then(t=>{n[e]=t}))});try{return await Promise.all(a),n}catch(i){return Promise.reject(i)}}async getPlansForContainerRecursiveAsync(e){try{var t;const{containerType:r,accumulator:a,containerId:n,skipToken:i}=e;let s;switch(e.containerType){case c.K.Group:s=await this.getPlansForGroupInternalAsync({groupId:e.containerId,nextLink:i});break;case c.K.Roster:s=await this.getPlansForRosterAsync({rosterId:e.containerId,nextLink:i});break;case c.K.User:s=await this.fetchUserContainerPlansAsync({userId:e.containerId,nextLink:i});break;default:throw new Error("ContainerType not supported")}const o=null===(t=s)||void 0===t?void 0:t.data;return s.skipToken?this.getPlansForContainerRecursiveAsync({containerType:r,accumulator:a.concat(o),containerId:n,skipToken:s.skipToken}):e.accumulator.concat(o)}catch(r){return Promise.reject(r)}}async fetchUserContainerPlansAsync(e){var t;const r=null!==(t=e.nextLink)&&void 0!==t?t:"".concat(this.betaBaseUrl,"planner/plans?$filter=container/type+eq+'user'+and+container/containerId+eq+'").concat(e.userId,"'"),a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("fetchUserContainerPlansAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No data returned");const t=(0,pe.n0)(e[this.skipTokenKey]),r=e.value.map(e=>R.c.builder.fromGraphResource(e).build());return{skipToken:t,data:r}}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getPlansForRosterAsync(e){var t;const r=null!==(t=e.nextLink)&&void 0!==t?t:"".concat(this.betaBaseUrl,"planner/rosters/").concat(e.rosterId,"/plans"),a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getPlansForRosterAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No plan data returned");const t=(0,pe.n0)(e[this.skipTokenKey]),r=e.value.map(e=>R.c.builder.fromGraphResource(e).build());return{skipToken:t,data:r}}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getPlanEntitySetAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["planId"]);if(null!==t)return Promise.reject(t);const r="".concat(this.betaBaseUrl,"planner/plans/").concat(e.planId,"?$expand=details"),a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getPlanEntitySetAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No plan data returned");if(null==e.details)throw new Error("No plan details data returned");{const t=e,r=R.c.builder.fromGraphResource(t).build(),a=e.details,n=w.y.builder.fromGraphResource(a).build();return F.T.builder.withPlan(r).withDetails(n).build()}}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getPlanEntitySetByExternalIdAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["contextScenarioId","externalObjectId"]);if(null!==t)return Promise.reject(t);const r="".concat(this.betaBaseUrl,"planner/plans/$filter=contextScenarioId -eq ").concat(encodeURIComponent(e.contextScenarioId)," and externalObjectId -eq ").concat(encodeURIComponent(e.externalObjectId),"&$expand=details"),a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getPlanEntitySetByExternalIdAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No plan data returned");if(null==e.details)throw new Error("No plan details data returned");{const t=e,r=R.c.builder.fromGraphResource(t).build(),a=e.details,n=w.y.builder.fromGraphResource(a).build();return F.T.builder.withPlan(r).withDetails(n).build()}}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getTaskEntitySetAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["taskId"]);if(null!==t)return Promise.reject(t);const r="".concat(this.betaBaseUrl,"planner/tasks/").concat(e.taskId,"?$expand=details,assignedToTaskBoardFormat,bucketTaskBoardFormat,progressTaskBoardFormat"),a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getTaskEntitySetAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No task data returned");if(null==e.details)throw new Error("No details data returned");if(null==e.assignedToTaskBoardFormat)throw new Error("No assignedToTaskBoardFormat data returned");if(null==e.bucketTaskBoardFormat)throw new Error("No bucketTaskBoardFormat data returned");if(null==e.progressTaskBoardFormat)throw new Error("No progressTaskBoardFormat data returned");return G.F.builder.fromGraphResource(e).build()}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getTasksForPlanAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["planId"]);if(null!==t)return Promise.reject(t);const r=null==e.nextContinuationToken?"".concat(this.betaBaseUrl,"planner/plans/").concat(e.planId,"/tasks?$expand=details,assignedToTaskBoardFormat,bucketTaskBoardFormat,progressTaskBoardFormat"):e.nextContinuationToken,a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getTasksForPlanAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No task data for plan returned");const t=(0,pe.n0)(e[this.skipTokenKey]),r=e.value;return{data:{Results:r.map(e=>G.F.builder.fromGraphResource(e).build()),NextContinuationToken:t},statusCode:a.status,xCorrelationId:null}}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getTasksAssignedToCurrentUserAsync(e){const t=null==e.nextContinuationToken?"".concat(this.betaBaseUrl,"me/planner/tasks?$expand=details"):e.nextContinuationToken,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getTasksAssignedToCurrentUserAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No task data for user returned");const t=(0,pe.n0)(e[this.skipTokenKey]),a=e.value;return{data:{Results:a.map(e=>G.F.builder.fromGraphResource(e).build()),NextContinuationToken:t},statusCode:r.status,xCorrelationId:null}}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async getBucketAsync(e){const t="".concat(this._baseUrl,"planner/buckets/").concat(e.bucketId),r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getBucketAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No bucket data returned");const t=e,a=m.f.builder.fromGraphResource(t).build();return g.a.builder.withBucket(a).build()}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async getBucketsForPlanAsync(e){const t="".concat(this._baseUrl,"planner/plans/").concat(e.planId,"/buckets"),r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getBucketsForPlanAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No bucket data for plan returned");const t=e.value;return t.map(e=>m.f.builder.fromGraphResource(e).build())}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async validateGroupNamesAsync(e){const t=e.isCreation?"".concat(this._baseUrl,"/directoryObjects/validateProperties"):"".concat(this._baseUrl,"groups/").concat(e.unifiedGroup.id,"/validateProperties");let r={};r=e.isCreation?{entityType:"Group",displayName:e.unifiedGroup.displayName,mailNickname:e.unifiedGroup.mailNickname}:{displayName:e.unifiedGroup.displayName};try{const e=await this.ajaxClient.executeRequest(t,{method:i.PJ.Post,body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("validateGroupNamesAsync")});if(e.status===i.t3.NoContent)return ge.g.parseValidationResponse("");const a=await e.clone().text();if(null==a)throw new Error("No validateGroupNamesAsync data returned");return ge.g.parseValidationResponse(a)}catch(n){var a;if((null===(a=n.response)||void 0===a?void 0:a.status)===i.t3.UnprocessableEntity){const e=await n.response.clone().text();return ge.g.parseValidationResponse(e)}return Promise.reject(n)}}async getCurrentUserDetailsAsync(e){const t="".concat(this.betaBaseUrl,"me/planner"),r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getCurrentUserDetailsAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No user data returned");const t=e;return S.I.builder.fromGraphWebResource(t).build()}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async getDiffSyncTokenAsync(){const e="".concat(this.betaBaseUrl,"me/planner/all/delta"),t=await this.ajaxClient.executeRequest(e,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getDiffSyncTokenAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await t.clone().json();if(null==e||null==e[this.skipTokenKey])throw new Error("No data returned");return e[this.skipTokenKey]}catch(r){return Promise.reject(ge.g.generateAjaxClientError(t,r))}}async getDiffSyncFeedAsync(e){let t=e.diffSyncToken;t&&t.indexOf("?")>0&&(t=t.split("?")[1]);const r="".concat(this.betaBaseUrl,"me/planner/all/delta?").concat(t),a=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getDiffSyncFeedAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No data returned");return B.builder.fromGraphResource(e).build()}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async getFilteredTenantUsersByKeyword(e){let t="".concat(this._baseUrl,"users?"),r="";o.B.clientSettings.ECSSettings.RestrictedGuestAccessExtendedFlight&&(r="userType ne 'guest' and ",t+="$count=true&"),r+="("+(0,pe.Ny)("givenName",e.keyword)+" or "+(0,pe.Ny)("surname",e.keyword)+" or "+(0,pe.Ny)("displayName",e.keyword)+" or "+(0,pe.Ny)("mail",e.keyword)+" or "+(0,pe.Ny)("userPrincipalName",e.keyword)+")",t+="$filter=".concat(r),e.skipToken&&(t+="&$skiptoken=".concat(e.skipToken)),t+="&$select=id,businessPhones,displayName,givenName,jobTitle,mail,mobilePhone,officeLocation,preferredLanguage,surname,userPrincipalName,proxyAddresses,userType";const a=o.B.clientSettings.ECSSettings.RestrictedGuestAccessExtendedFlight?{ConsistencyLevel:"eventual"}:{},n=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getFilteredTenantUsersByKeyword"),headers:a});let i=[];try{var s;i=null!==(s=(await n.clone().json()).value)&&void 0!==s?s:[]}catch(l){i=[]}return i.map(e=>z.K.builder.fromGraphUserResource(e).build())}getSuiteNav(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}getIsUserLicensed(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}getLicensesForUser(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async getTenantGroupSettingsAsync(){const e="".concat(this.v1BaseUrl,"groupSettings"),t=await this.ajaxClient.executeRequest(e,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getTenantGroupSettingsAsync")});try{const e=await t.clone().json();if(null==e||!e.value)throw ge.g.generateAjaxClientError(t,"No tenant group settings returned");const r=oe()(e.value,e=>e.templateId===this.unifiedGroupTemplateId&&e.displayName===this.unifiedGroupDisplayName);return r?h.h.builder.fromGraphResource(r).build():h.h.builder.withPropertyBag({enableUnifiedGroupCreation:!0}).build()}catch(r){throw ge.g.generateAjaxClientError(t,r)}}async getSensitivityLabelsAsync(){const e="".concat(this.betaBaseUrl,"me/informationProtection/sensitivityLabels?$filter=applicableTo+has+'site,unifiedGroup'"),t=await this.ajaxClient.executeRequest(e,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getSensitivityLabelsAsync")});try{const e=await t.clone().json();if(null==e||!e.value)throw ge.g.generateAjaxClientError(t,"No sensitivity labels returned");return e.value.map(e=>u.k.builder.fromGraphResource(e).build())}catch(r){throw ge.g.generateAjaxClientError(t,r)}}async getUnifiedGroupSensitivityLabelAsync(e){const t="".concat(this.v1BaseUrl,"groups/").concat(e.groupId,"?$select=assignedLabels"),r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getSensitivityLabelsAsync")});try{const e=await r.clone().json();if(null==e||!e.value||!e.value[0])throw ge.g.generateAjaxClientError(r,"No assigned label returned");return e.value[0].labelId}catch(a){throw ge.g.generateAjaxClientError(r,a)}}async getSensitivityPolicySettingsAsync(){const e="".concat(this.betaBaseUrl,"me/informationProtection/sensitivityPolicySettings?$filter=applicableTo+has+'site,unifiedGroup'"),t=await this.ajaxClient.executeRequest(e,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getSensitivityPolicySettingsAsync")});try{const e=await t.clone().json();return d.H.fromGraphResource(e)}catch(r){return d.H.fromGraphResource(null)}}getLatestBuild(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}getAppContextSettings(){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}getOperationStatusAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}getContainerPermissionsAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}getTaskPermissionsAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async getUserRosterPlansAsync(e){const t=null==e.nextContinuationToken?"".concat(this.betaBaseUrl,"me/planner/rosterPlans"):e.nextContinuationToken,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getUserRosterPlansAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No data returned");const t=(0,pe.n0)(e[this.skipTokenKey]),a=e.value.map(e=>R.c.builder.fromGraphResource(e).build());return{NextContinuationToken:t,Results:a}}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async getFormResponseAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async getApprovalDetailsAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async deleteBucketAsync(e){const t="".concat(this._baseUrl,"planner/buckets/").concat(e.bucketId);return await this.ajaxClient.executeRequest(t,{method:i.PJ.Delete,headers:{[s.Lr.IfMatch]:e.itemVersion},telemetryConfig:this.getDefaultRequestTelemetryConfig("deleteBucketAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()}),Promise.resolve()}async deletePlanAsync(e){const t="".concat(this._baseUrl,"planner/plans/").concat(e.planId);return await this.ajaxClient.executeRequest(t,{method:i.PJ.Delete,headers:{[s.Lr.IfMatch]:e.itemVersion},telemetryConfig:this.getDefaultRequestTelemetryConfig("deletePlanAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()}),Promise.resolve()}async deleteUnifiedGroupAsync(e){const t="".concat(this._baseUrl,"groups/").concat(e.groupId);return await this.ajaxClient.executeRequest(t,{method:i.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("deleteUnifiedGroupAsync")}),Promise.resolve()}async deleteTaskAsync(e){const t="".concat(this._baseUrl,"planner/tasks/").concat(e.taskId);return await this.ajaxClient.executeRequest(t,{method:i.PJ.Delete,headers:{[s.Lr.IfMatch]:e.itemVersion},telemetryConfig:this.getDefaultRequestTelemetryConfig("deleteTaskAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()}),G.F.builder.withTask(D.Y.builder.withPropertyBag({id:e.taskId,planId:"PLN1",title:""}).build()).withDetails(x.U.builder.withId(e.taskId).build()).withFormatData(N._.builder.withPropertyBag({assignedBoardFormat:P.x.builder.withId(e.taskId).build(),bucketBoardFormat:I.g.builder.withId(e.taskId).build(),progressBoardFormat:v.j.builder.withId(e.taskId).build()}).build()).build()}async cancelUploadSession(e){const t=e.uploadSession.uploadUrl;return await this.ajaxClient.executeRequest(t,{method:i.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("cancelUploadSessionAsync")}),Promise.resolve()}async removeUserFromPlannerRosterMembers(e){const t="".concat(this.betaBaseUrl,"planner/rosters/").concat(e.container.externalId,"/members/").concat(e.userId);await this.ajaxClient.executeRequest(t,{method:i.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("removeUserFromPlannerRosterMembers"),retryConfig:this.getTaskServiceRequestRetryConfig({maxRetryCount:0})})}async removeUserFromGroupMembers(e){const t="".concat(this._baseUrl,"groups/").concat(e.container.externalId,"/members/").concat(e.userId,"/$ref");await this.ajaxClient.executeRequest(t,{method:i.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("removeUserFromGroupMembers"),retryConfig:{maxRetryCount:0}})}async cancelApproval(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async createPlannerRosterAsync(){const e="".concat(this._baseUrl,"planner/rosters"),t={"@odata.type":k.U.PlannerRoster},r=await this.ajaxClient.executeRequest(e,{method:i.PJ.Post,body:JSON.stringify(t),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createPlannerRosterAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No group data returned");return new H.j(e.id,null,"")}catch(a){return Promise.reject(ge.g.generateAjaxClientError(r,a))}}async createGroupAsync(e){const t="".concat(this._baseUrl,"groups"),r=e.unifiedGroupInfo.toGraphSerializable();r.autoSubscribeNewMembers=void 0,delete r.Id,r["owners@odata.bind"]=["".concat(this._baseUrl,"users/").concat(o.B.currentUserId)],r["members@odata.bind"]=["".concat(this._baseUrl,"users/").concat(o.B.currentUserId)];const a=await this.ajaxClient.executeRequest(t,{method:i.PJ.Post,body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createGroupAsync")});try{const e=await a.clone().json();if(null==e)throw new Error("No group data returned");const t=e;return L.E.builder.fromGraphResource(t).build()}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async createApproval(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async createPlanAsync(e){var t;const r="".concat(this.betaBaseUrl,"planner/plans"),a=e.newPlanEntitySet.plan.toGraphSerializable(),o=null===(t=e.newPlanEntitySet.planDetails)||void 0===t?void 0:t.toGraphSerializable();o&&delete o["@odata.etag"],j()(a.creationSource)&&delete a.creationSource;const l=(0,n.A)((0,n.A)({},a),{},{details:o}),c=await this.ajaxClient.executeRequest(r,{method:i.PJ.Post,body:JSON.stringify(l),headers:{[s.Lr.ContentType]:s.Mq.Json,Prefer:"include-unknown-enum-members"},telemetryConfig:this.getDefaultRequestTelemetryConfig("createPlanAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await c.clone().json();if(null==e)throw new Error("No plan data returned");const t=e,r=R.c.builder.fromGraphResource(t).build();return F.T.builder.withPlan(r).build()}catch(u){return Promise.reject(ge.g.generateAjaxClientError(c,u))}}copyPlanAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async createBucketAsync(e){const t="".concat(this._baseUrl,"planner/buckets/"),r=e.bucketInfo.toGraphSerializable(),a=await this.ajaxClient.executeRequest(t,{method:i.PJ.Post,body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createBucketAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No bucket data returned");const t=m.f.builder.fromGraphResource(e).build();return g.a.builder.withBucket(t).build()}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async createTaskAsync(e){var t,r;const a="".concat(this.betaBaseUrl,"planner/tasks"),o=e.newTaskEntitySet.task.toGraphSerializable(),l=null===(t=e.newTaskEntitySet.taskDetails)||void 0===t?void 0:t.toGraphSerializable(),c=null===(r=e.newTaskEntitySet.taskFormatData)||void 0===r?void 0:r.toGraphSerializable();o.recurrence&&delete o.recurrence.seriesId,l&&(delete l["@odata.etag"],null==l.description&&delete l.description,null==l.notes&&delete l.notes),null!==c&&void 0!==c&&c.assignmentBoardFormat&&delete c.assignmentBoardFormat["@odata.etag"],null!==c&&void 0!==c&&c.bucketBoardFormat&&delete c.bucketBoardFormat["@odata.etag"],null!==c&&void 0!==c&&c.progressBoardFormat&&delete c.progressBoardFormat["@odata.etag"];const u=(0,n.A)((0,n.A)((0,n.A)({},o),c),{},{details:l}),d=await this.ajaxClient.executeRequest(a,{method:i.PJ.Post,body:JSON.stringify(u),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createTaskAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await d.clone().json();if(null==e)throw new Error("No task data returned");return await this.getTaskEntitySetAsync({taskId:e.id})}catch(h){return Promise.reject(ge.g.generateAjaxClientError(d,h))}}async updateBucketAsync(e,t){const r="".concat(this._baseUrl,"planner/buckets/").concat(e.originalBucket.id),a={};if(e.originalBucket.title!==e.updatedBucket.title&&(a.name=e.updatedBucket.title),e.originalBucket.orderHint!==e.updatedBucket.orderHint&&(a.orderHint=e.updatedBucket.orderHint),e.originalBucket.planId!==e.updatedBucket.planId&&(a.planId=e.updatedBucket.planId),j()(a))return g.a.builder.withBucket(e.updatedBucket).build();const n=await this.ajaxClient.executeRequest(r,{method:i.PJ.Patch,body:JSON.stringify(a),headers:{[s.Lr.IfMatch]:e.originalBucket.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("updateBucketAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No update response returned");const t=e,r=m.f.builder.fromGraphResource(t).build();return g.a.builder.withBucket(r).build()}catch(o){return Promise.reject(ge.g.generateAjaxClientError(n,o))}}async updatePlanAsync(e,t){const{originalPlanEntitySet:r,updatedPlanEntitySet:a}=e;let n={};if(r.plan&&a.plan){const e=r.plan.toGraphSerializable(),t=a.plan.toGraphSerializable(),i=(e,t,r)=>"displayNameSegments"===r?t:_.B.getDiffMomentCustomizer(e,t,r),s=(e,t,r)=>{if("contexts"===r){if(te()(e,t))return{};{const r=_.B.getDiff(e,t),a=_.B.getDiff(t,e);null!=r&&Z()(r,(e,t)=>{r[t]=null}),null!=a&&Z()(a,(e,r)=>{a[r]=t[r]});const n=ie()(r,a);for(const s in e)if(s in t){const r=e[s],a=t[s];n&&!te()(r,a)&&(n[s]=_.B.getDiff(r,a,i),n[s]["@odata.type"]="#microsoft.graph.plannerPlanContext")}return n}}return _.B.getDiffMomentCustomizer(e,t,r)};n=_.B.getDiff(e,t,s)}const o={};if(r.planDetails&&a.planDetails){if(!te()(r.planDetails.categories,a.planDetails.categories)){const e={};for(let t=0;t<r.planDetails.categories.length;t++)r.planDetails.categories[t]!==a.planDetails.categories[t]&&(e["category"+(t+1)]=a.planDetails.categories[t]);o.categoryDescriptions=e}if(!te()(r.planDetails.sharedWith,a.planDetails.sharedWith)){const e={},t=X()(r.planDetails.sharedWith,a.planDetails.sharedWith);for(let r=0;r<t.length;r++)e[t[r]]=!1;const n=X()(a.planDetails.sharedWith,r.planDetails.sharedWith);for(let r=0;r<n.length;r++)e[n[r]]=!0;o.sharedWith=e}if(!te()(r.planDetails.contextDetails,a.planDetails.contextDetails)){const e={};for(const t in r.planDetails.contextDetails)t in a.planDetails.contextDetails?te()(r.planDetails.contextDetails[t].url,a.planDetails.contextDetails[t].url)||(e[t]={"@odata.type":"#microsoft.graph.plannerPlanContextDetails",url:a.planDetails.contextDetails[t].url}):e[t]=null;for(const t in a.planDetails.contextDetails)t in r.planDetails.contextDetails||(e[t]={"@odata.type":"#microsoft.graph.plannerPlanContextDetails",url:a.planDetails.contextDetails[t].url});o.contextDetails=e}}const l=async()=>{const e="".concat(this.betaBaseUrl,"planner/plans/").concat(r.plan.id),t=await this.ajaxClient.executeRequest(e,{method:i.PJ.Patch,headers:{[s.Lr.IfMatch]:r.plan.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(n),telemetryConfig:this.getDefaultRequestTelemetryConfig("updatePlanAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await t.clone().json();if(null==e)throw new Error("No update response returned");const a=e;a.container.type=r.plan.container.containerType;return R.c.builder.fromGraphResource(a).build()}catch(a){return Promise.reject(ge.g.generateAjaxClientError(t,a))}},c=async()=>{const e="".concat(this.betaBaseUrl,"planner/plans/").concat(r.planDetails.id,"/details"),t=await this.ajaxClient.executeRequest(e,{method:i.PJ.Patch,headers:{[s.Lr.IfMatch]:r.planDetails.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(o),telemetryConfig:this.getDefaultRequestTelemetryConfig("updatePlanDetailsAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await t.clone().json();if(null==e)throw new Error("No update response returned");const r=e;return w.y.builder.fromGraphResource(r).build()}catch(a){return Promise.reject(ge.g.generateAjaxClientError(t,a))}};if(j()(n)&&j()(o))return F.T.builder.withPlan(a.plan).withDetails(a.planDetails).build();if(j()(n)||j()(o)){if(j()(n)){const e=await c();return F.T.builder.withPlan(r.plan).withDetails(e).build()}{const e=await l();return F.T.builder.withPlan(e).withDetails(r.planDetails).build()}}{const e=await l(),t=100;await(0,he.y)(t);const r=await c();return F.T.builder.withPlan(e).withDetails(r).build()}}async updateTaskAsync(e,t){const r=e.originalTaskEntitySet.id;let a={};if(e.originalTaskEntitySet.task&&e.updatedTaskEntitySet.task){const t=e.originalTaskEntitySet.task.toGraphSerializable(),r=e.updatedTaskEntitySet.task.toGraphSerializable(),n={category1:!1,category2:!1,category3:!1,category4:!1,category5:!1,category6:!1,category7:!1,category8:!1,category9:!1,category10:!1,category11:!1,category12:!1,category13:!1,category14:!1,category15:!1,category16:!1,category17:!1,category18:!1,category19:!1,category20:!1,category21:!1,category22:!1,category23:!1,category24:!1,category25:!1},i=(e,t,r)=>{if("appliedCategories"===r){if(te()(e,t))return{};{const r=ie()($()(n),e),a=ie()($()(n),t);return _.B.getDiff(r,a)}}if("assignments"===r){if(te()(e,t))return{};{const r=_.B.getDiff(e,t),a=_.B.getDiff(t,e);return Z()(r,(e,t)=>{r[t]=null}),Z()(a,(e,r)=>{a[r]=t[r]}),ie()(r,a)}}return"recurrence"===r?te()(e,t)?{}:null==e?{schedule:t.schedule}:_.B.getDiff(e,t,s):_.B.getDiffMomentCustomizer(e,t,r)},s=(e,t,r)=>"schedule"===r?te()(e,t)?{}:null==t||null==e?t:_.B.getDiff(e,t,o):_.B.getDiffMomentCustomizer(e,t,r),o=(e,t,r)=>"pattern"===r?te()(e,t)?{}:t:_.B.getDiffMomentCustomizer(e,t,r);a=_.B.getDiff(t,r,i)}let n={};if(e.originalTaskEntitySet.taskDetails&&e.updatedTaskEntitySet.taskDetails){const t=e.originalTaskEntitySet.taskDetails.toGraphSerializable(),r=e.updatedTaskEntitySet.taskDetails.toGraphSerializable(),a=(e,t,r)=>{if("checklist"===r){if(te()(e,t))return{};{const r=_.B.getDiff(e,t),a=_.B.getDiff(t,e);Z()(r,(e,t)=>{r[t]=null}),Z()(a,(e,r)=>{a[r]=t[r]});const n=ie()(r,a);if(n)for(const i in e)if(i in t){const r=e[i],a=t[i];te()(r,a)||(n[i]=_.B.getDiff(r,a,_.B.getDiffMomentCustomizer),n[i]["@odata.type"]="microsoft.graph.plannerChecklistItem")}return n}}if("references"===r){if(te()(e,t))return{};{const r=_.B.getDiff(e,t),a=_.B.getDiff(t,e);Z()(r,(e,t)=>{r[t]=null}),Z()(a,(e,r)=>{a[r]=t[r]});const n=ie()(r,a);if(n)for(const i in e)if(i in t){const r=e[i],a=t[i];te()(r,a)||(n[i]=_.B.getDiff(r,a,_.B.getDiffMomentCustomizer),n[i]["@odata.type"]="#microsoft.graph.plannerExternalReference")}return n}}if("notes"===r)return te()(e,t)?{}:t;if("forms"!==r||te()(e,t))return _.B.getDiffMomentCustomizer(e,t,r);{const r=e,a=t,n=_.B.getDiff(r,a,_.B.getDiffMomentCustomizer);if(n){for(const e in n)n.hasOwnProperty(e)&&(n[e].formResponse=String(n[e].formResponse),n[e]["@odata.type"]="#microsoft.taskServices.form");return n}}};n=_.B.getDiff(t,r,a)}const o={},l={},c={};if(e.originalTaskEntitySet.taskFormatData&&e.updatedTaskEntitySet.taskFormatData){if(e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat&&e.updatedTaskEntitySet.taskFormatData.assignmentBoardFormat){const{orderHintsByAssignee:t,unassignedOrderHint:r}=e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat,{orderHintsByAssignee:a,unassignedOrderHint:n}=e.updatedTaskEntitySet.taskFormatData.assignmentBoardFormat;if(!te()(t,a)){const e={};Object.keys(a).forEach(r=>{a[r]!==t[r]&&(e[r]=a[r])}),o.orderHintsByAssignee=e}r!==n&&(o.unassignedOrderHint=n)}e.originalTaskEntitySet.taskFormatData.bucketBoardFormat&&e.updatedTaskEntitySet.taskFormatData.bucketBoardFormat&&e.originalTaskEntitySet.taskFormatData.bucketBoardFormat.orderHint!==e.updatedTaskEntitySet.taskFormatData.bucketBoardFormat.orderHint&&(l.orderHint=e.updatedTaskEntitySet.taskFormatData.bucketBoardFormat.orderHint),e.originalTaskEntitySet.taskFormatData.progressBoardFormat&&e.updatedTaskEntitySet.taskFormatData.progressBoardFormat&&e.originalTaskEntitySet.taskFormatData.progressBoardFormat.orderHint!==e.updatedTaskEntitySet.taskFormatData.progressBoardFormat.orderHint&&(c.orderHint=e.updatedTaskEntitySet.taskFormatData.progressBoardFormat.orderHint)}const u=!(!j()(a)||!j()(e.originalTaskEntitySet.task)),d=!(!j()(n)||!j()(e.originalTaskEntitySet.taskDetails)),h=!(!j()(o)||e.originalTaskEntitySet.taskFormatData&&!j()(e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat)),m=!(!j()(l)||e.originalTaskEntitySet.taskFormatData&&!j()(e.originalTaskEntitySet.taskFormatData.bucketBoardFormat)),g=!(!j()(c)||e.originalTaskEntitySet.taskFormatData&&!j()(e.originalTaskEntitySet.taskFormatData.progressBoardFormat));let p;(u||d||h||m||g)&&(p=await this.getTaskEntitySetAsync({taskId:r}));const y=(async()=>{if(j()(a))return j()(e.originalTaskEntitySet.task)?p.task:e.originalTaskEntitySet.task;{const r="".concat(this.betaBaseUrl,"planner/tasks/").concat(e.originalTaskEntitySet.id),n=await this.ajaxClient.executeRequest(r,{method:i.PJ.Patch,headers:{[s.Lr.IfMatch]:e.originalTaskEntitySet.task.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(a),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateTaskAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No update response returned");return D.Y.builder.fromGraphResource(e).build()}catch(t){return Promise.reject(ge.g.generateAjaxClientError(n,t))}}})(),f=(async()=>{if(j()(n))return j()(e.originalTaskEntitySet.taskDetails)?p.taskDetails:e.originalTaskEntitySet.taskDetails;return await this.updateTaskDetailsAsync({taskDetailsChanges:n,taskDetails:e.originalTaskEntitySet.taskDetails})})(),T=(async()=>{if(j()(o))return e.originalTaskEntitySet.taskFormatData&&!j()(e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat)?e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat:p.taskFormatData.assignmentBoardFormat;await y;return await this.updateAssignedToTaskboardTaskFormatAsync({assignedToTaskBoardFormatChanges:o,assignedToTaskboadFormat:e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat})})(),b=(async()=>{if(j()(l))return e.originalTaskEntitySet.taskFormatData&&!j()(e.originalTaskEntitySet.taskFormatData.bucketBoardFormat)?e.originalTaskEntitySet.taskFormatData.bucketBoardFormat:p.taskFormatData.bucketBoardFormat;return await this.updateBucketTaskboardTaskFormatAsync({bucketTaskBoardFormatChanges:l,bucketTaskboadFormat:e.originalTaskEntitySet.taskFormatData.bucketBoardFormat})})(),k=(async()=>{if(j()(c))return e.originalTaskEntitySet.taskFormatData&&!j()(e.originalTaskEntitySet.taskFormatData.progressBoardFormat)?e.originalTaskEntitySet.taskFormatData.progressBoardFormat:p.taskFormatData.progressBoardFormat;return await this.updateProgressTaskboardTaskFormatAsync({progressTaskBoardFormatChanges:c,progressTaskboadFormat:e.originalTaskEntitySet.taskFormatData.progressBoardFormat})})(),C=[y,f,T,b,k],R=await Promise.all(C),w=N._.builder.withPropertyBag({assignedBoardFormat:R[2],bucketBoardFormat:R[3],progressBoardFormat:R[4]}).build();return G.F.builder.withTask(R[0]).withDetails(R[1]).withFormatData(w).build()}undeleteTaskAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async updateTaskDetailsAsync(e){const t="".concat(this.betaBaseUrl,"planner/tasks/").concat(e.taskDetails.id,"/details"),r=e.taskDetailsChanges,a=await this.ajaxClient.executeRequest(t,{method:i.PJ.Patch,headers:{[s.Lr.IfMatch]:e.taskDetails.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateTaskDetailsAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No update response returned");return x.U.builder.fromGraphResource(e).build()}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async updateAssignedToTaskboardTaskFormatAsync(e){const t="".concat(this._baseUrl,"planner/tasks/").concat(e.assignedToTaskboadFormat.id,"/assignedToTaskBoardFormat"),r=e.assignedToTaskBoardFormatChanges,a=await this.ajaxClient.executeRequest(t,{method:i.PJ.Patch,headers:{[s.Lr.IfMatch]:e.assignedToTaskboadFormat.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateAssignedToTaskboardTaskFormatAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No update response returned");return P.x.builder.fromGraphResource(e).build()}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async updateBucketTaskboardTaskFormatAsync(e){const t="".concat(this._baseUrl,"planner/tasks/").concat(e.bucketTaskboadFormat.id,"/bucketTaskBoardFormat"),r=e.bucketTaskBoardFormatChanges,a=await this.ajaxClient.executeRequest(t,{method:i.PJ.Patch,headers:{[s.Lr.IfMatch]:e.bucketTaskboadFormat.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateBucketTaskboardTaskFormatAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No update response returned");return I.g.builder.fromGraphResource(e).build()}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async updateProgressTaskboardTaskFormatAsync(e){const t="".concat(this._baseUrl,"planner/tasks/").concat(e.progressTaskboadFormat.id,"/progressTaskBoardFormat"),r=e.progressTaskBoardFormatChanges,a=await this.ajaxClient.executeRequest(t,{method:i.PJ.Patch,headers:{[s.Lr.IfMatch]:e.progressTaskboadFormat.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateProgressTaskboardTaskFormatAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await a.clone().json();if(null==e)throw new Error("No update response returned");return v.j.builder.fromGraphResource(e).build()}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async updateUserDetailsAsync(e,t){const r="".concat(this.betaBaseUrl,"me/planner"),a=e.originalUserDetails.recentPlans.toGraphSerializable(),o=e.updatedUserDetails.recentPlans.toGraphSerializable(),l=_.B.getDiff(a,o),c=_.B.getDiff(o,a);Z()(l,(e,t)=>{l[t]=null}),Z()(c,(e,t)=>{c[t]=o[t]});const u=ie()(l,c),d=await this.getCurrentUserDetailsAsync({}),h={recentPlanReferences:u},m=await this.ajaxClient.executeRequest(r,{method:i.PJ.Patch,headers:{[s.Lr.IfMatch]:d.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(h),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateUserDetailsAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const t=await m.clone().json();if(null==t)throw new Error("No post response returned");const r=(0,n.A)((0,n.A)({},t),{},{id:e.updatedUserDetails.id});return S.I.builder.fromGraphWebResource(r).build()}catch(g){return Promise.reject(ge.g.generateAjaxClientError(m,g))}}async updateUnifiedGroupAsync(e,t){const r="".concat(this._baseUrl,"groups/").concat(e.originalGroup.id),a={};return e.originalGroup.displayName!==e.updatedGroup.displayName&&(a.displayName=e.updatedGroup.displayName),e.originalGroup.description!==e.updatedGroup.description&&(a.description=e.updatedGroup.description),e.originalGroup.visibility!==M.X.HiddenMembership&&e.originalGroup.visibility!==e.updatedGroup.visibility&&(a.visibility=M.X[e.updatedGroup.visibility]),j()(a)||await this.ajaxClient.executeRequest(r,{method:i.PJ.Patch,body:JSON.stringify(a),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("updateUnifiedGroupAsync")}),e.updatedGroup}async updateApproval(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async addUserToContainer(e){switch(e.container.containerType){case c.K.Roster:await this.addUserToPlannerRosterMembers(e);break;case c.K.Group:await this.addUserToGroupMembers(e);break;default:return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}}async removeUserFromContainer(e){switch(e.container.containerType){case c.K.Roster:await this.removeUserFromPlannerRosterMembers(e);break;case c.K.Group:await this.removeUserFromGroupMembers(e);break;default:return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}}async setRosterSensitivityLabelAsync(e){var t,r;const a="".concat(this.betaBaseUrl,"/planner/rosters/").concat(e.rosterContainer.externalId,"/assignSensitivityLabel"),n={sensitivityLabelId:null===(t=e.rosterContainer.assignedSensitivityLabel)||void 0===t?void 0:t.sensitivityLabelId,assignmentMethod:null===(r=e.rosterContainer.assignedSensitivityLabel)||void 0===r?void 0:r.assignmentMethod},o=await this.ajaxClient.executeRequest(a,{method:i.PJ.Post,headers:{[s.Lr.IfMatch]:e.rosterContainer.itemVersion,[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(n),telemetryConfig:{apiName:Te.apiName,methodName:"setRosterSensitivityLabel"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await o.clone().json();if(null==e)throw new Error("No roster data returned");return new H.j(e.id,e.assignedSensitivityLabel,e["@odata.etag"])}catch(l){return Promise.reject(ge.g.generateAjaxClientError(o,l))}}async createGroupConversationThreadAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["groupId"]);if(null!==t)return Promise.reject(t);const r="".concat(this._baseUrl,"groups/").concat(e.groupId,"/conversations"),a=e.newPost.toGraphSerializable(),n={topic:e.threadSubject.substring(0,200),threads:[{posts:[a]}]},o=await this.ajaxClient.executeRequest(r,{method:i.PJ.Post,body:JSON.stringify(n),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createGroupConversationThreadAsync")});try{var l;const e=await o.clone().json();if(null==(null===e||void 0===e||null===(l=e.threads)||void 0===l||null===(l=l[0])||void 0===l?void 0:l.id))throw new Error("No post response returned");return a.createdDateTime=de()().toDate().toISOString(),q.L.builder.fromGraphPostResource(a,e.threads[0].id).withLocallyUniqueId().build()}catch(c){return Promise.reject(ge.g.generateAjaxClientError(o,c))}}async postReplyInGroupConversationThreadAsync(e){const t=ge.g.validateAjaxClientRequestParameters(e,["groupId","threadId"]);if(null!==t)return Promise.reject(t);const r="".concat(this._baseUrl,"groups/").concat(e.groupId,"/threads/").concat(e.threadId,"/reply"),a=e.newPost.toGraphSerializable();a.createdDateTime=de()().toDate().toISOString();const n=y()(a.from);a.from=void 0,a.categories=void 0;const o={post:a};await this.ajaxClient.executeRequest(r,{method:i.PJ.Post,headers:{[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(o),telemetryConfig:this.getDefaultRequestTelemetryConfig("PostReplyInGroupConversationThreadAsync")});const l=y()(a);return l.from=n,q.L.builder.fromGraphPostResource(l,e.threadId).withLocallyUniqueId().build()}joinGroupAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}leaveGroupAsync(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}trackExperimentEvent(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}logNotificationTelemetry(e){return Promise.reject(ge.g.generateAjaxClientError(Te.notImplementedResponse,Te.notImplemented))}async createUploadSession(e){const t=ge.g.validateAjaxClientRequestParameters(e,["groupId","itemPath"]);if(null!==t)return Promise.reject(t);const r="".concat(this._baseUrl,"groups('").concat(e.groupId,"')/drive/root:/").concat(encodeURIComponent(e.itemPath),":/createUploadSession"),a=await this.ajaxClient.executeRequest(r,{method:i.PJ.Post,body:JSON.stringify({item:{"@microsoft.graph.conflictBehavior":"rename"}}),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createUploadSessionAsync")});try{const t=await a.clone().json();if(null==t)throw new Error("No response returned");return e.session=e.session.setProperty("uploadUrl",t.uploadUrl),e.session=e.session.setProperty("bytesSent",0),e.session=e.session.setProperty("expirationDateTime",t.expirationDateTime),e.session}catch(n){return Promise.reject(ge.g.generateAjaxClientError(a,n))}}async uploadBytesToSession(e){const t=e.uploadSession.uploadUrl,r=(0,ye.FI)(e.b64Data),a=await this.ajaxClient.executeRequest(t,{method:i.PJ.Put,headers:{[s.Lr.ContentRange]:(0,ye.X7)(e.initialByteIndex,e.finalByteIndex,e.totalSize),[s.Lr.ContentType]:s.Mq.OctetStream},body:r,telemetryConfig:this.getDefaultRequestTelemetryConfig("uploadBytesToSessionAsync")});try{var n,o,c;const t=await a.clone().json();if(null==t)throw new Error("No response returned");let r=null;j()(t.id)||(r=t.id);let i=null;j()(t.name)||(i=t.name);let s=null;null!=t.size&&(s=t.size);let u=e.uploadSession.expirationDateTime;null!=t.expirationDateTime&&(u=t.expirationDateTime);return l.z.builder.withPropertyBag({bytesSent:e.finalByteIndex+1,expirationDateTime:u,groupId:e.uploadSession.groupId,id:null!==(n=e.uploadSession.id)&&void 0!==n?n:me.o.generate(),itemId:r&&r!==e.uploadSession.itemId?r:e.uploadSession.itemId,itemName:i&&i!==e.uploadSession.itemName?i:null!==(o=e.uploadSession.itemName)&&void 0!==o?o:"",itemSize:s&&s!==e.uploadSession.itemSize?s:null!==(c=e.uploadSession.itemSize)&&void 0!==c?c:0,lastUploadRequestSucceeded:!0,uploadUrl:e.uploadSession.uploadUrl,name:e.uploadSession.name,webUrl:t.webUrl,nextExpectedRanges:t.nextExpectedRanges}).build()}catch(u){return Promise.reject(ge.g.generateAjaxClientError(a,u))}}async addUserToGroupMembers(e){const t="".concat(this._baseUrl,"groups/").concat(e.container.externalId,"/members/$ref"),r={"@odata.id":"https://".concat(o.B.clientSettings.graphHostName,"/").concat(this.v1BaseUrl,"users/").concat(e.userId)};await this.ajaxClient.executeRequest(t,{method:i.PJ.Post,body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("addUserToGroupMembers")})}async addUserToPlannerRosterMembers(e){const t="".concat(this.betaBaseUrl,"planner/rosters/").concat(e.container.externalId,"/members"),r={"@odata.type":k.U.PlannerRosterMember,userId:e.userId};await this.ajaxClient.executeRequest(t,{method:i.PJ.Post,telemetryConfig:this.getDefaultRequestTelemetryConfig("addUserToPlannerRosterMembers"),body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},retryConfig:this.getTaskServiceRequestRetryConfig({maxRetryCount:0})})}getDefaultRequestTelemetryConfig(e){return{apiName:Te.apiName,methodName:e,requestHeadersToLog:this.loggableRequestHeaders,responseHeadersToLog:this.loggableResponseHeaders}}getTaskServiceRequestRetryConfig(e){const t={retryCheck:o.B.isUnoContext&&o.B.clientSettings.Flights.EnablePlannerServicePatchRetries?this.taskServiceRetryCheckCallback:void 0};return ie()(t,e)}constructor(){super(...arguments),this.loggableRequestHeaders=[s.a8.ClientRequestId],this.loggableResponseHeaders=[s.Qu.RequestId,s.Qu.ClientRequestId,s.Qu.TCorrelationId],this.unifiedGroupTemplateId="62375ab9-6b52-47ed-826b-58e47e0e304b",this.unifiedGroupDisplayName="Group.Unified",this.taskServiceRetryCheckCallback=async(e,t,r)=>{const a=[i.PJ.Patch,i.PJ.Put];return((0,fe.g)(e)||null!=e.method&&a.includes(e.method.toUpperCase()))&&ge.g.isRetryableResponse(t,r)}}}Te.notImplemented="Not Implemented",Te.notImplementedResponse=new Response(Te.notImplemented,{status:501,statusText:Te.notImplemented}),Te.apiName="TaskServiceGraphOdataApi"},11755:(e,t,r)=>{r.d(t,{K:()=>a});class a{constructor(e,t){this.skipTokenKey="@odata.nextLink",this.betaBaseUrl="beta/",this.v1BaseUrl="v1.0/",this._baseUrl=e,this.ajaxClient=t}}},11910:(e,t,r)=>{r.d(t,{L:()=>u});var a,n=r(86178),i=r.n(n),s=r(38752),o=r(54276);!function(e){e[e.Text=0]="Text",e[e.HTML=1]="HTML"}(a||(a={}));var l=r(91246);class c{build(){return new u(this)}fromPostResource(e){return this.withPropertyBag({body:null!=e.Body?{content:e.Body.Content,contentType:e.Body.ContentType===a.HTML?o.c.HTML:o.c.Text}:void 0,categories:e.Categories||void 0,changeKey:null!=e.ChangeKey?e.ChangeKey:void 0,conversationId:e.ConversationId||void 0,conversationThreadId:e.ConversationThreadId||void 0,createdDateTime:null!=e.CreatedDateTime?i()(e.CreatedDateTime):void 0,fromField:null!=e.From?{emailAddress:{address:e.From.EmailAddress.Address,name:e.From.EmailAddress.Name}}:void 0,hasAttachments:e.HasAttachments,id:e.Id,lastModifiedDateTime:null!=e.LastModifiedDateTime?i()(e.LastModifiedDateTime):void 0,receivedDateTime:null!=e.ReceivedDateTime?i()(e.ReceivedDateTime):void 0,sender:null!=e.Sender?{emailAddress:{address:e.Sender.EmailAddress.Address,name:e.Sender.EmailAddress.Name}}:void 0})}fromGraphPostResource(e,t){return this.withPropertyBag({body:null!=e.body?{content:e.body.content,contentType:"html"===e.body.contentType?o.c.HTML:o.c.Text}:void 0,categories:e.categories,changeKey:null!=e.changeKey?e.changeKey:void 0,conversationId:void 0,conversationThreadId:t,createdDateTime:null!=e.createdDateTime?i()(e.createdDateTime):void 0,fromField:null!=e.from?{emailAddress:{address:e.from.emailAddress.address,name:e.from.emailAddress.name}}:void 0,hasAttachments:e.hasAttachments,id:e.id,lastModifiedDateTime:null!=e.lastModifiedDateTime?i()(e.lastModifiedDateTime):void 0,receivedDateTime:null!=e.receivedDateTime?i()(e.receivedDateTime):void 0,sender:null!=e.sender?{emailAddress:{address:e.sender.emailAddress.address,name:e.sender.emailAddress.name}}:void 0,nextLink:e["@odata.nextLink"]})}withPropertyBag(e){return this.body=e.body||this.body,this.categories=e.categories||this.categories,this.changeKey=null!=e.changeKey?e.changeKey:this.changeKey,this.conversationId=e.conversationId||this.conversationId,this.conversationThreadId=e.conversationThreadId||this.conversationThreadId,this.createdDateTime=e.createdDateTime||this.createdDateTime,this.fromField=e.fromField||this.fromField,this.hasAttachments=null!=e.hasAttachments?e.hasAttachments:this.hasAttachments,this.id=e.id||this.id,this.lastModifiedDateTime=e.lastModifiedDateTime||this.lastModifiedDateTime,this.receivedDateTime=e.receivedDateTime||this.receivedDateTime,this.sender=e.sender||this.sender,this.nextLink=e.nextLink||this.nextLink,this}withLocallyUniqueId(){return this.id=l.o.generate(),this}constructor(){this.body=null,this.categories=[],this.id=l.o.generate(),this.hasAttachments=!1,this.fromField={emailAddress:{address:s.B.currentUserEmail,name:"CurrentUser"}}}}class u{static get builder(){return new c}static generatePostBody(e){return{content:e,contentType:o.c.HTML}}toWebSerializable(){return{Body:null!=this.body?{Content:this.body.content,ContentType:this.body.contentType===o.c.HTML?a.HTML:a.Text}:null,Categories:this.categories,ChangeKey:this.changeKey,ConversationId:this.conversationId,ConversationThreadId:this.conversationThreadId,CreatedDateTime:null!=this.createdDateTime?this.createdDateTime.toISOString():null,From:{EmailAddress:{Address:this.fromField.emailAddress.address,Name:this.fromField.emailAddress.name}},HasAttachments:this.hasAttachments,Id:this.id,LastModifiedDateTime:null!=this.lastModifiedDateTime?this.lastModifiedDateTime.toISOString():null,ReceivedDateTime:null!=this.receivedDateTime?this.receivedDateTime.toISOString():null,Sender:null!=this.sender?{EmailAddress:{Address:this.sender.emailAddress.address,Name:this.sender.emailAddress.name}}:null}}toGraphSerializable(){return{body:null!=this.body?{content:this.body.content,contentType:this.body.contentType}:null,categories:null!=this.categories?this.categories:void 0,changeKey:this.changeKey,createdDateTime:null!=this.createdDateTime?this.createdDateTime.toISOString():void 0,from:null!=this.fromField?{emailAddress:{address:this.fromField.emailAddress.address,name:this.fromField.emailAddress.name}}:void 0,hasAttachments:this.hasAttachments,id:this.id,lastModifiedDateTime:null!=this.lastModifiedDateTime?this.lastModifiedDateTime.toISOString():void 0,receivedDateTime:null!=this.receivedDateTime?this.receivedDateTime.toISOString():void 0,sender:null!=this.sender?{emailAddress:{address:this.sender.emailAddress.address,name:this.sender.emailAddress.name}}:void 0,singleValueExtendedProperties:[{id:u.transportTrafficTypeName,value:u.transportTrafficType},{id:u.transportTrafficSubTypeName,value:u.transportTrafficSubType}]}}constructor(e){this.body=e.body,this.categories=e.categories,this.changeKey=e.changeKey,this.conversationId=e.conversationId,this.conversationThreadId=e.conversationThreadId,this.createdDateTime=e.createdDateTime,this.fromField=e.fromField,this.hasAttachments=e.hasAttachments,this.id=e.id,this.lastModifiedDateTime=e.lastModifiedDateTime,this.receivedDateTime=e.receivedDateTime,this.sender=e.sender}}u.transportTrafficTypeName="String {00020386-0000-0000-C000-000000000046} Name X-MS-Exchange-Organization-TransportTrafficType",u.transportTrafficSubTypeName="String {00020386-0000-0000-C000-000000000046} Name X-MS-Exchange-Organization-TransportTrafficSubType",u.transportTrafficType="Email",u.transportTrafficSubType="PlannerComment"},26796:(e,t,r)=>{r.d(t,{z:()=>i});var a=r(57718),n=function(){function e(){this.bytesSent=0,this.groupId="",this.id=a.cM(),this.itemName="",this.itemSize=0,this.itemId="",this.lastUploadRequestSucceeded=!1,this.uploadUrl="",this.name="",this.webUrl="",this.nextExpectedRanges=void 0}return e.prototype.build=function(){return new i(this)},e.prototype.withPropertyBag=function(e){return this.bytesSent=e.bytesSent||this.bytesSent,this.expirationDateTime=e.expirationDateTime||this.expirationDateTime,this.groupId=e.groupId||this.groupId,this.id=e.id||this.id,this.itemId=e.itemId||this.itemId,this.itemName=e.itemName||this.itemName,this.itemSize=e.itemSize||this.itemSize,this.lastUploadRequestSucceeded=null!=e.lastUploadRequestSucceeded?e.lastUploadRequestSucceeded:this.lastUploadRequestSucceeded,this.uploadUrl=e.uploadUrl||this.uploadUrl,this.name=e.name||this.name,this.webUrl=e.webUrl||this.webUrl,this.nextExpectedRanges=e.nextExpectedRanges||this.nextExpectedRanges,this},e.prototype.withDefaultValues=function(){return this.id="DriveItemUploadSessionId",this.bytesSent=0,this.groupId="GroupId",this.itemId="itemId",this.itemName="sampleFile.txt",this.itemSize=28,this.uploadUrl="UploadURL",this.name="sampleFile.txt",this.expirationDateTime=new Date("2020-09-02"),this.webUrl="https://contoso.com/sites/group/sampleFile.txt",this.nextExpectedRanges=["26-"],this},e}(),i=function(){function e(e){this.bytesSent=e.bytesSent,this.expirationDateTime=e.expirationDateTime,this.groupId=e.groupId,this.id=e.id,this.itemId=e.itemId,this.itemName=e.itemName,this.itemSize=e.itemSize,this.lastUploadRequestSucceeded=e.lastUploadRequestSucceeded,this.uploadUrl=e.uploadUrl,this.name=e.name,this.webUrl=e.webUrl,this.nextExpectedRanges=e.nextExpectedRanges}return Object.defineProperty(e,"builder",{get:function(){return new n},enumerable:!1,configurable:!0}),e.prototype.getClone=function(){return e.builder.withPropertyBag({bytesSent:this.bytesSent,expirationDateTime:this.expirationDateTime,groupId:this.groupId,id:this.id,itemId:this.itemId,itemName:this.itemName||"",itemSize:this.itemSize||0,lastUploadRequestSucceeded:this.lastUploadRequestSucceeded,uploadUrl:this.uploadUrl,name:this.name,webUrl:this.webUrl,nextExpectedRanges:this.nextExpectedRanges}).build()},e.prototype.setProperty=function(e,t){if("id"===e)throw new Error("ReadOnlyException: "+e);var r=this.getClone();return r[e]=t,r},e}()},33287:(e,t,r)=>{r.d(t,{a:()=>i});var a=r(8403);class n{build(){return new i(this)}fromBucketEntityGroupResource(e){return this.withPropertyBag({bucket:a.f.builder.fromWebResource(e.Bucket).build()})}fromGraphBucketResourceTypes(e){return this.withPropertyBag({bucket:a.f.builder.fromGraphResource(e).build()})}withPropertyBag(e){return this.bucket=e.bucket||this.bucket,this}withBucket(e){return this.bucket=e,this}withDefaultValues(){return this.withPropertyBag({bucket:a.f.builder.build()})}}class i{static get builder(){return new n}get id(){return this.bucket.id}toWebSerializable(){return{Bucket:this.bucket.toWebSerializable()}}constructor(e){this.bucket=e.bucket}}},37535:(e,t,r)=>{var a;r.d(t,{P:()=>a}),function(e){e[e.Conversations=0]="Conversations",e[e.Calendar=1]="Calendar",e[e.People=2]="People",e[e.Documents=3]="Documents",e[e.Notebook=4]="Notebook",e[e.Yammer=5]="Yammer"}(a||(a={}))},44430:(e,t,r)=>{var a;r.d(t,{N:()=>a}),function(e){e[e.NonMember=0]="NonMember",e[e.Member=1]="Member",e[e.Owner=2]="Owner"}(a||(a={}))},52416:(e,t,r)=>{async function a(e){return new Promise(t=>setTimeout(t,e))}r.d(t,{y:()=>a})},53443:(e,t,r)=>{var a;r.d(t,{U:()=>a}),function(e){e[e.Insert=0]="Insert",e[e.Delete=1]="Delete",e[e.Update=2]="Update",e[e.Purge=3]="Purge",e[e.Undelete=4]="Undelete"}(a||(a={}))},57718:(e,t,r)=>{function a(e){for(var t="";t.length<e;){var r=16*Math.random();t+=(r|=0).toString(16)}return t}r.d(t,{cM:()=>n});function n(){var e=[];e.push(a(8)),e.push(a(4));var t="4"+a(3);e.push(t);var r=a(4),n=parseInt(r[0],16);return n&=3,r=(n|=8).toString(16)+r.substr(1),e.push(r),e.push(a(12)),e.join("-")}},61739:(e,t,r)=>{r.d(t,{Cx:()=>i,Ny:()=>s,n0:()=>o});var a=r(54320),n=r.n(a);function i(e){let t="";if(!n()(e))try{t=new URLSearchParams(new URL(e).search).get("$skiptoken")||""}catch(r){}return t}function s(e,t){return"startswith(".concat(e,", '").concat(encodeURIComponent(t).replace(/'/g,"''"),"')")}function o(e){const t="https://graph.microsoft.com/";return e&&0===e.indexOf(t)&&(e=e.substring(28)),e}},76241:(e,t,r)=>{var a;r.d(t,{X:()=>a}),function(e){e[e.Public=0]="Public",e[e.Private=1]="Private",e[e.HiddenMembership=2]="HiddenMembership"}(a||(a={}))},77265:(e,t,r)=>{r.d(t,{j:()=>i});var a=r(65818),n=r(64836);class i extends n.m{constructor(e,t,r){super({externalId:e,containerType:a.K.Roster}),this.assignedSensitivityLabel=t,this.itemVersion=r}}},88457:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(65818),n=r(64836);class i extends n.m{constructor(e,t,r){super({externalId:e,containerType:a.K.Group},t.displayName),this.unifiedGroup=t,this.unifiedGroupDetails=r}}}}]);
//# sourceMappingURL=tsgraphodataapi.384916b9.chunk.js.map