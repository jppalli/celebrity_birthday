/*! For license information please see vendors~auth-msal-browser.js.LICENSE.txt */
"use strict";(self.webpackChunkTypeScriptModule=self.webpackChunkTypeScriptModule||[]).push([[717],{19072:(e,t,r)=>{r.r(t),r.d(t,{AccountEntity:()=>Pi,ApiId:()=>Nn,AuthError:()=>Se,AuthErrorCodes:()=>n,AuthErrorMessage:()=>ke,AuthenticationHeaderParser:()=>Bl,AuthenticationScheme:()=>re,AzureCloudInstance:()=>jo,BrowserAuthError:()=>en,BrowserAuthErrorCodes:()=>s,BrowserAuthErrorMessage:()=>Zr,BrowserCacheLocation:()=>fn,BrowserConfigurationAuthError:()=>Ro,BrowserConfigurationAuthErrorCodes:()=>a,BrowserConfigurationAuthErrorMessage:()=>bo,BrowserPerformanceClient:()=>Hl,BrowserPerformanceMeasurement:()=>xl.BrowserPerformanceMeasurement,BrowserUtils:()=>c,CacheLookupPolicy:()=>Bn,ClientAuthError:()=>Qt,ClientAuthErrorCodes:()=>i,ClientAuthErrorMessage:()=>$t,ClientConfigurationError:()=>Ye,ClientConfigurationErrorCodes:()=>o,ClientConfigurationErrorMessage:()=>Je,DEFAULT_IFRAME_TIMEOUT_MS:()=>as,EventHandler:()=>Ia,EventMessageUtils:()=>_l,EventType:()=>da,InteractionRequiredAuthError:()=>Ys,InteractionRequiredAuthErrorCodes:()=>l,InteractionRequiredAuthErrorMessage:()=>Js,InteractionStatus:()=>qn,InteractionType:()=>On,JsonWebTokenTypes:()=>we,LocalStorage:()=>ca,LogLevel:()=>$o,Logger:()=>Qo,MemoryStorage:()=>Ms,NavigationClient:()=>ts,OIDC_DEFAULT_SCOPES:()=>C,PerformanceEvents:()=>Kn,PromptValue:()=>O,ProtocolMode:()=>Wo,PublicClientApplication:()=>Tl,PublicClientNext:()=>bl,ServerError:()=>ac,ServerResponseType:()=>H,SessionStorage:()=>la,SignedHttpRequest:()=>Pl,StringUtils:()=>Ze,StubPerformanceClient:()=>Gi,UrlString:()=>Yt,WrapperSKU:()=>Ln,createNestablePublicClientApplication:()=>Al,createStandardPublicClientApplication:()=>kl,isPlatformBrokerAvailable:()=>Jc,stubbedPublicClientApplication:()=>Rl,version:()=>ds});var n={};r.r(n),r.d(n,{postRequestFailed:()=>Te,unexpectedError:()=>Ie});var o={};r.r(o),r.d(o,{authorityMismatch:()=>je,authorityUriInsecure:()=>_e,cannotAllowPlatformBroker:()=>We,cannotSetOIDCOptions:()=>Qe,claimsRequestParsingError:()=>Re,emptyInputScopesError:()=>Ne,invalidAuthenticationHeader:()=>$e,invalidAuthorityMetadata:()=>De,invalidClaims:()=>qe,invalidCloudDiscoveryMetadata:()=>Be,invalidCodeChallengeMethod:()=>He,invalidPromptValue:()=>Oe,logoutRequestEmpty:()=>Le,missingNonceAuthenticationHeader:()=>Ge,missingSshJwk:()=>Ke,missingSshKid:()=>ze,pkceParamsMissing:()=>xe,redirectUriEmpty:()=>be,tokenRequestEmpty:()=>Ue,untrustedAuthority:()=>Fe,urlEmptyError:()=>Me,urlParseError:()=>Pe});var i={};r.r(i),r.d(i,{authTimeNotFound:()=>ut,authorizationCodeMissingFromServerResponse:()=>Ut,bindingKeyNotRemoved:()=>Lt,cannotAppendScopeSet:()=>vt,cannotRemoveEmptyScope:()=>yt,clientInfoDecodingError:()=>et,clientInfoEmptyError:()=>tt,deviceCodeExpired:()=>Tt,deviceCodePollingCancelled:()=>It,deviceCodeUnknownError:()=>At,emptyInputScopeSet:()=>wt,endSessionEndpointNotSupported:()=>Ht,endpointResolutionError:()=>ot,hashNotDeserialized:()=>at,invalidAssertion:()=>Pt,invalidCacheEnvironment:()=>Et,invalidCacheRecord:()=>St,invalidClientCredential:()=>Mt,invalidState:()=>ct,keyIdMissing:()=>xt,maxAgeTranspired:()=>gt,methodNotImplemented:()=>Kt,missingTenantIdError:()=>Ft,multipleMatchingAccounts:()=>mt,multipleMatchingAppMetadata:()=>ft,multipleMatchingTokens:()=>pt,nestedAppAuthBridgeDisabled:()=>zt,networkError:()=>it,noAccountFound:()=>bt,noAccountInSilentRequest:()=>kt,noCryptoObject:()=>Rt,noNetworkConnectivity:()=>Bt,nonceMismatch:()=>ht,nullOrEmptyToken:()=>nt,openIdConfigError:()=>st,requestCannotBeMade:()=>Ct,stateMismatch:()=>lt,stateNotFound:()=>dt,tokenClaimsCnfRequiredForSignedJwt:()=>qt,tokenParsingError:()=>rt,tokenRefreshRequired:()=>Nt,unexpectedCredentialType:()=>_t,userCanceled:()=>Dt,userTimeoutReached:()=>Ot});var s={};r.r(s),r.d(s,{authCodeOrNativeAccountIdRequired:()=>Lr,authCodeRequired:()=>Ur,authRequestNotSetError:()=>Sr,blockIframeReload:()=>Cr,blockNestedPopups:()=>yr,cryptoKeyNotFound:()=>qr,cryptoNonExistent:()=>nr,databaseNotOpen:()=>Rr,databaseUnavailable:()=>xr,earJweEmpty:()=>rr,earJwkEmpty:()=>tr,emptyNavigateUri:()=>or,emptyWindowError:()=>ur,failedToBuildHeaders:()=>Wr,failedToDecryptEarResponse:()=>Vr,failedToParseHeaders:()=>jr,failedToParseResponse:()=>Nr,getRequestFailed:()=>Mr,hashDoesNotContainKnownProperties:()=>ar,hashEmptyError:()=>ir,iframeClosedPrematurely:()=>vr,interactionInProgress:()=>dr,invalidBase64String:()=>$r,invalidCacheType:()=>Er,invalidPopTokenRequest:()=>Qr,monitorPopupTimeout:()=>pr,monitorWindowTimeout:()=>mr,nativeConnectionNotEstablished:()=>Kr,nativeExtensionNotInstalled:()=>Fr,nativeHandshakeTimeout:()=>Dr,nativePromptNotSupported:()=>Gr,noAccountError:()=>Ir,noNetworkConnectivity:()=>_r,noStateInHash:()=>sr,noTokenRequestCacheError:()=>Ar,nonBrowserEnvironment:()=>br,pkceNotCreated:()=>er,popupWindowError:()=>hr,postRequestFailed:()=>Pr,redirectInIframe:()=>fr,silentLogoutUnsupported:()=>wr,silentPromptValueError:()=>Tr,spaCodeAndNativeAccountIdPresent:()=>Hr,stateInteractionTypeMismatch:()=>lr,timedOut:()=>Jr,unableToAcquireTokenFromNativePlatform:()=>Br,unableToLoadToken:()=>Or,unableToParseState:()=>cr,unableToParseTokenRequestCacheError:()=>kr,uninitializedPublicClientApplication:()=>zr,userCancelled:()=>gr});var a={};r.r(a),r.d(a,{inMemRedirectUnavailable:()=>So,storageNotSupported:()=>Ao,stubbedPublicClientApplicationCalled:()=>ko});var c={};r.r(c),r.d(c,{blockAPICallsBeforeInitialize:()=>Do,blockAcquireTokenInPopups:()=>xo,blockNonBrowserEnvironment:()=>Bo,blockRedirectInIframe:()=>Ho,blockReloadInHiddenIframes:()=>Lo,clearHash:()=>Po,createGuid:()=>Go,getCurrentUri:()=>qo,getHomepage:()=>Uo,invoke:()=>Xt,invokeAsync:()=>Zt,isInIframe:()=>No,isInPopup:()=>Oo,preconnect:()=>zo,preflightCheck:()=>Fo,redirectPreflightCheck:()=>Ko,replaceHash:()=>Mo});var l={};r.r(l),r.d(l,{badToken:()=>Qs,consentRequired:()=>Gs,interactionRequired:()=>zs,loginRequired:()=>$s,nativeAccountUnavailable:()=>Ds,noTokensFound:()=>Bs,refreshTokenExpired:()=>Fs,uxNotAllowed:()=>Ks});const d={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},h=200,u=400,g=400,p=499,m=500,f=599,C=[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE],y=[...C,d.EMAIL_SCOPE],v="Content-Type",w="Content-Length",I="Retry-After",T="X-AnchorMailbox",A="WWW-Authenticate",k="Authentication-Info",S="x-ms-request-id",E="x-ms-httpver",b="active-account-filters",R="common",_="organizations",P="consumers",M="access_token",N="xms_cc",O={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},q={PLAIN:"plain",S256:"S256"},U="code",L="id_token token refresh_token",H={QUERY:"query",FRAGMENT:"fragment"},x="query",B="authorization_code",D="refresh_token",F="MSSTS",K="ADFS",z="Generic",G="-",$=".",Q={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},W="appmetadata",j="1",V="authority-metadata",J=86400,Y="config",X="cache",Z="network",ee="hardcoded_values",te={SCHEMA_VERSION:5,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},re={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},ne=60,oe=3600,ie="throttling",se="retry-after, h429",ae="invalid_grant",ce="client_mismatch",le="1",de="3",he="4",ue="2",ge="4",pe="5",me="0",fe="1",Ce="2",ye="3",ve="4",we={Jwt:"JWT",Jwk:"JWK",Pop:"pop"},Ie="unexpected_error",Te="post_request_failed",Ae={[Ie]:"Unexpected error in authentication.",[Te]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."},ke={unexpectedError:{code:Ie,desc:Ae[Ie]},postRequestFailed:{code:Te,desc:Ae[Te]}};class Se extends Error{constructor(e,t,r){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,Se.prototype),this.errorCode=e||d.EMPTY_STRING,this.errorMessage=t||d.EMPTY_STRING,this.subError=r||d.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function Ee(e,t){return new Se(e,t?`${Ae[e]} ${t}`:Ae[e])}const be="redirect_uri_empty",Re="claims_request_parsing_error",_e="authority_uri_insecure",Pe="url_parse_error",Me="empty_url_error",Ne="empty_input_scopes_error",Oe="invalid_prompt_value",qe="invalid_claims",Ue="token_request_empty",Le="logout_request_empty",He="invalid_code_challenge_method",xe="pkce_params_missing",Be="invalid_cloud_discovery_metadata",De="invalid_authority_metadata",Fe="untrusted_authority",Ke="missing_ssh_jwk",ze="missing_ssh_kid",Ge="missing_nonce_authentication_header",$e="invalid_authentication_header",Qe="cannot_set_OIDCOptions",We="cannot_allow_platform_broker",je="authority_mismatch",Ve={[be]:"A redirect URI is required for all calls, and none has been set.",[Re]:"Could not parse the given claims request object.",[_e]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[Pe]:"URL could not be parsed into appropriate segments.",[Me]:"URL was empty or null.",[Ne]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Oe]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[qe]:"Given claims parameter must be a stringified JSON object.",[Ue]:"Token request was empty and not found in cache.",[Le]:"The logout request was null or undefined.",[He]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[xe]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[Be]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[De]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[Fe]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[Ke]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[ze]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Ge]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[$e]:"Invalid authentication header provided",[Qe]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[We]:"Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.",[je]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."},Je={redirectUriNotSet:{code:be,desc:Ve[be]},claimsRequestParsingError:{code:Re,desc:Ve[Re]},authorityUriInsecure:{code:_e,desc:Ve[_e]},urlParseError:{code:Pe,desc:Ve[Pe]},urlEmptyError:{code:Me,desc:Ve[Me]},emptyScopesError:{code:Ne,desc:Ve[Ne]},invalidPrompt:{code:Oe,desc:Ve[Oe]},invalidClaimsRequest:{code:qe,desc:Ve[qe]},tokenRequestEmptyError:{code:Ue,desc:Ve[Ue]},logoutRequestEmptyError:{code:Le,desc:Ve[Le]},invalidCodeChallengeMethod:{code:He,desc:Ve[He]},invalidCodeChallengeParams:{code:xe,desc:Ve[xe]},invalidCloudDiscoveryMetadata:{code:Be,desc:Ve[Be]},invalidAuthorityMetadata:{code:De,desc:Ve[De]},untrustedAuthority:{code:Fe,desc:Ve[Fe]},missingSshJwk:{code:Ke,desc:Ve[Ke]},missingSshKid:{code:ze,desc:Ve[ze]},missingNonceAuthenticationHeader:{code:Ge,desc:Ve[Ge]},invalidAuthenticationHeader:{code:$e,desc:Ve[$e]},cannotSetOIDCOptions:{code:Qe,desc:Ve[Qe]},cannotAllowPlatformBroker:{code:We,desc:Ve[We]},authorityMismatch:{code:je,desc:Ve[je]}};class Ye extends Se{constructor(e){super(e,Ve[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,Ye.prototype)}}function Xe(e){return new Ye(e)}class Ze{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},r=e.split("&"),n=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach((e=>{if(e.trim()){const[r,o]=e.split(/=(.+)/g,2);r&&o&&(t[n(r)]=n(o))}})),t}static trimArrayEntries(e){return e.map((e=>e.trim()))}static removeEmptyStringsFromArray(e){return e.filter((e=>!!e))}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}const et="client_info_decoding_error",tt="client_info_empty_error",rt="token_parsing_error",nt="null_or_empty_token",ot="endpoints_resolution_error",it="network_error",st="openid_config_error",at="hash_not_deserialized",ct="invalid_state",lt="state_mismatch",dt="state_not_found",ht="nonce_mismatch",ut="auth_time_not_found",gt="max_age_transpired",pt="multiple_matching_tokens",mt="multiple_matching_accounts",ft="multiple_matching_appMetadata",Ct="request_cannot_be_made",yt="cannot_remove_empty_scope",vt="cannot_append_scopeset",wt="empty_input_scopeset",It="device_code_polling_cancelled",Tt="device_code_expired",At="device_code_unknown_error",kt="no_account_in_silent_request",St="invalid_cache_record",Et="invalid_cache_environment",bt="no_account_found",Rt="no_crypto_object",_t="unexpected_credential_type",Pt="invalid_assertion",Mt="invalid_client_credential",Nt="token_refresh_required",Ot="user_timeout_reached",qt="token_claims_cnf_required_for_signedjwt",Ut="authorization_code_missing_from_server_response",Lt="binding_key_not_removed",Ht="end_session_endpoint_not_supported",xt="key_id_missing",Bt="no_network_connectivity",Dt="user_canceled",Ft="missing_tenant_id_error",Kt="method_not_implemented",zt="nested_app_auth_bridge_disabled",Gt={[et]:"The client info could not be parsed/decoded correctly",[tt]:"The client info was empty",[rt]:"Token cannot be parsed",[nt]:"The token is null or empty",[ot]:"Endpoints cannot be resolved",[it]:"Network request failed",[st]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[at]:"The hash parameters could not be deserialized",[ct]:"State was not the expected format",[lt]:"State mismatch error",[dt]:"State not found",[ht]:"Nonce mismatch error",[ut]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[gt]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[pt]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[mt]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[ft]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[Ct]:"Token request cannot be made without authorization code or refresh token.",[yt]:"Cannot remove null or empty scope from ScopeSet",[vt]:"Cannot append ScopeSet",[wt]:"Empty input ScopeSet cannot be processed",[It]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[Tt]:"Device code is expired.",[At]:"Device code stopped polling for unknown reasons.",[kt]:"Please pass an account object, silent flow is not supported without account information",[St]:"Cache record object was null or undefined.",[Et]:"Invalid environment when attempting to create cache entry",[bt]:"No account found in cache for given key.",[Rt]:"No crypto object detected.",[_t]:"Unexpected credential type.",[Pt]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[Mt]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[Nt]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[Ot]:"User defined timeout for device code polling reached",[qt]:"Cannot generate a POP jwt if the token_claims are not populated",[Ut]:"Server response does not contain an authorization code to proceed",[Lt]:"Could not remove the credential's binding key from storage.",[Ht]:"The provided authority does not support logout",[xt]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[Bt]:"No network connectivity. Check your internet connection.",[Dt]:"User cancelled the flow.",[Ft]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[Kt]:"This method has not been implemented",[zt]:"The nested app auth bridge is disabled"},$t={clientInfoDecodingError:{code:et,desc:Gt[et]},clientInfoEmptyError:{code:tt,desc:Gt[tt]},tokenParsingError:{code:rt,desc:Gt[rt]},nullOrEmptyToken:{code:nt,desc:Gt[nt]},endpointResolutionError:{code:ot,desc:Gt[ot]},networkError:{code:it,desc:Gt[it]},unableToGetOpenidConfigError:{code:st,desc:Gt[st]},hashNotDeserialized:{code:at,desc:Gt[at]},invalidStateError:{code:ct,desc:Gt[ct]},stateMismatchError:{code:lt,desc:Gt[lt]},stateNotFoundError:{code:dt,desc:Gt[dt]},nonceMismatchError:{code:ht,desc:Gt[ht]},authTimeNotFoundError:{code:ut,desc:Gt[ut]},maxAgeTranspired:{code:gt,desc:Gt[gt]},multipleMatchingTokens:{code:pt,desc:Gt[pt]},multipleMatchingAccounts:{code:mt,desc:Gt[mt]},multipleMatchingAppMetadata:{code:ft,desc:Gt[ft]},tokenRequestCannotBeMade:{code:Ct,desc:Gt[Ct]},removeEmptyScopeError:{code:yt,desc:Gt[yt]},appendScopeSetError:{code:vt,desc:Gt[vt]},emptyInputScopeSetError:{code:wt,desc:Gt[wt]},DeviceCodePollingCancelled:{code:It,desc:Gt[It]},DeviceCodeExpired:{code:Tt,desc:Gt[Tt]},DeviceCodeUnknownError:{code:At,desc:Gt[At]},NoAccountInSilentRequest:{code:kt,desc:Gt[kt]},invalidCacheRecord:{code:St,desc:Gt[St]},invalidCacheEnvironment:{code:Et,desc:Gt[Et]},noAccountFound:{code:bt,desc:Gt[bt]},noCryptoObj:{code:Rt,desc:Gt[Rt]},unexpectedCredentialType:{code:_t,desc:Gt[_t]},invalidAssertion:{code:Pt,desc:Gt[Pt]},invalidClientCredential:{code:Mt,desc:Gt[Mt]},tokenRefreshRequired:{code:Nt,desc:Gt[Nt]},userTimeoutReached:{code:Ot,desc:Gt[Ot]},tokenClaimsRequired:{code:qt,desc:Gt[qt]},noAuthorizationCodeFromServer:{code:Ut,desc:Gt[Ut]},bindingKeyNotRemovedError:{code:Lt,desc:Gt[Lt]},logoutNotSupported:{code:Ht,desc:Gt[Ht]},keyIdMissing:{code:xt,desc:Gt[xt]},noNetworkConnectivity:{code:Bt,desc:Gt[Bt]},userCanceledError:{code:Dt,desc:Gt[Dt]},missingTenantIdError:{code:Ft,desc:Gt[Ft]},nestedAppAuthBridgeDisabled:{code:zt,desc:Gt[zt]}};class Qt extends Se{constructor(e,t){super(e,t?`${Gt[e]}: ${t}`:Gt[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,Qt.prototype)}}function Wt(e,t){return new Qt(e,t)}function jt(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function Vt(e){if(!e||e.indexOf("=")<0)return null;try{const t=jt(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.ear_jwe||r.error||r.error_description||r.state)return r}catch(e){throw Wt(at)}return null}function Jt(e,t=!0,r){const n=new Array;return e.forEach(((e,o)=>{!t&&r&&o in r?n.push(`${o}=${e}`):n.push(`${o}=${encodeURIComponent(e)}`)})),n.join("&")}class Yt{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw Xe(Me);e.includes("#")||(this._urlString=Yt.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Ze.endsWith(t,"?")?t=t.slice(0,-1):Ze.endsWith(t,"?/")&&(t=t.slice(0,-2)),Ze.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw Xe(Pe)}if(!e.HostNameAndPort||!e.PathSegments)throw Xe(Pe);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw Xe(_e)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return Yt.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),r=t.PathSegments;return!e||0===r.length||r[0]!==R&&r[0]!==_||(r[0]=e),Yt.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw Xe(Pe);const r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let n=r.AbsolutePath.split("/");return n=n.filter((e=>e&&e.length>0)),r.PathSegments=n,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw Xe(Pe);return r[2]}static getAbsoluteUrl(e,t){if(e[0]===d.FORWARD_SLASH){const r=new Yt(t).getUrlComponents();return r.Protocol+"//"+r.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new Yt(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!Vt(e)}}const Xt=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}try{const n=e(...i);return s?.end({success:!0}),r.trace(`Returning result from ${t}`),n}catch(e){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw s?.end({success:!1},e),e}},Zt=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}return n?.setPreQueueTime(t,o),e(...i).then((e=>(r.trace(`Returning result from ${t}`),s?.end({success:!0}),e))).catch((e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw s?.end({success:!1},e),e}))},er="pkce_not_created",tr="ear_jwk_empty",rr="ear_jwe_empty",nr="crypto_nonexistent",or="empty_navigate_uri",ir="hash_empty_error",sr="no_state_in_hash",ar="hash_does_not_contain_known_properties",cr="unable_to_parse_state",lr="state_interaction_type_mismatch",dr="interaction_in_progress",hr="popup_window_error",ur="empty_window_error",gr="user_cancelled",pr="monitor_popup_timeout",mr="monitor_window_timeout",fr="redirect_in_iframe",Cr="block_iframe_reload",yr="block_nested_popups",vr="iframe_closed_prematurely",wr="silent_logout_unsupported",Ir="no_account_error",Tr="silent_prompt_value_error",Ar="no_token_request_cache_error",kr="unable_to_parse_token_request_cache_error",Sr="auth_request_not_set_error",Er="invalid_cache_type",br="non_browser_environment",Rr="database_not_open",_r="no_network_connectivity",Pr="post_request_failed",Mr="get_request_failed",Nr="failed_to_parse_response",Or="unable_to_load_token",qr="crypto_key_not_found",Ur="auth_code_required",Lr="auth_code_or_nativeAccountId_required",Hr="spa_code_and_nativeAccountId_present",xr="database_unavailable",Br="unable_to_acquire_token_from_native_platform",Dr="native_handshake_timeout",Fr="native_extension_not_installed",Kr="native_connection_not_established",zr="uninitialized_public_client_application",Gr="native_prompt_not_supported",$r="invalid_base64_string",Qr="invalid_pop_token_request",Wr="failed_to_build_headers",jr="failed_to_parse_headers",Vr="failed_to_decrypt_ear_response",Jr="timed_out",Yr="For more visit: aka.ms/msaljs/browser-errors",Xr={[er]:"The PKCE code challenge and verifier could not be generated.",[tr]:"No EAR encryption key provided. This is unexpected.",[rr]:"Server response does not contain ear_jwe property. This is unexpected.",[nr]:"The crypto object or function is not available.",[or]:"Navigation URI is empty. Please check stack trace for more info.",[ir]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${Yr}`,[sr]:"Hash does not contain state. Please verify that the request originated from msal.",[ar]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${Yr}`,[cr]:"Unable to parse state. Please verify that the request originated from msal.",[lr]:"Hash contains state but the interaction type does not match the caller.",[dr]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${Yr}`,[hr]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[ur]:"window.open returned null or undefined window object.",[gr]:"User cancelled the flow.",[pr]:`Token acquisition in popup failed due to timeout.  ${Yr}`,[mr]:`Token acquisition in iframe failed due to timeout.  ${Yr}`,[fr]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[Cr]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${Yr}`,[yr]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[vr]:"The iframe being monitored was closed prematurely.",[wr]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[Ir]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Tr]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Ar]:"No token request found in cache.",[kr]:"The cached token request could not be parsed.",[Sr]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Er]:"Invalid cache type",[br]:"Login and token requests are not supported in non-browser environments.",[Rr]:"Database is not open!",[_r]:"No network connectivity. Check your internet connection.",[Pr]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Mr]:"Network request failed. Please check the network trace to determine root cause.",[Nr]:"Failed to parse network response. Check network trace.",[Or]:"Error loading token to cache.",[qr]:"Cryptographic Key or Keypair not found in browser storage.",[Ur]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Lr]:"An authorization code or nativeAccountId must be provided to this flow.",[Hr]:"Request cannot contain both spa code and native account id.",[xr]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[Br]:`Unable to acquire token from native platform.  ${Yr}`,[Dr]:"Timed out while attempting to establish connection to browser extension",[Fr]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[Kr]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${Yr}`,[zr]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${Yr}`,[Gr]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[$r]:"Invalid base64 encoded string.",[Qr]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[Wr]:"Failed to build request headers object.",[jr]:"Failed to parse response headers",[Vr]:"Failed to decrypt ear response",[Jr]:"The request timed out."},Zr={pkceNotGenerated:{code:er,desc:Xr[er]},cryptoDoesNotExist:{code:nr,desc:Xr[nr]},emptyNavigateUriError:{code:or,desc:Xr[or]},hashEmptyError:{code:ir,desc:Xr[ir]},hashDoesNotContainStateError:{code:sr,desc:Xr[sr]},hashDoesNotContainKnownPropertiesError:{code:ar,desc:Xr[ar]},unableToParseStateError:{code:cr,desc:Xr[cr]},stateInteractionTypeMismatchError:{code:lr,desc:Xr[lr]},interactionInProgress:{code:dr,desc:Xr[dr]},popupWindowError:{code:hr,desc:Xr[hr]},emptyWindowError:{code:ur,desc:Xr[ur]},userCancelledError:{code:gr,desc:Xr[gr]},monitorPopupTimeoutError:{code:pr,desc:Xr[pr]},monitorIframeTimeoutError:{code:mr,desc:Xr[mr]},redirectInIframeError:{code:fr,desc:Xr[fr]},blockTokenRequestsInHiddenIframeError:{code:Cr,desc:Xr[Cr]},blockAcquireTokenInPopupsError:{code:yr,desc:Xr[yr]},iframeClosedPrematurelyError:{code:vr,desc:Xr[vr]},silentLogoutUnsupportedError:{code:wr,desc:Xr[wr]},noAccountError:{code:Ir,desc:Xr[Ir]},silentPromptValueError:{code:Tr,desc:Xr[Tr]},noTokenRequestCacheError:{code:Ar,desc:Xr[Ar]},unableToParseTokenRequestCacheError:{code:kr,desc:Xr[kr]},authRequestNotSet:{code:Sr,desc:Xr[Sr]},invalidCacheType:{code:Er,desc:Xr[Er]},notInBrowserEnvironment:{code:br,desc:Xr[br]},databaseNotOpen:{code:Rr,desc:Xr[Rr]},noNetworkConnectivity:{code:_r,desc:Xr[_r]},postRequestFailed:{code:Pr,desc:Xr[Pr]},getRequestFailed:{code:Mr,desc:Xr[Mr]},failedToParseNetworkResponse:{code:Nr,desc:Xr[Nr]},unableToLoadTokenError:{code:Or,desc:Xr[Or]},signingKeyNotFoundInStorage:{code:qr,desc:Xr[qr]},authCodeRequired:{code:Ur,desc:Xr[Ur]},authCodeOrNativeAccountRequired:{code:Lr,desc:Xr[Lr]},spaCodeAndNativeAccountPresent:{code:Hr,desc:Xr[Hr]},databaseUnavailable:{code:xr,desc:Xr[xr]},unableToAcquireTokenFromNativePlatform:{code:Br,desc:Xr[Br]},nativeHandshakeTimeout:{code:Dr,desc:Xr[Dr]},nativeExtensionNotInstalled:{code:Fr,desc:Xr[Fr]},nativeConnectionNotEstablished:{code:Kr,desc:Xr[Kr]},uninitializedPublicClientApplication:{code:zr,desc:Xr[zr]},nativePromptNotSupported:{code:Gr,desc:Xr[Gr]},invalidBase64StringError:{code:$r,desc:Xr[$r]},invalidPopTokenRequest:{code:Qr,desc:Xr[Qr]}};class en extends Se{constructor(e,t){super(e,Xr[e],t),Object.setPrototypeOf(this,en.prototype),this.name="BrowserAuthError"}}function tn(e,t){return new en(e,t)}const rn={INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},nn="53ee284d-920a-4b59-9d30-a60315b26836",on="ppnbnpeolgkicgegkbkbjmhlideopiji",sn="MATS",an="MicrosoftEntra",cn="DOM API",ln="get-token-and-sign-out",dn="PlatformAuthDOMHandler",hn="PlatformAuthExtensionHandler",un="Handshake",gn="HandshakeResponse",pn="GetToken",mn="Response",fn={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},Cn="GET",yn="POST",vn="signin",wn="signout",In="request.origin",Tn="urlHash",An="request.params",kn="code.verifier",Sn="interaction.status",En="request.native",bn="msal.account.keys",Rn="msal.token.keys",_n="msal.version",Pn="wrapper.sku",Mn="wrapper.version",Nn={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var On;!function(e){e.Redirect="redirect",e.Popup="popup",e.Silent="silent",e.None="none"}(On||(On={}));const qn={Startup:"startup",Login:"login",Logout:"logout",AcquireToken:"acquireToken",SsoSilent:"ssoSilent",HandleRedirect:"handleRedirect",None:"none"},Un={scopes:C},Ln={React:"@azure/msal-react",Angular:"@azure/msal-angular"},Hn="msal.db",xn=`${Hn}.keys`,Bn={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},Dn=[Bn.Default,Bn.Skip,Bn.RefreshTokenAndNetwork],Fn="msal.browser.platform.auth.dom",Kn={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",NetworkClientSendPostRequestAsync:"networkClientSendPostRequestAsync",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",InitializeCache:"initializeCache",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",GetAuthCodeUrl:"getAuthCodeUrl",GetStandardParams:"getStandardParams",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",HandleResponseEar:"handleResponseEar",HandleResponsePlatformBroker:"handleResponsePlatformBroker",HandleResponseCode:"handleResponseCode",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",ImportExistingCache:"importExistingCache",SetUserData:"setUserData",LocalStorageUpdated:"localStorageUpdated",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues",GenerateHKDF:"generateHKDF",GenerateBaseKey:"generateBaseKey",Base64Decode:"base64Decode",UrlEncodeArr:"urlEncodeArr",Encrypt:"encrypt",Decrypt:"decrypt",GenerateEarKey:"generateEarKey",DecryptEarResponse:"decryptEarResponse"},zn=new Map([[Kn.AcquireTokenByCode,"ATByCode"],[Kn.AcquireTokenByRefreshToken,"ATByRT"],[Kn.AcquireTokenSilent,"ATS"],[Kn.AcquireTokenSilentAsync,"ATSAsync"],[Kn.AcquireTokenPopup,"ATPopup"],[Kn.AcquireTokenRedirect,"ATRedirect"],[Kn.CryptoOptsGetPublicKeyThumbprint,"CryptoGetPKThumb"],[Kn.CryptoOptsSignJwt,"CryptoSignJwt"],[Kn.SilentCacheClientAcquireToken,"SltCacheClientAT"],[Kn.SilentIframeClientAcquireToken,"SltIframeClientAT"],[Kn.SilentRefreshClientAcquireToken,"SltRClientAT"],[Kn.SsoSilent,"SsoSlt"],[Kn.StandardInteractionClientGetDiscoveredAuthority,"StdIntClientGetDiscAuth"],[Kn.FetchAccountIdWithNativeBroker,"FetchAccIdWithNtvBroker"],[Kn.NativeInteractionClientAcquireToken,"NtvIntClientAT"],[Kn.BaseClientCreateTokenRequestHeaders,"BaseClientCreateTReqHead"],[Kn.NetworkClientSendPostRequestAsync,"NetClientSendPost"],[Kn.RefreshTokenClientExecutePostToTokenEndpoint,"RTClientExecPost"],[Kn.AuthorizationCodeClientExecutePostToTokenEndpoint,"AuthCodeClientExecPost"],[Kn.BrokerHandhshake,"BrokerHandshake"],[Kn.AcquireTokenByRefreshTokenInBroker,"ATByRTInBroker"],[Kn.AcquireTokenByBroker,"ATByBroker"],[Kn.RefreshTokenClientExecuteTokenRequest,"RTClientExecTReq"],[Kn.RefreshTokenClientAcquireToken,"RTClientAT"],[Kn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,"RTClientATWithCachedRT"],[Kn.RefreshTokenClientAcquireTokenByRefreshToken,"RTClientATByRT"],[Kn.RefreshTokenClientCreateTokenRequestBody,"RTClientCreateTReqBody"],[Kn.AcquireTokenFromCache,"ATFromCache"],[Kn.SilentFlowClientAcquireCachedToken,"SltFlowClientATCached"],[Kn.SilentFlowClientGenerateResultFromCacheRecord,"SltFlowClientGenResFromCache"],[Kn.AcquireTokenBySilentIframe,"ATBySltIframe"],[Kn.InitializeBaseRequest,"InitBaseReq"],[Kn.InitializeSilentRequest,"InitSltReq"],[Kn.InitializeClientApplication,"InitClientApplication"],[Kn.InitializeCache,"InitCache"],[Kn.ImportExistingCache,"importCache"],[Kn.SetUserData,"setUserData"],[Kn.LocalStorageUpdated,"localStorageUpdated"],[Kn.SilentIframeClientTokenHelper,"SIClientTHelper"],[Kn.SilentHandlerInitiateAuthRequest,"SHandlerInitAuthReq"],[Kn.SilentHandlerMonitorIframeForHash,"SltHandlerMonitorIframeForHash"],[Kn.SilentHandlerLoadFrame,"SHandlerLoadFrame"],[Kn.SilentHandlerLoadFrameSync,"SHandlerLoadFrameSync"],[Kn.StandardInteractionClientCreateAuthCodeClient,"StdIntClientCreateAuthCodeClient"],[Kn.StandardInteractionClientGetClientConfiguration,"StdIntClientGetClientConf"],[Kn.StandardInteractionClientInitializeAuthorizationRequest,"StdIntClientInitAuthReq"],[Kn.GetAuthCodeUrl,"GetAuthCodeUrl"],[Kn.HandleCodeResponseFromServer,"HandleCodeResFromServer"],[Kn.HandleCodeResponse,"HandleCodeResp"],[Kn.HandleResponseEar,"HandleRespEar"],[Kn.HandleResponseCode,"HandleRespCode"],[Kn.HandleResponsePlatformBroker,"HandleRespPlatBroker"],[Kn.UpdateTokenEndpointAuthority,"UpdTEndpointAuth"],[Kn.AuthClientAcquireToken,"AuthClientAT"],[Kn.AuthClientExecuteTokenRequest,"AuthClientExecTReq"],[Kn.AuthClientCreateTokenRequestBody,"AuthClientCreateTReqBody"],[Kn.PopTokenGenerateCnf,"PopTGenCnf"],[Kn.PopTokenGenerateKid,"PopTGenKid"],[Kn.HandleServerTokenResponse,"HandleServerTRes"],[Kn.DeserializeResponse,"DeserializeRes"],[Kn.AuthorityFactoryCreateDiscoveredInstance,"AuthFactCreateDiscInst"],[Kn.AuthorityResolveEndpointsAsync,"AuthResolveEndpointsAsync"],[Kn.AuthorityResolveEndpointsFromLocalSources,"AuthResolveEndpointsFromLocal"],[Kn.AuthorityGetCloudDiscoveryMetadataFromNetwork,"AuthGetCDMetaFromNet"],[Kn.AuthorityUpdateCloudDiscoveryMetadata,"AuthUpdCDMeta"],[Kn.AuthorityGetEndpointMetadataFromNetwork,"AuthUpdCDMetaFromNet"],[Kn.AuthorityUpdateEndpointMetadata,"AuthUpdEndpointMeta"],[Kn.AuthorityUpdateMetadataWithRegionalInformation,"AuthUpdMetaWithRegInfo"],[Kn.RegionDiscoveryDetectRegion,"RegDiscDetectReg"],[Kn.RegionDiscoveryGetRegionFromIMDS,"RegDiscGetRegFromIMDS"],[Kn.RegionDiscoveryGetCurrentVersion,"RegDiscGetCurrentVer"],[Kn.AcquireTokenByCodeAsync,"ATByCodeAsync"],[Kn.GetEndpointMetadataFromNetwork,"GetEndpointMetaFromNet"],[Kn.GetCloudDiscoveryMetadataFromNetworkMeasurement,"GetCDMetaFromNet"],[Kn.HandleRedirectPromiseMeasurement,"HandleRedirectPromise"],[Kn.HandleNativeRedirectPromiseMeasurement,"HandleNtvRedirectPromise"],[Kn.UpdateCloudDiscoveryMetadataMeasurement,"UpdateCDMeta"],[Kn.UsernamePasswordClientAcquireToken,"UserPassClientAT"],[Kn.NativeMessageHandlerHandshake,"NtvMsgHandlerHandshake"],[Kn.NativeGenerateAuthResult,"NtvGenAuthRes"],[Kn.RemoveHiddenIframe,"RemoveHiddenIframe"],[Kn.ClearTokensAndKeysWithClaims,"ClearTAndKeysWithClaims"],[Kn.CacheManagerGetRefreshToken,"CacheManagerGetRT"],[Kn.GeneratePkceCodes,"GenPkceCodes"],[Kn.GenerateCodeVerifier,"GenCodeVerifier"],[Kn.GenerateCodeChallengeFromVerifier,"GenCodeChallengeFromVerifier"],[Kn.Sha256Digest,"Sha256Digest"],[Kn.GetRandomValues,"GetRandomValues"],[Kn.GenerateHKDF,"genHKDF"],[Kn.GenerateBaseKey,"genBaseKey"],[Kn.Base64Decode,"b64Decode"],[Kn.UrlEncodeArr,"urlEncArr"],[Kn.Encrypt,"encrypt"],[Kn.Decrypt,"decrypt"],[Kn.GenerateEarKey,"genEarKey"],[Kn.DecryptEarResponse,"decryptEarResp"]]),Gn=1,$n=2,Qn=new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status","multiMatchedAT","multiMatchedID","multiMatchedRT","unencryptedCacheCount","encryptedCacheExpiredCount"]);function Wn(e){return encodeURIComponent(Vn(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function jn(e){return Jn(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Vn(e){return Jn((new TextEncoder).encode(e))}function Jn(e){const t=Array.from(e,(e=>String.fromCodePoint(e))).join("");return btoa(t)}function Yn(e){return(new TextDecoder).decode(Xn(e))}function Xn(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw tn($r)}const r=atob(t);return Uint8Array.from(r,(e=>e.codePointAt(0)||0))}const Zn="AES-GCM",eo="HKDF",to="SHA-256",ro=new Uint8Array([1,0,1]),no="0123456789abcdef",oo=new Uint32Array(1),io="raw",so="encrypt",ao="decrypt",co={name:"RSASSA-PKCS1-v1_5",hash:to,modulusLength:2048,publicExponent:ro};async function lo(e,t,r){t?.addQueueMeasurement(Kn.Sha256Digest,r);const n=(new TextEncoder).encode(e);return window.crypto.subtle.digest(to,n)}function ho(e){return window.crypto.getRandomValues(e)}function uo(){return window.crypto.getRandomValues(oo),oo[0]}function go(){const e=Date.now(),t=1024*uo()+(1023&uo()),r=new Uint8Array(16),n=Math.trunc(t/2**30),o=t&2**30-1,i=uo();r[0]=e/2**40,r[1]=e/2**32,r[2]=e/2**24,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|n>>>8,r[7]=n,r[8]=128|o>>>24,r[9]=o>>>16,r[10]=o>>>8,r[11]=o,r[12]=i>>>24,r[13]=i>>>16,r[14]=i>>>8,r[15]=i;let s="";for(let e=0;e<r.length;e++)s+=no.charAt(r[e]>>>4),s+=no.charAt(15&r[e]),3!==e&&5!==e&&7!==e&&9!==e||(s+="-");return s}async function po(e){return window.crypto.subtle.exportKey("jwk",e)}async function mo(){const e=await Co(),t={alg:"dir",kty:"oct",k:jn(new Uint8Array(e))};return Vn(JSON.stringify(t))}async function fo(e,t){const r=t.split(".");if(5!==r.length)throw tn(Vr,"jwe_length");const n=await async function(e){const t=Yn(e),r=Xn(JSON.parse(t).k);return window.crypto.subtle.importKey(io,r,Zn,!1,[ao])}(e).catch((()=>{throw tn(Vr,"import_key")}));try{const e=(new TextEncoder).encode(r[0]),t=Xn(r[2]),o=Xn(r[3]),i=Xn(r[4]),s=8*i.byteLength,a=new Uint8Array(o.length+i.length);a.set(o),a.set(i,o.length);const c=await window.crypto.subtle.decrypt({name:Zn,iv:t,tagLength:s,additionalData:e},n,a);return(new TextDecoder).decode(c)}catch(e){throw tn(Vr,"decrypt")}}async function Co(){const e=await window.crypto.subtle.generateKey({name:Zn,length:256},!0,[so,ao]);return window.crypto.subtle.exportKey(io,e)}async function yo(e){return window.crypto.subtle.importKey(io,e,eo,!1,["deriveKey"])}async function vo(e,t,r){return window.crypto.subtle.deriveKey({name:eo,salt:t,hash:to,info:(new TextEncoder).encode(r)},e,{name:Zn,length:256},!1,[so,ao])}async function wo(e,t,r){const n=(new TextEncoder).encode(t),o=window.crypto.getRandomValues(new Uint8Array(16)),i=await vo(e,o,r),s=await window.crypto.subtle.encrypt({name:Zn,iv:new Uint8Array(12)},i,n);return{data:jn(new Uint8Array(s)),nonce:jn(o)}}async function Io(e,t,r,n){const o=Xn(n),i=await vo(e,Xn(t),r),s=await window.crypto.subtle.decrypt({name:Zn,iv:new Uint8Array(12)},i,o);return(new TextDecoder).decode(s)}async function To(e){const t=await lo(e);return jn(new Uint8Array(t))}const Ao="storage_not_supported",ko="stubbed_public_client_application_called",So="in_mem_redirect_unavailable",Eo={[Ao]:"Given storage configuration option was not supported.",[ko]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[So]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."},bo={storageNotSupportedError:{code:Ao,desc:Eo[Ao]},stubPcaInstanceCalled:{code:ko,desc:Eo[ko]},inMemRedirectUnavailable:{code:So,desc:Eo[So]}};class Ro extends Se{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,Ro.prototype)}}function _o(e){return new Ro(e,Eo[e])}function Po(e){e.location.hash="","function"==typeof e.history.replaceState&&e.history.replaceState(null,"",`${e.location.origin}${e.location.pathname}${e.location.search}`)}function Mo(e){const t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}function No(){return window.parent!==window}function Oo(){return"undefined"!=typeof window&&!!window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${rn.POPUP_NAME_PREFIX}.`)}function qo(){return"undefined"!=typeof window&&window.location?window.location.href.split("?")[0].split("#")[0]:""}function Uo(){const e=new Yt(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function Lo(){if(Yt.hashContainsKnownProperties(window.location.hash)&&No())throw tn(Cr)}function Ho(e){if(No()&&!e)throw tn(fr)}function xo(){if(Oo())throw tn(yr)}function Bo(){if("undefined"==typeof window)throw tn(br)}function Do(e){if(!e)throw tn(zr)}function Fo(e){Bo(),Lo(),xo(),Do(e)}function Ko(e,t){if(Fo(e),Ho(t.system.allowRedirectInIframe),t.cache.cacheLocation===fn.MemoryStorage&&!t.cache.storeAuthStateInCookie)throw _o(So)}function zo(e){const t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout((()=>{try{document.head.removeChild(t)}catch{}}),1e4)}function Go(){return go()}var $o;!function(e){e[e.Error=0]="Error",e[e.Warning=1]="Warning",e[e.Info=2]="Info",e[e.Verbose=3]="Verbose",e[e.Trace=4]="Trace"}($o||($o={}));class Qo{constructor(e,t,r){this.level=$o.Info;const n=e||Qo.createDefaultLoggerOptions();this.localCallback=n.loggerCallback||(()=>{}),this.piiLoggingEnabled=n.piiLoggingEnabled||!1,this.level="number"==typeof n.logLevel?n.logLevel:$o.Info,this.correlationId=n.correlationId||d.EMPTY_STRING,this.packageName=t||d.EMPTY_STRING,this.packageVersion=r||d.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:$o.Info}}clone(e,t,r){return new Qo({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`${`[${(new Date).toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${$o[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(e,t){this.logMessage(e,{logLevel:$o.Error,containsPii:!1,correlationId:t||d.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:$o.Error,containsPii:!0,correlationId:t||d.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:$o.Warning,containsPii:!1,correlationId:t||d.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:$o.Warning,containsPii:!0,correlationId:t||d.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:$o.Info,containsPii:!1,correlationId:t||d.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:$o.Info,containsPii:!0,correlationId:t||d.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:$o.Verbose,containsPii:!1,correlationId:t||d.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:$o.Verbose,containsPii:!0,correlationId:t||d.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:$o.Trace,containsPii:!1,correlationId:t||d.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:$o.Trace,containsPii:!0,correlationId:t||d.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}const Wo={AAD:"AAD",OIDC:"OIDC",EAR:"EAR"},jo={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"},Vo={createNewGuid:()=>{throw Wt(Kt)},base64Decode:()=>{throw Wt(Kt)},base64Encode:()=>{throw Wt(Kt)},base64UrlEncode:()=>{throw Wt(Kt)},encodeKid:()=>{throw Wt(Kt)},async getPublicKeyThumbprint(){throw Wt(Kt)},async removeTokenBindingKey(){throw Wt(Kt)},async clearKeystore(){throw Wt(Kt)},async signJwt(){throw Wt(Kt)},async hashString(){throw Wt(Kt)}},Jo="@azure/msal-common",Yo="15.8.0";function Xo(e,t){const r=function(e){if(!e)throw Wt(nt);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw Wt(rt);return t[2]}(e);try{const e=t(r);return JSON.parse(e)}catch(e){throw Wt(rt)}}function Zo(e,t){if(0===t||Date.now()-3e5>e+t)throw Wt(gt)}function ei(){return Math.round((new Date).getTime()/1e3)}function ti(e){return e.getTime()/1e3}function ri(e){return e?new Date(1e3*Number(e)):new Date}function ni(e,t){const r=Number(e)||0;return ei()+t>r}function oi(e){return Number(e)>ei()}function ii(e){return[di(e),hi(e),ui(e),gi(e),pi(e)].join(G).toLowerCase()}function si(e,t,r,n,o){return{credentialType:Q.ID_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,realm:o}}function ai(e,t,r,n,o,i,s,a,c,l,d,h,u,g,p){const m={homeAccountId:e,credentialType:Q.ACCESS_TOKEN,secret:r,cachedAt:ei().toString(),expiresOn:s.toString(),extendedExpiresOn:a.toString(),environment:t,clientId:n,realm:o,target:i,tokenType:d||re.BEARER};if(h&&(m.userAssertionHash=h),l&&(m.refreshOn=l.toString()),g&&(m.requestedClaims=g,m.requestedClaimsHash=p),m.tokenType?.toLowerCase()!==re.BEARER.toLowerCase())switch(m.credentialType=Q.ACCESS_TOKEN_WITH_AUTH_SCHEME,m.tokenType){case re.POP:const e=Xo(r,c);if(!e?.cnf?.kid)throw Wt(qt);m.keyId=e.cnf.kid;break;case re.SSH:m.keyId=u}return m}function ci(e,t,r,n,o,i,s){const a={credentialType:Q.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r};return i&&(a.userAssertionHash=i),o&&(a.familyId=o),s&&(a.expiresOn=s.toString()),a}function li(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function di(e){return[e.homeAccountId,e.environment].join(G).toLowerCase()}function hi(e){const t=e.credentialType===Q.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(G).toLowerCase()}function ui(e){return(e.target||"").toLowerCase()}function gi(e){return(e.requestedClaimsHash||"").toLowerCase()}function pi(e){return e.tokenType&&e.tokenType.toLowerCase()!==re.BEARER.toLowerCase()?e.tokenType.toLowerCase():""}function mi(){return ei()+J}function fi(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function Ci(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function yi(e){return e.expiresAt<=ei()}class vi{constructor(e){const t=e?Ze.trimArrayEntries([...e]):[],r=t?Ze.removeEmptyStringsFromArray(t):[];if(!r||!r.length)throw Xe(Ne);this.scopes=new Set,r.forEach((e=>this.scopes.add(e)))}static fromString(e){const t=(e||d.EMPTY_STRING).split(" ");return new vi(t)}static createSearchScopes(e){const t=new vi(e);return t.containsOnlyOIDCScopes()?t.removeScope(d.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}containsScope(e){const t=this.printScopesLowerCase().split(" "),r=new vi(t);return!!e&&r.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&(this.scopes.size>=e.scopes.size&&e.asArray().every((e=>this.containsScope(e))))}containsOnlyOIDCScopes(){let e=0;return y.forEach((t=>{this.containsScope(t)&&(e+=1)})),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach((e=>this.appendScope(e)))}catch(e){throw Wt(vt)}}removeScope(e){if(!e)throw Wt(yt);this.scopes.delete(e.trim())}removeOIDCScopes(){y.forEach((e=>{this.scopes.delete(e)}))}unionScopeSets(e){if(!e)throw Wt(wt);const t=new Set;return e.scopes.forEach((e=>t.add(e.toLowerCase()))),this.scopes.forEach((e=>t.add(e.toLowerCase()))),t}intersectingScopeSets(e){if(!e)throw Wt(wt);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),r=e.getScopeCount(),n=this.getScopeCount();return t.size<n+r}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach((t=>e.push(t))),e}printScopes(){if(this.scopes){return this.asArray().join(" ")}return d.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function wi(e,t){if(!e)throw Wt(tt);try{const r=t(e);return JSON.parse(r)}catch(e){throw Wt(et)}}function Ii(e){if(!e)throw Wt(et);const t=e.split($,2);return{uid:t[0],utid:t.length<2?d.EMPTY_STRING:t[1]}}function Ti(e,t){return!!e&&!!t&&e===t.split(".")[1]}function Ai(e,t,r,n){if(n){const{oid:t,sub:r,tid:o,name:i,tfp:s,acr:a}=n,c=o||s||a||"";return{tenantId:c,localAccountId:t||r||"",name:i,isHomeTenant:Ti(c,e)}}return{tenantId:r,localAccountId:t,isHomeTenant:Ti(r,e)}}function ki(e,t,r,n){let o=e;if(t){const{isHomeTenant:r,...n}=t;o={...e,...n}}if(r){const{isHomeTenant:t,...i}=Ai(e.homeAccountId,e.localAccountId,e.tenantId,r);return o={...o,...i,idTokenClaims:r,idToken:n},o}return o}const Si=0,Ei=1,bi=2,Ri=3;function _i(e){if(e){return e.tid||e.tfp||e.acr||null}return null}class Pi{generateAccountId(){return[this.homeAccountId,this.environment].join(G).toLowerCase()}generateAccountKey(){return Pi.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map((e=>[e.tenantId,e])))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(G).toLowerCase()}static createAccount(e,t,r){const n=new Pi;let o;t.authorityType===Ei?n.authorityType=K:t.protocolMode===Wo.OIDC?n.authorityType=z:n.authorityType=F,e.clientInfo&&r&&(o=wi(e.clientInfo,r)),n.clientInfo=e.clientInfo,n.homeAccountId=e.homeAccountId,n.nativeAccountId=e.nativeAccountId;const i=e.environment||t&&t.getPreferredCache();if(!i)throw Wt(Et);n.environment=i,n.realm=o?.utid||_i(e.idTokenClaims)||"",n.localAccountId=o?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const s=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,a=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(n.username=s||a||"",n.name=e.idTokenClaims?.name||"",n.cloudGraphHostName=e.cloudGraphHostName,n.msGraphHost=e.msGraphHost,e.tenantProfiles)n.tenantProfiles=e.tenantProfiles;else{const t=Ai(e.homeAccountId,n.localAccountId,n.realm,e.idTokenClaims);n.tenantProfiles=[t]}return n}static createFromAccountInfo(e,t,r){const n=new Pi;return n.authorityType=e.authorityType||z,n.homeAccountId=e.homeAccountId,n.localAccountId=e.localAccountId,n.nativeAccountId=e.nativeAccountId,n.realm=e.tenantId,n.environment=e.environment,n.username=e.username,n.name=e.name,n.cloudGraphHostName=t,n.msGraphHost=r,n.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),n}static generateHomeAccountId(e,t,r,n,o){if(t!==Ei&&t!==bi){if(e)try{const t=wi(e,n.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}r.warning("No client info in response")}return o?.sub||""}static isAccountEntity(e){return!!e&&(e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"))}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let n=!0;if(r){const r=e.idTokenClaims||{},o=t.idTokenClaims||{};n=r.iat===o.iat&&r.nonce===o.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&n}}const Mi={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},Ni={metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},Oi=new Set;function qi(e,t,r,n){if(n?.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){const o=Ui(t,e);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function Ui(e,t){for(let r=0;r<e.length;r++){const n=e[r];if(n.aliases.includes(t))return n}return null}Ni.metadata.forEach((e=>{e.aliases.forEach((e=>{Oi.add(e)}))}));const Li="cache_quota_exceeded",Hi="cache_error_unknown",xi={[Li]:"Exceeded cache storage capacity.",[Hi]:"Unexpected error occurred when using cache storage."};class Bi extends Se{constructor(e,t){const r=t||(xi[e]?xi[e]:xi[Hi]);super(`${e}: ${r}`),Object.setPrototypeOf(this,Bi.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}function Di(e){return e instanceof Error?"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota")?new Bi(Li):new Bi(e.name,e.message):new Bi(Hi)}class Fi{constructor(e,t,r,n,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(Jo,Yo),this.staticAuthorityOptions=o,this.performanceClient=n}getAllAccounts(e,t){return this.buildTenantProfiles(this.getAccountsFilteredBy(e,t),t,e)}getAccountInfoFilteredBy(e,t){const r=this.getAllAccounts(e,t);if(r.length>1){return r.sort((e=>e.idTokenClaims?-1:1))[0]}return 1===r.length?r[0]:null}getBaseAccountInfo(e,t){const r=this.getAccountsFilteredBy(e,t);return r.length>0?r[0].getAccountInfo():null}buildTenantProfiles(e,t,r){return e.flatMap((e=>this.getTenantProfilesFromAccountEntity(e,t,r?.tenantId,r)))}getTenantedAccountInfoByFilter(e,t,r,n,o){let i,s=null;if(o&&!this.tenantProfileMatchesFilter(r,o))return null;const a=this.getIdToken(e,n,t,r.tenantId);return a&&(i=Xo(a.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(i,o))?null:(s=ki(e,r,i,a?.secret),s)}getTenantProfilesFromAccountEntity(e,t,r,n){const o=e.getAccountInfo();let i=o.tenantProfiles||new Map;const s=this.getTokenKeys();if(r){const e=i.get(r);if(!e)return[];i=new Map([[r,e]])}const a=[];return i.forEach((e=>{const r=this.getTenantedAccountInfoByFilter(o,s,e,t,n);r&&a.push(r)})),a}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId))&&((!t.name||e.name===t.name)&&(void 0===t.isHomeTenant||e.isHomeTenant===t.isHomeTenant))}idTokenClaimsMatchTenantProfileFilter(e,t){if(t){if(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))return!1;if(t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint))return!1;if(t.username&&!this.matchUsername(e.preferred_username,t.username))return!1;if(t.name&&!this.matchName(e,t.name))return!1;if(t.sid&&!this.matchSid(e,t.sid))return!1}return!0}async saveCacheRecord(e,t,r){if(!e)throw Wt(St);try{e.account&&await this.setAccount(e.account,t),e.idToken&&!1!==r?.idToken&&await this.setIdTokenCredential(e.idToken,t),e.accessToken&&!1!==r?.accessToken&&await this.saveAccessToken(e.accessToken,t),e.refreshToken&&!1!==r?.refreshToken&&await this.setRefreshTokenCredential(e.refreshToken,t),e.appMetadata&&this.setAppMetadata(e.appMetadata,t)}catch(e){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Se?e:Di(e)}}async saveAccessToken(e,t){const r={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),o=vi.fromString(e.target);n.accessToken.forEach((e=>{if(!this.accessTokenKeyMatchesFilter(e,r,!1))return;const n=this.getAccessTokenCredential(e,t);if(n&&this.credentialMatchesFilter(n,r)){vi.fromString(n.target).intersectingScopeSets(o)&&this.removeAccessToken(e,t)}})),await this.setAccessTokenCredential(e,t)}getAccountsFilteredBy(e,t){const r=this.getAccountKeys(),n=[];return r.forEach((r=>{if(!this.isAccountKey(r,e.homeAccountId))return;const o=this.getAccount(r,t);if(!o)return;if(e.homeAccountId&&!this.matchHomeAccountId(o,e.homeAccountId))return;if(e.username&&!this.matchUsername(o.username,e.username))return;if(e.environment&&!this.matchEnvironment(o,e.environment))return;if(e.realm&&!this.matchRealm(o,e.realm))return;if(e.nativeAccountId&&!this.matchNativeAccountId(o,e.nativeAccountId))return;if(e.authorityType&&!this.matchAuthorityType(o,e.authorityType))return;const i={localAccountId:e?.localAccountId,name:e?.name},s=o.tenantProfiles?.filter((e=>this.tenantProfileMatchesFilter(e,i)));s&&0===s.length||n.push(o)})),n}isAccountKey(e,t,r){return!(e.split(G).length<3)&&(!(t&&!e.toLowerCase().includes(t.toLowerCase()))&&!(r&&!e.toLowerCase().includes(r.toLowerCase())))}isCredentialKey(e){if(e.split(G).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(Q.ID_TOKEN.toLowerCase())&&-1===t.indexOf(Q.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(Q.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(Q.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(Q.REFRESH_TOKEN.toLowerCase())>-1){const e=`${Q.REFRESH_TOKEN}${G}${this.clientId}${G}`,r=`${Q.REFRESH_TOKEN}${G}${j}${G}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(r.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===Q.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===re.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){const t=this.getKeys(),r={};return t.forEach((t=>{if(!this.isAppMetadata(t))return;const n=this.getAppMetadata(t);n&&(e.environment&&!this.matchEnvironment(n,e.environment)||e.clientId&&!this.matchClientId(n,e.clientId)||(r[t]=n))})),r}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let r=null;return t.forEach((t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const n=this.getAuthorityMetadata(t);n&&-1!==n.aliases.indexOf(e)&&(r=n)})),r}removeAllAccounts(e){this.getAccountKeys().forEach((t=>{this.removeAccount(t,e)}))}removeAccount(e,t){const r=this.getAccount(e,t);r&&(this.removeAccountContext(r,t),this.removeItem(e,t))}removeAccountContext(e,t){const r=this.getTokenKeys(),n=e.generateAccountId();r.idToken.forEach((e=>{0===e.indexOf(n)&&this.removeIdToken(e,t)})),r.accessToken.forEach((e=>{0===e.indexOf(n)&&this.removeAccessToken(e,t)})),r.refreshToken.forEach((e=>{0===e.indexOf(n)&&this.removeRefreshToken(e,t)}))}removeAccessToken(e,t){const r=this.getAccessTokenCredential(e,t);if(this.removeItem(e,t),this.performanceClient.incrementFields({accessTokensRemoved:1},t),!r||r.credentialType.toLowerCase()!==Q.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()||r.tokenType!==re.POP)return;const n=r.keyId;n&&this.cryptoImpl.removeTokenBindingKey(n).catch((()=>{this.commonLogger.error(`Failed to remove token binding key ${n}`,t),this.performanceClient?.incrementFields({removeTokenBindingKeyFailure:1},t)}))}removeAppMetadata(e){return this.getKeys().forEach((t=>{this.isAppMetadata(t)&&this.removeItem(t,e)})),!0}readAccountFromCache(e,t){const r=Pi.generateAccountCacheKey(e);return this.getAccount(r,t)}getIdToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getIdToken called");const i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:Q.ID_TOKEN,clientId:this.clientId,realm:n},s=this.getIdTokensByFilter(i,t,r),a=s.size;if(a<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(a>1){let r=s;if(!n){const t=new Map;s.forEach(((r,n)=>{r.realm===e.tenantId&&t.set(n,r)}));const n=t.size;if(n<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(1===n)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),t.values().next().value;r=t}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),r.forEach(((e,r)=>{this.removeIdToken(r,t)})),o&&t&&o.addFields({multiMatchedID:s.size},t),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t,r){const n=r&&r.idToken||this.getTokenKeys().idToken,o=new Map;return n.forEach((r=>{if(!this.idTokenKeyMatchesFilter(r,{clientId:this.clientId,...e}))return;const n=this.getIdTokenCredential(r,t);n&&this.credentialMatchesFilter(n,e)&&o.set(r,n)})),o}idTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return(!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e,t){this.removeItem(e,t)}removeRefreshToken(e,t){this.removeItem(e,t)}getAccessToken(e,t,r,n){const o=t.correlationId;this.commonLogger.trace("CacheManager - getAccessToken called",o);const i=vi.createSearchScopes(t.scopes),s=t.authenticationScheme||re.BEARER,a=s&&s.toLowerCase()!==re.BEARER.toLowerCase()?Q.ACCESS_TOKEN_WITH_AUTH_SCHEME:Q.ACCESS_TOKEN,c={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:a,clientId:this.clientId,realm:n||e.tenantId,target:i,tokenType:s,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},l=r&&r.accessToken||this.getTokenKeys().accessToken,d=[];l.forEach((e=>{if(this.accessTokenKeyMatchesFilter(e,c,!0)){const t=this.getAccessTokenCredential(e,o);t&&this.credentialMatchesFilter(t,c)&&d.push(t)}}));const h=d.length;return h<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found",o),null):h>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them",o),d.forEach((e=>{this.removeAccessToken(ii(e),o)})),this.performanceClient.addFields({multiMatchedAT:d.length},o),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token",o),d[0])}accessTokenKeyMatchesFilter(e,t,r){const n=e.toLowerCase();if(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===n.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===n.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!n.includes(e[t].toLowerCase()))return!1;if(!r&&n.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e,t){const r=this.getTokenKeys(),n=[];return r.accessToken.forEach((r=>{if(!this.accessTokenKeyMatchesFilter(r,e,!0))return;const o=this.getAccessTokenCredential(r,t);o&&this.credentialMatchesFilter(o,e)&&n.push(o)})),n}getRefreshToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getRefreshToken called");const i=t?j:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:Q.REFRESH_TOKEN,clientId:this.clientId,familyId:i},a=n&&n.refreshToken||this.getTokenKeys().refreshToken,c=[];a.forEach((e=>{if(this.refreshTokenKeyMatchesFilter(e,s)){const t=this.getRefreshTokenCredential(e,r);t&&this.credentialMatchesFilter(t,s)&&c.push(t)}}));const l=c.length;return l<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(l>1&&o&&r&&o.addFields({multiMatchedRT:l},r),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),c[0])}refreshTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return(!t.familyId||-1!==r.indexOf(t.familyId.toLowerCase()))&&(!(!t.familyId&&t.clientId&&-1===r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase())))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),n=Object.keys(r).map((e=>r[e])),o=n.length;if(o<1)return null;if(o>1)throw Wt(ft);return n[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==j)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!(!e||"string"!=typeof e||t?.toLowerCase()!==e.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const r=function(e,t){let r;const n=e.canonicalAuthority;if(n){const o=new Yt(n).getUrlComponents().HostNameAndPort;r=qi(o,e.cloudDiscoveryMetadata?.metadata,Y,t)||qi(o,Ni.metadata,ee,t)||e.knownAuthorities}return r||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}const r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||(e.preferred_username===t||e.upn===t)}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){if(e.credentialType!==Q.ACCESS_TOKEN&&e.credentialType!==Q.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)return!1;return vi.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(W)}isAuthorityMetadata(e){return-1!==e.indexOf(V)}generateAuthorityMetadataCacheKey(e){return`${V}-${this.clientId}-${e}`}static toObject(e,t){for(const r in t)e[r]=t[r];return e}}class Ki extends Fi{async setAccount(){throw Wt(Kt)}getAccount(){throw Wt(Kt)}async setIdTokenCredential(){throw Wt(Kt)}getIdTokenCredential(){throw Wt(Kt)}async setAccessTokenCredential(){throw Wt(Kt)}getAccessTokenCredential(){throw Wt(Kt)}async setRefreshTokenCredential(){throw Wt(Kt)}getRefreshTokenCredential(){throw Wt(Kt)}setAppMetadata(){throw Wt(Kt)}getAppMetadata(){throw Wt(Kt)}setServerTelemetry(){throw Wt(Kt)}getServerTelemetry(){throw Wt(Kt)}setAuthorityMetadata(){throw Wt(Kt)}getAuthorityMetadata(){throw Wt(Kt)}getAuthorityMetadataKeys(){throw Wt(Kt)}setThrottlingCache(){throw Wt(Kt)}getThrottlingCache(){throw Wt(Kt)}removeItem(){throw Wt(Kt)}getKeys(){throw Wt(Kt)}getAccountKeys(){throw Wt(Kt)}getTokenKeys(){throw Wt(Kt)}}class zi{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class Gi{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:Gn,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new zi}}startPerformanceMeasurement(){return new zi}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}const $i={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},Qi={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:$o.Info,correlationId:d.EMPTY_STRING},Wi={claimsBasedCachingEnabled:!1},ji={async sendGetRequestAsync(){throw Wt(Kt)},async sendPostRequestAsync(){throw Wt(Kt)}},Vi={sku:d.SKU,version:Yo,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},Ji={clientSecret:d.EMPTY_STRING,clientAssertion:void 0},Yi={azureCloudInstance:jo.None,tenant:`${d.DEFAULT_COMMON_TENANT}`},Xi={application:{appName:"",appVersion:""}};function Zi(e){return e.authOptions.authority.options.protocolMode===Wo.OIDC}const es={sendGetRequestAsync:()=>Promise.reject(Wt(Kt)),sendPostRequestAsync:()=>Promise.reject(Wt(Kt))};class ts{navigateInternal(e,t){return ts.defaultNavigateWindow(e,t)}navigateExternal(e,t){return ts.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(((e,r)=>{setTimeout((()=>{r(tn(Jr,"failed_to_redirect"))}),t.timeout)}))}}class rs extends Se{constructor(e,t,r){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,rs.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=r}}function ns(e,t,r,n){return e.errorMessage=`${e.errorMessage}, additionalErrorInfo: error.name:${n?.name}, error.message:${n?.message}`,new rs(e,t,r)}class os{async sendGetRequestAsync(e,t){let r,n={},o=0;const i=is(t);try{r=await fetch(e,{method:Cn,headers:i})}catch(e){throw ns(tn(window.navigator.onLine?Mr:_r),void 0,void 0,e)}n=ss(r.headers);try{return o=r.status,{headers:n,body:await r.json(),status:o}}catch(e){throw ns(tn(Nr),o,n,e)}}async sendPostRequestAsync(e,t){const r=t&&t.body||"",n=is(t);let o,i=0,s={};try{o=await fetch(e,{method:yn,headers:n,body:r})}catch(e){throw ns(tn(window.navigator.onLine?Pr:_r),void 0,void 0,e)}s=ss(o.headers);try{return i=o.status,{headers:s,body:await o.json(),status:i}}catch(e){throw ns(tn(Nr),i,s,e)}}}function is(e){try{const t=new Headers;if(!e||!e.headers)return t;const r=e.headers;return Object.entries(r).forEach((([e,r])=>{t.append(e,r)})),t}catch(e){throw ns(tn(Wr),void 0,void 0,e)}}function ss(e){try{const t={};return e.forEach(((e,r)=>{t[r]=e})),t}catch(e){throw tn(jr)}}const as=1e4,cs=2e3;const ls="@azure/msal-browser",ds="4.14.0";var hs=r(58651);class us{static loggerCallback(e,t){switch(e){case $o.Error:return void hs.error(t);case $o.Info:return void hs.info(t);case $o.Verbose:return void hs.debug(t);case $o.Warning:return void hs.warn(t);default:return void hs.log(t)}}constructor(e){let t;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:e,cache:t,system:r,telemetry:n},o){const i={clientId:d.EMPTY_STRING,authority:`${d.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:d.EMPTY_STRING,authorityMetadata:d.EMPTY_STRING,redirectUri:"undefined"!=typeof window?qo():"",postLogoutRedirectUri:d.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:Wo.AAD,OIDCOptions:{serverResponseType:H.FRAGMENT,defaultScopes:[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:jo.None,tenant:d.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1,encodeExtraQueryParams:!1},s={cacheLocation:fn.SessionStorage,temporaryCacheLocation:fn.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!(!t||t.cacheLocation!==fn.LocalStorage),claimsBasedCachingEnabled:!1},a={loggerCallback:()=>{},logLevel:$o.Info,piiLoggingEnabled:!1},c={...{...$i,loggerOptions:a,networkClient:o?new os:es,navigationClient:new ts,loadFrameTimeout:0,windowHashTimeout:r?.loadFrameTimeout||6e4,iframeHashTimeout:r?.loadFrameTimeout||as,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowPlatformBroker:!1,nativeBrokerHandshakeTimeout:r?.nativeBrokerHandshakeTimeout||cs,pollIntervalMilliseconds:rn.DEFAULT_POLL_INTERVAL_MS},...r,loggerOptions:r?.loggerOptions||a},l={application:{appName:d.EMPTY_STRING,appVersion:d.EMPTY_STRING},client:new Gi};e?.protocolMode!==Wo.OIDC&&e?.OIDCOptions&&new Qo(c.loggerOptions).warning(JSON.stringify(Xe(Qe)));if(e?.protocolMode&&e.protocolMode===Wo.OIDC&&c?.allowPlatformBroker)throw Xe(We);return{auth:{...i,...e,OIDCOptions:{...i.OIDCOptions,...e?.OIDCOptions}},cache:{...s,...t},system:c,telemetry:{...l,...n}}}(e,this.browserEnvironment);try{t=window[fn.SessionStorage]}catch(e){}const r=t?.getItem("msal.browser.log.level"),n=t?.getItem("msal.browser.log.pii")?.toLowerCase(),o="true"===n||"false"!==n&&void 0,i={...this.config.system.loggerOptions},s=r&&Object.keys($o).includes(r)?$o[r]:void 0;s&&(i.loggerCallback=us.loggerCallback,i.logLevel=s),void 0!==o&&(i.piiLoggingEnabled=o),this.logger=new Qo(i,ls,ds),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}const gs="USER_INTERACTION_REQUIRED",ps="USER_CANCEL",ms="NO_NETWORK",fs="TRANSIENT_ERROR",Cs="PERSISTENT_ERROR",ys="DISABLED",vs="ACCOUNT_UNAVAILABLE",ws="NESTED_APP_AUTH_UNAVAILABLE";class Is{static async initializeNestedAppAuthBridge(){if(void 0===window)throw new Error("window is undefined");if(void 0===window.nestedAppAuthBridge)throw new Error("window.nestedAppAuthBridge is undefined");try{window.nestedAppAuthBridge.addEventListener("message",(e=>{const t="string"==typeof e?e:e.data,r=JSON.parse(t),n=Is.bridgeRequests.find((e=>e.requestId===r.requestId));void 0!==n&&(Is.bridgeRequests.splice(Is.bridgeRequests.indexOf(n),1),r.success?n.resolve(r):n.reject(r.error))}));const e=await new Promise(((e,t)=>{const r=Is.buildRequest("GetInitContext"),n={requestId:r.requestId,method:r.method,resolve:e,reject:t};Is.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))}));return Is.validateBridgeResultOrThrow(e.initContext)}catch(e){throw window.console.log(e),e}}getTokenInteractive(e){return this.getToken("GetTokenPopup",e)}getTokenSilent(e){return this.getToken("GetToken",e)}async getToken(e,t){const r=await this.sendRequest(e,{tokenParams:t});return{token:Is.validateBridgeResultOrThrow(r.token),account:Is.validateBridgeResultOrThrow(r.account)}}getHostCapabilities(){return this.capabilities??null}getAccountContext(){return this.accountContext?this.accountContext:null}static buildRequest(e,t){return{messageType:"NestedAppAuthRequest",method:e,requestId:go(),sendTime:Date.now(),clientLibrary:rn.MSAL_SKU,clientLibraryVersion:ds,...t}}sendRequest(e,t){const r=Is.buildRequest(e,t);return new Promise(((e,t)=>{const n={requestId:r.requestId,method:r.method,resolve:e,reject:t};Is.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))}))}static validateBridgeResultOrThrow(e){if(void 0===e){throw{status:ws}}return e}constructor(e,t,r,n){this.sdkName=e,this.sdkVersion=t,this.accountContext=r,this.capabilities=n}static async create(){const e=await Is.initializeNestedAppAuthBridge();return new Is(e.sdkName,e.sdkVersion,e.accountContext,e.capabilities)}}Is.bridgeRequests=[];class Ts extends us{constructor(){super(...arguments),this.bridgeProxy=void 0,this.accountContext=null}getModuleName(){return Ts.MODULE_NAME}getId(){return Ts.ID}getBridgeProxy(){return this.bridgeProxy}async initialize(){try{if("undefined"!=typeof window){"function"==typeof window.__initializeNestedAppAuth&&await window.__initializeNestedAppAuth();const e=await Is.create();this.accountContext=e.getAccountContext(),this.bridgeProxy=e,this.available=void 0!==e}}catch(e){this.logger.infoPii(`Could not initialize Nested App Auth bridge (${e})`)}return this.logger.info(`Nested App Auth Bridge available: ${this.available}`),this.available}}Ts.MODULE_NAME="",Ts.ID="NestedAppOperatingContext";class As extends us{getModuleName(){return As.MODULE_NAME}getId(){return As.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}As.MODULE_NAME="",As.ID="StandardOperatingContext";const ks="missing_kid_error",Ss="missing_alg_error",Es={[ks]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[Ss]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class bs extends Se{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,bs.prototype)}}function Rs(e){return new bs(e,Es[e])}class _s{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw Rs(ks);if(!e.alg)throw Rs(Ss);const t=new _s({typ:e.typ||we.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}class Ps{constructor(){this.dbName=Hn,this.version=1,this.tableName=xn,this.dbOpen=!1}async open(){return new Promise(((e,t)=>{const r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",(e=>{e.target.result.createObjectStore(this.tableName)})),r.addEventListener("success",(t=>{const r=t;this.db=r.target.result,this.dbOpen=!0,e()})),r.addEventListener("error",(()=>t(tn(xr))))}))}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(tn(Rr));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);n.addEventListener("success",(e=>{const r=e;this.closeConnection(),t(r.target.result)})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async setItem(e,t){return await this.validateDbIsOpen(),new Promise(((r,n)=>{if(!this.db)return n(tn(Rr));const o=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);o.addEventListener("success",(()=>{this.closeConnection(),r()})),o.addEventListener("error",(e=>{this.closeConnection(),n(e)}))}))}async removeItem(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(tn(Rr));const n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);n.addEventListener("success",(()=>{this.closeConnection(),t()})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async getKeys(){return await this.validateDbIsOpen(),new Promise(((e,t)=>{if(!this.db)return t(tn(Rr));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",(t=>{const r=t;this.closeConnection(),e(r.target.result)})),r.addEventListener("error",(e=>{this.closeConnection(),t(e)}))}))}async containsKey(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(tn(Rr));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);n.addEventListener("success",(e=>{const r=e;this.closeConnection(),t(1===r.target.result)})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise(((e,t)=>{const r=window.indexedDB.deleteDatabase(Hn),n=setTimeout((()=>t(!1)),200);r.addEventListener("success",(()=>(clearTimeout(n),e(!0)))),r.addEventListener("blocked",(()=>(clearTimeout(n),e(!0)))),r.addEventListener("error",(()=>(clearTimeout(n),t(!1))))}))}}class Ms{constructor(){this.cache=new Map}async initialize(){}getItem(e){return this.cache.get(e)||null}getUserData(e){return this.getItem(e)}setItem(e,t){this.cache.set(e,t)}async setUserData(e,t){this.setItem(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach(((t,r)=>{e.push(r)})),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class Ns{constructor(e){this.inMemoryCache=new Ms,this.indexedDBCache=new Ps,this.logger=e}handleDatabaseAccessError(e){if(!(e instanceof en&&e.errorCode===xr))throw e;this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.")}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}class Os{constructor(e,t,r){this.logger=e,function(e){if(!window)throw tn(br);if(!window.crypto)throw tn(nr);if(!e&&!window.crypto.subtle)throw tn(nr,"crypto_subtle_undefined")}(r??!1),this.cache=new Ns(this.logger),this.performanceClient=t}createNewGuid(){return go()}base64Encode(e){return Vn(e)}base64Decode(e){return Yn(e)}base64UrlEncode(e){return Wn(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(Kn.CryptoOptsGetPublicKeyThumbprint,e.correlationId),r=await async function(e,t){return window.crypto.subtle.generateKey(co,e,t)}(Os.EXTRACTABLE,Os.POP_KEY_USAGES),n=await po(r.publicKey),o=qs({e:n.e,kty:n.kty,n:n.n}),i=await this.hashString(o),s=await po(r.privateKey),a=await async function(e,t,r){return window.crypto.subtle.importKey("jwk",e,co,t,r)}(s,!1,["sign"]);return await this.cache.setItem(i,{privateKey:a,publicKey:r.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),i}async removeTokenBindingKey(e){await this.cache.removeItem(e);if(await this.cache.containsKey(e))throw Wt(Lt)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,n){const o=this.performanceClient?.startMeasurement(Kn.CryptoOptsSignJwt,n),i=await this.cache.getItem(t);if(!i)throw tn(qr);const s=await po(i.publicKey),a=qs(s),c=Wn(JSON.stringify({kid:t})),l=Wn(_s.getShrHeaderString({...r?.header,alg:s.alg,kid:c}));e.cnf={jwk:JSON.parse(a)};const d=`${l}.${Wn(JSON.stringify(e))}`,h=(new TextEncoder).encode(d),u=await async function(e,t){return window.crypto.subtle.sign(co,e,t)}(i.privateKey,h),g=`${d}.${jn(new Uint8Array(u))}`;return o&&o.end({success:!0}),g}async hashString(e){return To(e)}}function qs(e){return JSON.stringify(e,Object.keys(e).sort())}Os.POP_KEY_USAGES=["sign","verify"],Os.EXTRACTABLE=!0;class Us{constructor(e,t,r,n){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=n}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(Kn.RegionDiscoveryDetectRegion,this.correlationId);let r=e;if(r)t.region_source=de;else{const e=Us.IMDS_OPTIONS;try{const n=await Zt(this.getRegionFromIMDS.bind(this),Kn.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(d.IMDS_VERSION,e);if(n.status===h&&(r=n.body,t.region_source=he),n.status===g){const n=await Zt(this.getCurrentVersion.bind(this),Kn.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(e);if(!n)return t.region_source=le,null;const o=await Zt(this.getRegionFromIMDS.bind(this),Kn.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(n,e);o.status===h&&(r=o.body,t.region_source=he)}}catch(e){return t.region_source=le,null}}return r||(t.region_source=le),r||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(Kn.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,d.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(Kn.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?format=json`,e);return t.status===g&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch(e){return null}}}Us.IMDS_OPTIONS={headers:{Metadata:"true"}};class Ls{constructor(e,t,r,n,o,i,s,a){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=n,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=s,this.correlationId=i,this.managedIdentity=a||!1,this.regionDiscovery=new Us(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(d.CIAM_AUTH_URL))return Ri;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case d.ADFS:return Ei;case d.DSTS:return bi}return Si}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new Yt(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw Wt(ot)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw Wt(ot)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw Wt(ot)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw Wt(Ht);return this.replacePath(this.metadata.end_session_endpoint)}throw Wt(ot)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw Wt(ot)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw Wt(ot)}canReplaceTenant(e){return 1===e.PathSegments.length&&!Ls.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===Si&&this.protocolMode!==Wo.OIDC}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const r=new Yt(this.metadata.canonical_authority).getUrlComponents(),n=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach(((e,o)=>{let i=n[o];if(0===o&&this.canReplaceTenant(r)){const e=new Yt(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];i!==e&&(this.logger.verbose(`Replacing tenant domain name ${i} with id ${e}`),i=e)}e!==i&&(t=t.replace(`/${i}/`,`/${e}/`))})),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===Ei||this.protocolMode===Wo.OIDC&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(Kn.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await Zt(this.updateCloudDiscoveryMetadata.bind(this),Kn.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const r=await Zt(this.updateEndpointMetadata.bind(this),Kn.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:r}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:r},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:mi(),jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==X&&r?.source!==X&&(e.expiresAt=mi(),e.canonical_authority=this.canonicalAuthority);const n=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(n,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(Kn.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===ee&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata){fi(e,await Zt(this.updateMetadataWithRegionalInformation.bind(this),Kn.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority}return t.source}let r=await Zt(this.getEndpointMetadataFromNetwork.bind(this),Kn.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(r=await Zt(this.updateMetadataWithRegionalInformation.bind(this),Kn.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(r)),fi(e,r,!0),Z;throw Wt(st,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),fi(e,t,!1),{source:Y};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const t=this.getEndpointMetadataFromHardcodedValues();if(t)return fi(e,t,!1),{source:ee,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const r=yi(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:X}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new Yt(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw Xe(De)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Kn.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const r=await this.networkInterface.sendGetRequestAsync(t,e),n=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(r.body);return n?r.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in Mi?Mi[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(Kn.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==d.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=ue,this.regionDiscoveryMetadata.region_used=t,Ls.replaceWithRegionalInformation(e,t);const r=await Zt(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),Kn.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(r)return this.regionDiscoveryMetadata.region_outcome=ge,this.regionDiscoveryMetadata.region_used=r,Ls.replaceWithRegionalInformation(e,r);this.regionDiscoveryMetadata.region_outcome=pe}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(Kn.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const r=await Zt(this.getCloudDiscoveryMetadataFromNetwork.bind(this),Kn.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return Ci(e,r,!0),Z;throw Xe(Fe)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||d.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),Ci(e,t,!1),Y;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const t=(r=this.hostnameAndPort,Ui(Ni.metadata,r));if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),Ci(e,t,!1),ee;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}var r;const n=yi(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),X):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===Ri)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),Ls.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=Ui(JSON.parse(this.authorityOptions.cloudDiscoveryMetadata).metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),e)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),e;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),Xe(Be)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),Ls.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Kn.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${d.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let r=null;try{const n=await this.networkInterface.sendGetRequestAsync(e,t);let o,i;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}(n.body))o=n.body,i=o.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${o.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(n.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${n.status}`),o=n.body,o.error===d.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${o.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${o.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),i=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),r=Ui(i,this.hostnameAndPort)}catch(e){if(e instanceof Se)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return r||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),r=Ls.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),r}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter((e=>e&&Yt.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort)).length>0}static generateAuthority(e,t){let r;if(t&&t.azureCloudInstance!==jo.None){const e=t.tenant?t.tenant:d.DEFAULT_COMMON_TENANT;r=`${t.azureCloudInstance}/${e}/`}return r||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return d.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw Wt(ot)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Oi.has(e)}static isPublicCloudAuthority(e){return d.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,r){const n=new Yt(e);n.validateAsUri();const o=n.getUrlComponents();let i=`${t}.${o.HostNameAndPort}`;this.isPublicCloudAuthority(o.HostNameAndPort)&&(i=`${t}.${d.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const s=Yt.constructAuthorityUriFromObject({...n.getUrlComponents(),HostNameAndPort:i}).urlString;return r?`${s}?${r}`:s}static replaceWithRegionalInformation(e,t){const r={...e};return r.authorization_endpoint=Ls.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=Ls.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=Ls.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(e){let t=e;const r=new Yt(e).getUrlComponents();if(0===r.PathSegments.length&&r.HostNameAndPort.endsWith(d.CIAM_AUTH_URL)){t=`${t}${r.HostNameAndPort.split(".")[0]}${d.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}function Hs(e){return e.endsWith(d.FORWARD_SLASH)?e:`${e}${d.FORWARD_SLASH}`}function xs(e){const t=e.cloudDiscoveryMetadata;let r;if(t)try{r=JSON.parse(t)}catch(e){throw Xe(Be)}return{canonicalAuthority:e.authority?Hs(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:r}}Ls.reservedTenantDomains=new Set(["{tenant}","{tenantid}",R,P,_]);const Bs="no_tokens_found",Ds="native_account_unavailable",Fs="refresh_token_expired",Ks="ux_not_allowed",zs="interaction_required",Gs="consent_required",$s="login_required",Qs="bad_token",Ws=[zs,Gs,$s,Qs,Ks],js=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Vs={[Bs]:"No refresh token found in the cache. Please sign-in.",[Ds]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[Fs]:"Refresh token has expired.",[Qs]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.",[Ks]:"`canShowUI` flag in Edge was set to false. User interaction required on web page. Please invoke an interactive API to resolve."},Js={noTokensFoundError:{code:Bs,desc:Vs[Bs]},native_account_unavailable:{code:Ds,desc:Vs[Ds]},bad_token:{code:Qs,desc:Vs[Qs]}};class Ys extends Se{constructor(e,t,r,n,o,i,s,a){super(e,t,r),Object.setPrototypeOf(this,Ys.prototype),this.timestamp=n||d.EMPTY_STRING,this.traceId=o||d.EMPTY_STRING,this.correlationId=i||d.EMPTY_STRING,this.claims=s||d.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=a}}function Xs(e,t,r){const n=!!e&&Ws.indexOf(e)>-1,o=!!r&&js.indexOf(r)>-1,i=!!t&&Ws.some((e=>t.indexOf(e)>-1));return n||i||o}function Zs(e){return new Ys(e,Vs[e])}function ea(e,t,r){return{clientId:e,authority:t.authority,scopes:t.scopes,homeAccountIdentifier:r,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid,embeddedClientId:t.embeddedClientId||t.tokenBodyParameters?.clientId}}const ta=864e5,ra="Lax",na="None";class oa{initialize(){return Promise.resolve()}getItem(e){const t=`${encodeURIComponent(e)}`,r=document.cookie.split(";");for(let e=0;e<r.length;e++){const n=r[e],[o,...i]=decodeURIComponent(n).trim().split("="),s=i.join("=");if(o===t)return s}return""}getUserData(){throw Wt(Kt)}setItem(e,t,r,n=!0,o=ra){let i=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=${o};`;if(r){const e=function(e){const t=new Date,r=new Date(t.getTime()+e*ta);return r.toUTCString()}(r);i+=`expires=${e};`}(n||o===na)&&(i+="Secure;"),document.cookie=i}async setUserData(){return Promise.reject(Wt(Kt))}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach((e=>{const r=decodeURIComponent(e).trim().split("=");t.push(r[0])})),t}containsKey(e){return this.getKeys().includes(e)}}function ia(e){const t=e.getItem(bn);return t?JSON.parse(t):[]}function sa(e,t){const r=t.getItem(`${Rn}.${e}`);if(r){const e=JSON.parse(r);if(e&&e.hasOwnProperty("idToken")&&e.hasOwnProperty("accessToken")&&e.hasOwnProperty("refreshToken"))return e}return{idToken:[],accessToken:[],refreshToken:[]}}const aa="msal.cache.encryption";class ca{constructor(e,t,r){if(!window.localStorage)throw _o(Ao);this.memoryStorage=new Ms,this.initialized=!1,this.clientId=e,this.logger=t,this.performanceClient=r,this.broadcast=new BroadcastChannel("msal.broadcast.cache")}async initialize(e){const t=new oa,r=t.getItem(aa);let n={key:"",id:""};if(r)try{n=JSON.parse(r)}catch(e){}if(n.key&&n.id){const t=Xt(Xn,Kn.Base64Decode,this.logger,this.performanceClient,e)(n.key);this.encryptionCookie={id:n.id,key:await Zt(yo,Kn.GenerateHKDF,this.logger,this.performanceClient,e)(t)},await Zt(this.importExistingCache.bind(this),Kn.ImportExistingCache,this.logger,this.performanceClient,e)(e)}else{this.clear();const r=go(),n=await Zt(Co,Kn.GenerateBaseKey,this.logger,this.performanceClient,e)(),o=Xt(jn,Kn.UrlEncodeArr,this.logger,this.performanceClient,e)(new Uint8Array(n));this.encryptionCookie={id:r,key:await Zt(yo,Kn.GenerateHKDF,this.logger,this.performanceClient,e)(n)};const i={id:r,key:o};t.setItem(aa,JSON.stringify(i),0,!0,na)}this.broadcast.addEventListener("message",this.updateCache.bind(this)),this.initialized=!0}getItem(e){return window.localStorage.getItem(e)}getUserData(e){if(!this.initialized)throw tn(zr);return this.memoryStorage.getItem(e)}setItem(e,t){window.localStorage.setItem(e,t)}async setUserData(e,t,r,n){if(!this.initialized||!this.encryptionCookie)throw tn(zr);const{data:o,nonce:i}=await Zt(wo,Kn.Encrypt,this.logger,this.performanceClient,r)(this.encryptionCookie.key,t,this.getContext(e)),s={id:this.encryptionCookie.id,nonce:i,data:o,lastUpdatedAt:n};this.memoryStorage.setItem(e,t),this.setItem(e,JSON.stringify(s)),this.broadcast.postMessage({key:e,value:t,context:this.getContext(e)})}removeItem(e){this.memoryStorage.containsKey(e)&&(this.memoryStorage.removeItem(e),this.broadcast.postMessage({key:e,value:null,context:this.getContext(e)})),window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}clear(){this.memoryStorage.clear();ia(this).forEach((e=>this.removeItem(e)));const e=sa(this.clientId,this);e.idToken.forEach((e=>this.removeItem(e))),e.accessToken.forEach((e=>this.removeItem(e))),e.refreshToken.forEach((e=>this.removeItem(e))),this.getKeys().forEach((e=>{(e.startsWith(d.CACHE_PREFIX)||-1!==e.indexOf(this.clientId))&&this.removeItem(e)}))}async importExistingCache(e){if(!this.encryptionCookie)return;let t=ia(this);t=await this.importArray(t,e),this.setItem(bn,JSON.stringify(t));const r=sa(this.clientId,this);r.idToken=await this.importArray(r.idToken,e),r.accessToken=await this.importArray(r.accessToken,e),r.refreshToken=await this.importArray(r.refreshToken,e),this.setItem(`${Rn}.${this.clientId}`,JSON.stringify(r))}async getItemFromEncryptedCache(e,t){if(!this.encryptionCookie)return null;const r=this.getItem(e);if(!r)return null;let n;try{n=JSON.parse(r)}catch(e){return null}return n.id&&n.nonce&&n.data?n.id!==this.encryptionCookie.id?(this.performanceClient.incrementFields({encryptedCacheExpiredCount:1},t),null):Zt(Io,Kn.Decrypt,this.logger,this.performanceClient,t)(this.encryptionCookie.key,n.nonce,this.getContext(e),n.data):(this.performanceClient.incrementFields({unencryptedCacheCount:1},t),null)}async importArray(e,t){const r=[],n=[];return e.forEach((e=>{const o=this.getItemFromEncryptedCache(e,t).then((t=>{t?(this.memoryStorage.setItem(e,t),r.push(e)):this.removeItem(e)}));n.push(o)})),await Promise.all(n),r}getContext(e){let t="";return e.includes(this.clientId)&&(t=this.clientId),t}updateCache(e){this.logger.trace("Updating internal cache from broadcast event");const t=this.performanceClient.startMeasurement(Kn.LocalStorageUpdated);t.add({isBackground:!0});const{key:r,value:n,context:o}=e.data;return r?o&&o!==this.clientId?(this.logger.trace(`Ignoring broadcast event from clientId: ${o}`),void t.end({success:!1,errorCode:"contextMismatch"})):(n?(this.memoryStorage.setItem(r,n),this.logger.verbose("Updated item in internal cache")):(this.memoryStorage.removeItem(r),this.logger.verbose("Removed item from internal cache")),void t.end({success:!0})):(this.logger.error("Broadcast event missing key"),void t.end({success:!1,errorCode:"noKey"}))}}class la{constructor(){if(!window.sessionStorage)throw _o(Ao)}async initialize(){}getItem(e){return window.sessionStorage.getItem(e)}getUserData(e){return this.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}async setUserData(e,t){this.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}}const da={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache",BROKER_CONNECTION_ESTABLISHED:"msal:brokerConnectionEstablished"};class ha extends Fi{constructor(e,t,r,n,o,i,s){super(e,r,n,o,s),this.cacheConfig=t,this.logger=n,this.internalStorage=new Ms,this.browserStorage=ua(e,t.cacheLocation,n,o),this.temporaryCacheStorage=ua(e,t.temporaryCacheLocation,n,o),this.cookieStorage=new oa,this.eventHandler=i}async initialize(e){await this.browserStorage.initialize(e),this.trackVersionChanges(e)}trackVersionChanges(e){const t=this.browserStorage.getItem(_n);t&&(this.logger.info(`MSAL.js was last initialized by version: ${t}`),this.performanceClient.addFields({previousLibraryVersion:t},e)),t!==ds&&this.setItem(_n,ds,e)}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}setItem(e,t,r){let n=[];for(let o=0;o<=20;o++)try{this.browserStorage.setItem(e,t),o>0&&this.removeAccessTokenKeys(n.slice(0,o),r);break}catch(i){const s=Di(i);if(!(s.errorCode===Li&&o<20))throw s;if(n.length||(n=e===`${Rn}.${this.clientId}`?JSON.parse(t).accessToken:this.getTokenKeys().accessToken),n.length<=o)throw s;this.removeAccessToken(n[o],r,!1)}}async setUserData(e,t,r,n){let o=[];for(let i=0;i<=20;i++)try{await Zt(this.browserStorage.setUserData.bind(this.browserStorage),Kn.SetUserData,this.logger,this.performanceClient)(e,t,r,n),i>0&&this.removeAccessTokenKeys(o.slice(0,i),r);break}catch(e){const t=Di(e);if(!(t.errorCode===Li&&i<20))throw t;if(o.length||(o=this.getTokenKeys().accessToken),o.length<=i)throw t;this.removeAccessToken(o[i],r,!1)}}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const r=this.browserStorage.getUserData(e);if(!r)return this.removeAccountKeyFromMap(e,t),null;const n=this.validateAndParseJson(r);return n&&Pi.isAccountEntity(n)?Fi.toObject(new Pi,n):null}async setAccount(e,t){this.logger.trace("BrowserCacheManager.setAccount called");const r=e.generateAccountKey(),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.addAccountKeyToMap(r,t);this.cacheConfig.cacheLocation===fn.LocalStorage&&o&&this.eventHandler.emitEvent(da.ACCOUNT_ADDED,void 0,e.getAccountInfo())}getAccountKeys(){return ia(this.browserStorage)}addAccountKeyToMap(e,t){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const r=this.getAccountKeys();return-1===r.indexOf(e)?(r.push(e),this.setItem(bn,JSON.stringify(r),t),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added"),!0):(this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map"),!1)}removeAccountKeyFromMap(e,t){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const r=this.getAccountKeys(),n=r.indexOf(e);if(n>-1){if(r.splice(n,1),0===r.length)return void this.removeItem(bn);this.setItem(bn,JSON.stringify(r),t),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")}else this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}removeAccount(e,t){super.removeAccount(e,t),this.removeAccountKeyFromMap(e,t)}removeAccountContext(e,t){super.removeAccountContext(e,t),this.cacheConfig.cacheLocation===fn.LocalStorage&&this.eventHandler.emitEvent(da.ACCOUNT_REMOVED,void 0,e.getAccountInfo())}removeIdToken(e,t){super.removeIdToken(e,t);const r=this.getTokenKeys(),n=r.idToken.indexOf(e);n>-1&&(this.logger.info("idToken removed from tokenKeys map"),r.idToken.splice(n,1),this.setTokenKeys(r,t))}removeAccessToken(e,t,r=!0){super.removeAccessToken(e,t),r&&this.removeAccessTokenKeys([e],t)}removeAccessTokenKeys(e,t){this.logger.trace("removeAccessTokenKey called");const r=this.getTokenKeys();let n=0;if(e.forEach((e=>{const t=r.accessToken.indexOf(e);t>-1&&(r.accessToken.splice(t,1),n++)})),n>0)return this.logger.info(`removed ${n} accessToken keys from tokenKeys map`),void this.setTokenKeys(r,t)}removeRefreshToken(e,t){super.removeRefreshToken(e,t);const r=this.getTokenKeys(),n=r.refreshToken.indexOf(e);n>-1&&(this.logger.info("refreshToken removed from tokenKeys map"),r.refreshToken.splice(n,1),this.setTokenKeys(r,t))}getTokenKeys(){return sa(this.clientId,this.browserStorage)}setTokenKeys(e,t){0!==e.idToken.length||0!==e.accessToken.length||0!==e.refreshToken.length?this.setItem(`${Rn}.${this.clientId}`,JSON.stringify(e),t):this.removeItem(`${Rn}.${this.clientId}`)}getIdTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeIdToken(e,t),null;const n=this.validateAndParseJson(r);return n&&((o=n)&&li(o)&&o.hasOwnProperty("realm")&&o.credentialType===Q.ID_TOKEN)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),null);var o}async setIdTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const r=ii(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys();-1===o.idToken.indexOf(r)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),o.idToken.push(r),this.setTokenKeys(o,t))}getAccessTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeAccessTokenKeys([e],t),null;const n=this.validateAndParseJson(r);return n&&(o=n)&&li(o)&&o.hasOwnProperty("realm")&&o.hasOwnProperty("target")&&(o.credentialType===Q.ACCESS_TOKEN||o.credentialType===Q.ACCESS_TOKEN_WITH_AUTH_SCHEME)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),null);var o}async setAccessTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const r=ii(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys(),i=o.accessToken.indexOf(r);-1!==i&&o.accessToken.splice(i,1),this.logger.trace(`access token ${-1===i?"added to":"updated in"} map`),o.accessToken.push(r),this.setTokenKeys(o,t)}getRefreshTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeRefreshToken(e,t),null;const n=this.validateAndParseJson(r);return n&&(o=n)&&li(o)&&o.credentialType===Q.REFRESH_TOKEN?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),null);var o}async setRefreshTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const r=ii(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys();-1===o.refreshToken.indexOf(r)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),o.refreshToken.push(r),this.setTokenKeys(o,t))}getAppMetadata(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&(n=e,(o=r)&&0===n.indexOf(W)&&o.hasOwnProperty("clientId")&&o.hasOwnProperty("environment"))?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null);var n,o}setAppMetadata(e,t){this.logger.trace("BrowserCacheManager.setAppMetadata called");const r=function({environment:e,clientId:t}){return[W,e,t].join(G).toLowerCase()}(e);this.setItem(r,JSON.stringify(e),t)}getServerTelemetry(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){const r=0===e.indexOf(te.CACHE_KEY);let n=!0;return t&&(n=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t,r){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t),r)}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){return!!t&&0===e.indexOf(V)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}(e,r)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter((e=>this.isAuthorityMetadata(e)))}setWrapperMetadata(e,t){this.internalStorage.setItem(Pn,e),this.internalStorage.setItem(Mn,t)}getWrapperMetadata(){return[this.internalStorage.getItem(Pn)||d.EMPTY_STRING,this.internalStorage.getItem(Mn)||d.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(e){const t=this.generateCacheKey(b),r=this.browserStorage.getItem(t);if(!r)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters found"),null;const n=this.validateAndParseJson(r);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId},e)):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e,t){const r=this.generateCacheKey(b);if(e){this.logger.verbose("setActiveAccount: Active account set");const n={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId,lastUpdatedAt:ei().toString()};this.setItem(r,JSON.stringify(n),t)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(r);this.eventHandler.emitEvent(da.ACTIVE_ACCOUNT_CHANGED)}getThrottlingCache(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){let r=!1;e&&(r=0===e.indexOf(ie));let n=!0;return t&&(n=t.hasOwnProperty("throttleTime")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),r):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t,r){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t),r)}getTemporaryCache(e,t){const r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const e=this.cookieStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}const n=this.temporaryCacheStorage.getItem(r);if(!n){if(this.cacheConfig.cacheLocation===fn.LocalStorage){const e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),n}setTemporaryCache(e,t,r){const n=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(n,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(n,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}clear(e){this.removeAllAccounts(e),this.removeAppMetadata(e),this.temporaryCacheStorage.getKeys().forEach((e=>{-1===e.indexOf(d.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.removeTemporaryItem(e)})),this.browserStorage.getKeys().forEach((e=>{-1===e.indexOf(d.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.browserStorage.removeItem(e)})),this.internalStorage.clear()}clearTokensAndKeysWithClaims(e){this.performanceClient.addQueueMeasurement(Kn.ClearTokensAndKeysWithClaims,e);const t=this.getTokenKeys();let r=0;t.accessToken.forEach((t=>{const n=this.getAccessTokenCredential(t,e);n?.requestedClaimsHash&&t.includes(n.requestedClaimsHash.toLowerCase())&&(this.removeAccessToken(t,e),r++)})),r>0&&this.logger.warning(`${r} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):Ze.startsWith(e,d.CACHE_PREFIX)?e:`${d.CACHE_PREFIX}.${this.clientId}.${e}`}resetRequestCache(){this.logger.trace("BrowserCacheManager.resetRequestCache called"),this.removeTemporaryItem(this.generateCacheKey(An)),this.removeTemporaryItem(this.generateCacheKey(kn)),this.removeTemporaryItem(this.generateCacheKey(In)),this.removeTemporaryItem(this.generateCacheKey(Tn)),this.removeTemporaryItem(this.generateCacheKey(En)),this.setInteractionInProgress(!1)}cacheAuthorizeRequest(e,t){this.logger.trace("BrowserCacheManager.cacheAuthorizeRequest called");const r=Vn(JSON.stringify(e));if(this.setTemporaryCache(An,r,!0),t){const e=Vn(t);this.setTemporaryCache(kn,e,!0)}}getCachedRequest(){this.logger.trace("BrowserCacheManager.getCachedRequest called");const e=this.getTemporaryCache(An,!0);if(!e)throw tn(Ar);const t=this.getTemporaryCache(kn,!0);let r,n="";try{r=JSON.parse(Yn(e)),t&&(n=Yn(t))}catch(t){throw this.logger.errorPii(`Attempted to parse: ${e}`),this.logger.error(`Parsing cached token request threw with error: ${t}`),tn(kr)}return[r,n]}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(En,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress()?.clientId;return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${d.CACHE_PREFIX}.${Sn}`,t=this.getTemporaryCache(e,!1);try{return t?JSON.parse(t):null}catch(t){return this.logger.error("Cannot parse interaction status. Removing temporary cache items and clearing url hash. Retrying interaction should fix the error"),this.removeTemporaryItem(e),this.resetRequestCache(),Po(window),null}}setInteractionInProgress(e,t=vn){const r=`${d.CACHE_PREFIX}.${Sn}`;if(e){if(this.getInteractionInProgress())throw tn(dr);this.setTemporaryCache(r,JSON.stringify({clientId:this.clientId,type:t}),!1)}else e||this.getInteractionInProgress()?.clientId!==this.clientId||this.removeTemporaryItem(r)}async hydrateCache(e,t){const r=si(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let n;t.claims&&(n=await this.cryptoImpl.hashString(t.claims));const o={idToken:r,accessToken:ai(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?ti(e.expiresOn):0,e.extExpiresOn?ti(e.extExpiresOn):0,Yn,void 0,e.tokenType,void 0,t.sshKid,t.claims,n)};return this.saveCacheRecord(o,e.correlationId)}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(e){if(e instanceof Bi&&this.performanceClient&&t)try{const e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},t)}catch(e){}throw e}}}function ua(e,t,r,n){try{switch(t){case fn.LocalStorage:return new ca(e,r,n);case fn.SessionStorage:return new la;case fn.MemoryStorage:}}catch(e){r.error(e)}return new Ms}const ga=(e,t,r,n)=>{const o={cacheLocation:fn.MemoryStorage,temporaryCacheLocation:fn.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new ha(e,o,Vo,t,r,n)};function pa(e,t,r,n,o){return e.verbose("getAllAccounts called"),r?t.getAllAccounts(o||{},n):[]}function ma(e,t,r,n){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;const o=r.getAccountInfoFilteredBy(e,n);return o?(t.verbose("getAccount: Account matching provided filter found, returning"),o):(t.verbose("getAccount: No matching account found, returning null"),null)}function fa(e,t,r,n){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;const o=r.getAccountInfoFilteredBy({username:e},n);return o?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),o):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}function Ca(e,t,r,n){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;const o=r.getAccountInfoFilteredBy({homeAccountId:e},n);return o?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),o):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function ya(e,t,r,n){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;const o=r.getAccountInfoFilteredBy({localAccountId:e},n);return o?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),o):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function va(e,t,r){t.setActiveAccount(e,r)}function wa(e,t){return e.getActiveAccount(t)}class Ia{constructor(e){this.eventCallbacks=new Map,this.logger=e||new Qo({}),"undefined"!=typeof BroadcastChannel&&(this.broadcastChannel=new BroadcastChannel("msal.broadcast.event")),this.invokeCrossTabCallbacks=this.invokeCrossTabCallbacks.bind(this)}addEventCallback(e,t,r){if("undefined"!=typeof window){const n=r||Go();return this.eventCallbacks.has(n)?(this.logger.error(`Event callback with id: ${n} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(n,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${n}`),n)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,r,n){const o={eventType:e,interactionType:t||null,payload:r||null,error:n||null,timestamp:Date.now()};switch(e){case da.ACCOUNT_ADDED:case da.ACCOUNT_REMOVED:case da.ACTIVE_ACCOUNT_CHANGED:this.broadcastChannel?.postMessage(o);break;default:this.invokeCallbacks(o)}}invokeCallbacks(e){this.eventCallbacks.forEach((([t,r],n)=>{(0===r.length||r.includes(e.eventType))&&(this.logger.verbose(`Emitting event to callback ${n}: ${e.eventType}`),t.apply(null,[e]))}))}invokeCrossTabCallbacks(e){const t=e.data;this.invokeCallbacks(t)}subscribeCrossTab(){this.broadcastChannel?.addEventListener("message",this.invokeCrossTabCallbacks)}unsubscribeCrossTab(){this.broadcastChannel?.removeEventListener("message",this.invokeCrossTabCallbacks)}}const Ta="home_account_id",Aa="UPN",ka="client_id",Sa="redirect_uri",Ea="token_type",ba="req_cnf",Ra="return_spa_code",_a="x-client-xtra-sku",Pa="brk_client_id",Ma="brk_redirect_uri",Na="instance_aware";function Oa(e,t,r){if(!t)return;const n=e.get(ka);n&&e.has(Pa)&&r?.addFields({embeddedClientId:n,embeddedRedirectUri:e.get(Sa)},t)}function qa(e,t){e.set("response_type",t)}function Ua(e,t,r=!0,n=C){!r||n.includes("openid")||t.includes("openid")||n.push("openid");const o=r?[...t||[],...n]:t||[],i=new vi(o);e.set("scope",i.printScopes())}function La(e,t){e.set(ka,t)}function Ha(e,t){e.set(Sa,t)}function xa(e,t){e.set("login_hint",t)}function Ba(e,t){e.set(T,`UPN:${t}`)}function Da(e,t){e.set(T,`Oid:${t.uid}@${t.utid}`)}function Fa(e,t){e.set("sid",t)}function Ka(e,t,r){const n=ec(t,r);try{JSON.parse(n)}catch(e){throw Xe(qe)}e.set("claims",n)}function za(e,t){e.set("client-request-id",t)}function Ga(e,t){e.set("x-client-SKU",t.sku),e.set("x-client-VER",t.version),t.os&&e.set("x-client-OS",t.os),t.cpu&&e.set("x-client-CPU",t.cpu)}function $a(e,t){t?.appName&&e.set("x-app-name",t.appName),t?.appVersion&&e.set("x-app-ver",t.appVersion)}function Qa(e,t){t&&e.set("state",t)}function Wa(e,t){e.set("client_secret",t)}function ja(e,t){t&&e.set("client_assertion",t)}function Va(e,t){t&&e.set("client_assertion_type",t)}function Ja(e,t){e.set("grant_type",t)}function Ya(e){e.set("client_info","1")}function Xa(e){e.has(Na)||e.set(Na,"true")}function Za(e,t){Object.entries(t).forEach((([t,r])=>{!e.has(t)&&r&&e.set(t,r)}))}function ec(e,t){let r;if(e)try{r=JSON.parse(e)}catch(e){throw Xe(qe)}else r={};return t&&t.length>0&&(r.hasOwnProperty(M)||(r[M]={}),r[M][N]={values:t}),JSON.stringify(r)}function tc(e,t){t&&(e.set(Ea,re.POP),e.set(ba,t))}function rc(e,t){t&&(e.set(Ea,re.SSH),e.set(ba,t))}function nc(e,t){e.set("x-client-current-telemetry",t.generateCurrentRequestHeaderValue()),e.set("x-client-last-telemetry",t.generateLastRequestHeaderValue())}function oc(e){e.set("x-ms-lib-capability",se)}function ic(e,t,r){e.has(Pa)||e.set(Pa,t),e.has(Ma)||e.set(Ma,r)}async function sc(e,t,r,n,o,i,s){s?.addQueueMeasurement(Kn.AuthorityFactoryCreateDiscoveredInstance,i);const a=Ls.transformCIAMAuthority(Hs(e)),c=new Ls(a,t,r,n,o,i,s);try{return await Zt(c.resolveEndpointsAsync.bind(c),Kn.AuthorityResolveEndpointsAsync,o,s,i)(),c}catch(e){throw Wt(ot)}}class ac extends Se{constructor(e,t,r,n,o){super(e,t,r),this.name="ServerError",this.errorNo=n,this.status=o,Object.setPrototypeOf(this,ac.prototype)}}class cc{static generateThrottlingStorageKey(e){return`${ie}.${JSON.stringify(e)}`}static preProcess(e,t,r){const n=cc.generateThrottlingStorageKey(t),o=e.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now())return void e.removeItem(n,r);throw new ac(o.errorCodes?.join(" ")||d.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,r,n){if(cc.checkResponseStatus(r)||cc.checkResponseForRetryAfter(r)){const o={throttleTime:cc.calculateThrottleTime(parseInt(r.headers[I])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(cc.generateThrottlingStorageKey(t),o,n)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&(e.headers.hasOwnProperty(I)&&(e.status<200||e.status>=300))}static calculateThrottleTime(e){const t=e<=0?0:e,r=Date.now()/1e3;return Math.floor(1e3*Math.min(r+(t||ne),r+oe))}static removeThrottle(e,t,r,n){const o=ea(t,r,n),i=this.generateThrottlingStorageKey(o);e.removeItem(i,r.correlationId)}}class lc{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:n,storageInterface:o,networkInterface:i,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:l,serverTelemetryManager:d,persistencePlugin:h,serializableCache:u}){const g={...Qi,...r};return{authOptions:(p=e,{clientCapabilities:[],azureCloudOptions:Yi,skipAuthorityMetadataCache:!1,instanceAware:!1,encodeExtraQueryParams:!1,...p}),systemOptions:{...$i,...t},loggerOptions:g,cacheOptions:{...Wi,...n},storageInterface:o||new Ki(e.clientId,Vo,new Qo(g),new Gi),networkInterface:i||ji,cryptoInterface:s||Vo,clientCredentials:a||Ji,libraryInfo:{...Vi,...c},telemetry:{...Xi,...l},serverTelemetryManager:d||null,persistencePlugin:h||null,serializableCache:u||null};var p}(e),this.logger=new Qo(this.config.loggerOptions,Jo,Yo),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[v]=d.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case Ta:try{const r=Ii(e.credential);t[T]=`Oid:${r.uid}@${r.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Aa:t[T]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,r,n,o,i){i&&this.performanceClient?.addQueueMeasurement(i,o);const s=await this.sendPostRequest(n,e,{body:t,headers:r},o);return this.config.serverTelemetryManager&&s.status<500&&429!==s.status&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async sendPostRequest(e,t,r,n){let o;cc.preProcess(this.cacheManager,e,n);try{o=await Zt(this.networkClient.sendPostRequestAsync.bind(this.networkClient),Kn.NetworkClientSendPostRequestAsync,this.logger,this.performanceClient,n)(t,r);const e=o.headers||{};this.performanceClient?.addFields({refreshTokenSize:o.body.refresh_token?.length||0,httpVerToken:e[E]||"",requestId:e[S]||""},n)}catch(e){if(e instanceof rs){const t=e.responseHeaders;throw t&&this.performanceClient?.addFields({httpVerToken:t[E]||"",requestId:t[S]||"",contentTypeHeader:t[v]||void 0,contentLengthHeader:t[w]||void 0,httpStatus:e.httpStatus},n),e.error}throw e instanceof Se?e:Wt(it)}return cc.postProcess(this.cacheManager,e,o,n),o}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(Kn.UpdateTokenEndpointAuthority,t);const r=`https://${e}/${this.authority.tenant}/`,n=await sc(r,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=n}createTokenQueryParameters(e){const t=new Map;return e.embeddedClientId&&ic(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenQueryParameters&&Za(t,e.tokenQueryParameters),za(t,e.correlationId),Oa(t,e.correlationId,this.performanceClient),Jt(t)}}class dc{static setRequestState(e,t,r){const n=dc.generateLibraryState(e,r);return t?`${n}${d.RESOURCE_DELIM}${t}`:n}static generateLibraryState(e,t){if(!e)throw Wt(Rt);const r={id:e.createNewGuid()};t&&(r.meta=t);const n=JSON.stringify(r);return e.base64Encode(n)}static parseRequestState(e,t){if(!e)throw Wt(Rt);if(!t)throw Wt(ct);try{const r=t.split(d.RESOURCE_DELIM),n=r[0],o=r.length>1?r.slice(1).join(d.RESOURCE_DELIM):d.EMPTY_STRING,i=e.base64Decode(n),s=JSON.parse(i);return{userRequestState:o||d.EMPTY_STRING,libraryState:s}}catch(e){throw Wt(ct)}}}const hc="sw";class uc{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(Kn.PopTokenGenerateCnf,e.correlationId);const r=await Zt(this.generateKid.bind(this),Kn.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),n=this.cryptoUtils.base64UrlEncode(JSON.stringify(r));return{kid:r.kid,reqCnfString:n}}async generateKid(e){this.performanceClient?.addQueueMeasurement(Kn.PopTokenGenerateKid,e.correlationId);return{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:hc}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,n){const{resourceRequestMethod:o,resourceRequestUri:i,shrClaims:s,shrNonce:a,shrOptions:c}=r,l=i?new Yt(i):void 0,d=l?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:ei(),m:o?.toUpperCase(),u:d?.HostNameAndPort,nonce:a||this.cryptoUtils.createNewGuid(),p:d?.AbsolutePath,q:d?.QueryString?[[],d.QueryString]:void 0,client_claims:s||void 0,...n},t,c,r.correlationId)}}class gc{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class pc{constructor(e,t,r,n,o,i,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=n,this.serializableCache=o,this.persistencePlugin=i,this.performanceClient=s}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const r=`Error(s): ${e.error_codes||d.NOT_AVAILABLE} - Timestamp: ${e.timestamp||d.NOT_AVAILABLE} - Description: ${e.error_description||d.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||d.NOT_AVAILABLE} - Trace ID: ${e.trace_id||d.NOT_AVAILABLE}`,n=e.error_codes?.length?e.error_codes[0]:void 0,o=new ac(e.error,r,e.suberror,n,e.status);if(t&&e.status&&e.status>=m&&e.status<=f)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${o}`);if(t&&e.status&&e.status>=u&&e.status<=p)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${o}`);if(Xs(e.error,e.error_description,e.suberror))throw new Ys(e.error,e.error_description,e.suberror,e.timestamp||d.EMPTY_STRING,e.trace_id||d.EMPTY_STRING,e.correlation_id||d.EMPTY_STRING,e.claims||d.EMPTY_STRING,n);throw o}}async handleServerTokenResponse(e,t,r,n,o,i,s,a,c){let l,h;if(this.performanceClient?.addQueueMeasurement(Kn.HandleServerTokenResponse,e.correlation_id),e.id_token){if(l=Xo(e.id_token||d.EMPTY_STRING,this.cryptoObj.base64Decode),o&&o.nonce&&l.nonce!==o.nonce)throw Wt(ht);if(n.maxAge||0===n.maxAge){const e=l.auth_time;if(!e)throw Wt(ut);Zo(e,n.maxAge)}}this.homeAccountIdentifier=Pi.generateHomeAccountId(e.client_info||d.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,l),o&&o.state&&(h=dc.parseRequestState(this.cryptoObj,o.state)),e.key_id=e.key_id||n.sshKid||void 0;const u=this.generateCacheRecord(e,t,r,n,l,i,o);let g;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),g=new gc(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(g)),s&&!a&&u.account){const e=u.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,n.correlationId))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await pc.generateAuthenticationResult(this.cryptoObj,t,u,!1,n,l,h,void 0,c)}await this.cacheStorage.saveCacheRecord(u,n.correlationId,n.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&g&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(g))}return pc.generateAuthenticationResult(this.cryptoObj,t,u,!1,n,l,h,e,c)}generateCacheRecord(e,t,r,n,o,i,s){const a=t.getPreferredCache();if(!a)throw Wt(Et);const c=_i(o);let l,d;e.id_token&&o&&(l=si(this.homeAccountIdentifier,a,e.id_token,this.clientId,c||""),d=mc(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,n.correlationId,o,e.client_info,a,c,s,void 0,this.logger));let h=null;if(e.access_token){const o=e.scope?vi.fromString(e.scope):new vi(n.scopes||[]),s=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,l=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,d=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+s,g=u+l,p=d&&d>0?r+d:void 0;h=ai(this.homeAccountIdentifier,a,e.access_token,this.clientId,c||t.tenant||"",o.printScopes(),u,g,this.cryptoObj.base64Decode,p,e.token_type,i,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;if(e.refresh_token_expires_in){t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)}u=ci(this.homeAccountIdentifier,a,e.refresh_token,this.clientId,e.foci,i,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:a,familyId:e.foci}),{account:d,idToken:l,accessToken:h,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(e,t,r,n,o,i,s,a,c){let l,h,u=d.EMPTY_STRING,g=[],p=null,m=d.EMPTY_STRING;if(r.accessToken){if(r.accessToken.tokenType!==re.POP||o.popKid)u=r.accessToken.secret;else{const t=new uc(e),{secret:n,keyId:i}=r.accessToken;if(!i)throw Wt(xt);u=await t.signPopToken(n,i,o)}g=vi.fromString(r.accessToken.target).asArray(),p=ri(r.accessToken.expiresOn),l=ri(r.accessToken.extendedExpiresOn),r.accessToken.refreshOn&&(h=ri(r.accessToken.refreshOn))}r.appMetadata&&(m=r.appMetadata.familyId===j?j:"");const f=i?.oid||i?.sub||"",C=i?.tid||"";a?.spa_accountid&&r.account&&(r.account.nativeAccountId=a?.spa_accountid);const y=r.account?ki(r.account.getAccountInfo(),void 0,i,r.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:f,tenantId:C,scopes:g,account:y,idToken:r?.idToken?.secret||"",idTokenClaims:i||{},accessToken:u,fromCache:n,expiresOn:p,extExpiresOn:l,refreshOn:h,correlationId:o.correlationId,requestId:c||d.EMPTY_STRING,familyId:m,tokenType:r.accessToken?.tokenType||d.EMPTY_STRING,state:s?s.userRequestState:d.EMPTY_STRING,cloudGraphHostName:r.account?.cloudGraphHostName||d.EMPTY_STRING,msGraphHost:r.account?.msGraphHost||d.EMPTY_STRING,code:a?.spa_code,fromNativeBroker:!1}}}function mc(e,t,r,n,o,i,s,a,c,l,d,h){h?.verbose("setCachedAccount called");const u=e.getAccountKeys().find((e=>e.startsWith(r)));let g=null;u&&(g=e.getAccount(u,o));const p=g||Pi.createAccount({homeAccountId:r,idTokenClaims:i,clientInfo:s,environment:a,cloudGraphHostName:l?.cloud_graph_host_name,msGraphHost:l?.msgraph_host,nativeAccountId:d},t,n),m=p.tenantProfiles||[],f=c||p.realm;if(f&&!m.find((e=>e.tenantId===f))){const e=Ai(r,p.localAccountId,f,i);m.push(e)}return p.tenantProfiles=m,p}class fc{static validateRedirectUri(e){if(!e)throw Xe(be)}static validatePrompt(e){const t=[];for(const e in O)t.push(O[e]);if(t.indexOf(e)<0)throw Xe(Oe)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw Xe(qe)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw Xe(xe);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([q.PLAIN,q.S256].indexOf(e)<0)throw Xe(He)}}async function Cc(e,t,r){if("string"==typeof e)return e;return e({clientId:t,tokenEndpoint:r})}class yc extends lc{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(Kn.AuthClientAcquireToken,e.correlationId),!e.code)throw Wt(Ct);const r=ei(),n=await Zt(this.executeTokenRequest.bind(this),Kn.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),o=n.headers?.[S],i=new pc(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(n.body),Zt(i.handleServerTokenResponse.bind(i),Kn.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,r,e,t,void 0,void 0,void 0,o)}getLogoutUri(e){if(!e)throw Xe(Le);const t=this.createLogoutUrlQueryString(e);return Yt.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(Kn.AuthClientExecuteTokenRequest,t.correlationId);const r=this.createTokenQueryParameters(t),n=Yt.appendQueryString(e.tokenEndpoint,r),o=await Zt(this.createTokenRequestBody.bind(this),Kn.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const e=wi(t.clientInfo,this.cryptoUtils.base64Decode);i={credential:`${e.uid}${$}${e.utid}`,type:Ta}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const s=this.createTokenRequestHeaders(i||t.ccsCredential),a=ea(this.config.authOptions.clientId,t);return Zt(this.executePostToTokenEndpoint.bind(this),Kn.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(n,o,s,a,t.correlationId,Kn.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(Kn.AuthClientCreateTokenRequestBody,e.correlationId);const t=new Map;if(La(t,e.embeddedClientId||e.tokenBodyParameters?.[ka]||this.config.authOptions.clientId),this.includeRedirectUri?Ha(t,e.redirectUri):fc.validateRedirectUri(e.redirectUri),Ua(t,e.scopes,!0,this.oidcDefaultScopes),function(e,t){e.set("code",t)}(t,e.code),Ga(t,this.config.libraryInfo),$a(t,this.config.telemetry.application),oc(t),this.serverTelemetryManager&&!Zi(this.config)&&nc(t,this.serverTelemetryManager),e.codeVerifier&&function(e,t){e.set("code_verifier",t)}(t,e.codeVerifier),this.config.clientCredentials.clientSecret&&Wa(t,this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const r=this.config.clientCredentials.clientAssertion;ja(t,await Cc(r.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),Va(t,r.assertionType)}if(Ja(t,B),Ya(t),e.authenticationScheme===re.POP){const r=new uc(this.cryptoUtils,this.performanceClient);let n;if(e.popKid)n=this.cryptoUtils.encodeKid(e.popKid);else{n=(await Zt(r.generateCnf.bind(r),Kn.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString}tc(t,n)}else if(e.authenticationScheme===re.SSH){if(!e.sshJwk)throw Xe(Ke);rc(t,e.sshJwk)}let r;if((!Ze.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&Ka(t,e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=wi(e.clientInfo,this.cryptoUtils.base64Decode);r={credential:`${t.uid}${$}${t.utid}`,type:Ta}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else r=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&r)switch(r.type){case Ta:try{Da(t,Ii(r.credential))}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Aa:Ba(t,r.credential)}return e.embeddedClientId&&ic(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenBodyParameters&&Za(t,e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[Ra]||Za(t,{[Ra]:"1"}),Oa(t,e.correlationId,this.performanceClient),Jt(t)}createLogoutUrlQueryString(e){const t=new Map;return e.postLogoutRedirectUri&&function(e,t){e.set("post_logout_redirect_uri",t)}(t,e.postLogoutRedirectUri),e.correlationId&&za(t,e.correlationId),e.idTokenHint&&function(e,t){e.set("id_token_hint",t)}(t,e.idTokenHint),e.state&&Qa(t,e.state),e.logoutHint&&function(e,t){e.set("logout_hint",t)}(t,e.logoutHint),e.extraQueryParameters&&Za(t,e.extraQueryParameters),this.config.authOptions.instanceAware&&Xa(t),Jt(t,this.config.authOptions.encodeExtraQueryParams,e.extraQueryParameters)}}function vc(e){const{skus:t,libraryName:r,libraryVersion:n,extensionName:o,extensionVersion:i}=e,s=new Map([[0,[r,n]],[2,[o,i]]]);let a=[];if(t?.length){if(a=t.split(","),a.length<4)return t}else a=Array.from({length:4},(()=>"|"));return s.forEach(((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){const{skuArr:t,index:r,skuName:n,skuVersion:o}=e;if(r>=t.length)return;t[r]=[n,o].join("|")}({skuArr:a,index:t,skuName:e[0],skuVersion:e[1]})})),a.join(",")}class wc{constructor(e,t){this.cacheOutcome=me,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||d.EMPTY_STRING,this.wrapperVer=e.wrapperVer||d.EMPTY_STRING,this.telemetryCacheKey=te.CACHE_KEY+G+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${te.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();r?.length&&t.push(`broker_error=${r}`);const n=t.join(te.VALUE_SEPARATOR),o=[e,this.getRegionDiscoveryFields()].join(te.VALUE_SEPARATOR);return[te.SCHEMA_VERSION,o,n].join(te.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=wc.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(te.VALUE_SEPARATOR),n=e.errors.slice(0,t).join(te.VALUE_SEPARATOR),o=e.errors.length,i=[o,t<o?te.OVERFLOW_TRUE:te.OVERFLOW_FALSE].join(te.VALUE_SEPARATOR);return[te.SCHEMA_VERSION,e.cacheHits,r,n,i].join(te.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=te.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof Se?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(te.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t,this.correlationId)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e,this.correlationId),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){const e=this.getLastRequests(),t=wc.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey,this.correlationId);else{const r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r,this.correlationId)}}static maxErrorsToSend(e){let t,r=0,n=0;const o=e.errors.length;for(t=0;t<o;t++){const o=e.failedRequests[2*t]||d.EMPTY_STRING,i=e.failedRequests[2*t+1]||d.EMPTY_STRING,s=e.errors[t]||d.EMPTY_STRING;if(n+=o.toString().length+i.toString().length+s.length+3,!(n<te.MAX_LAST_HEADER_BYTES))break;r+=1}return r}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||d.EMPTY_STRING),e.push(this.regionSource||d.EMPTY_STRING),e.push(this.regionOutcome||d.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t,this.correlationId)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e,this.correlationId)}static makeExtraSkuString(e){return vc(e)}}class Ic{constructor(e,t,r,n,o,i,s,a,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=o,this.navigationClient=i,this.platformAuthProvider=a,this.correlationId=c||go(),this.logger=n.clone(rn.MSAL_SKU,ds,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e,t){if(t){Pi.accountInfoIsEqual(t,this.browserStorage.getActiveAccount(e),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null,e));try{this.browserStorage.removeAccount(Pi.generateAccountCacheKey(t),e),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),this.browserStorage.clear(e),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return Yt.getAbsoluteUrl(t,qo())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const r={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new wc(r,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,r=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(Kn.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.requestAuthority||this.config.auth.authority,i=r?.length?"true"===r:this.config.auth.instanceAware,s=t&&i?this.config.auth.authority.replace(Yt.getDomainFromUrl(o),t.environment):o,a=Ls.generateAuthority(s,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await Zt(sc,Kn.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(a,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw Xe(je);return c}}async function Tc(e,t,r,n){r.addQueueMeasurement(Kn.InitializeBaseRequest,e.correlationId);const o=e.authority||t.auth.authority,i=[...e&&e.scopes||[]],s={...e,correlationId:e.correlationId,authority:o,scopes:i};if(s.authenticationScheme){if(s.authenticationScheme===re.SSH){if(!e.sshJwk)throw Xe(Ke);if(!e.sshKid)throw Xe(ze)}n.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}else s.authenticationScheme=re.BEARER,n.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!Ze.isEmptyObj(e.claims)&&(s.requestedClaimsHash=await To(e.claims)),s}async function Ac(e,t,r,n,o){n.addQueueMeasurement(Kn.InitializeSilentRequest,e.correlationId);const i=await Zt(Tc,Kn.InitializeBaseRequest,o,n,e.correlationId)(e,r,n,o);return{...e,...i,account:t,forceRefresh:e.forceRefresh||!1}}class kc extends Ic{initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||go(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=Yt.getAbsoluteUrl(e.postLogoutRedirectUri,qo())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=Yt.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,qo())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=Yt.getAbsoluteUrl(qo(),qo())),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(Kn.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const t=await Zt(this.getClientConfiguration.bind(this),Kn.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e);return new yc(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:r,requestAzureCloudOptions:n,requestExtraQueryParameters:o,account:i}=e;this.performanceClient.addQueueMeasurement(Kn.StandardInteractionClientGetClientConfiguration,this.correlationId);const s=await Zt(this.getDiscoveredAuthority.bind(this),Kn.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:r,requestAzureCloudOptions:n,requestExtraQueryParameters:o,account:i}),a=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:s,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:a.loggerCallback,piiLoggingEnabled:a.piiLoggingEnabled,logLevel:a.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:rn.MSAL_SKU,version:ds,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(Kn.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const r=this.getRedirectUri(e.redirectUri),n={interactionType:t},o=dc.setRequestState(this.browserCrypto,e&&e.state||d.EMPTY_STRING,n),i={...await Zt(Tc,Kn.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:r,state:o,nonce:e.nonce||go(),responseMode:this.config.auth.OIDCOptions.serverResponseType};if(e.loginHint||e.sid)return i;const s=e.account||this.browserStorage.getActiveAccount(this.correlationId);return s&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${s.homeAccountId}`,this.correlationId),i.account=s),i}}function Sc(e,t,r){const n=Vt(e);if(!n)throw jt(e)?(r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),tn(ar)):(r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),tn(ir));return n}function Ec(e,t,r){if(!e.state)throw tn(sr);const n=function(e,t){if(!t)return null;try{return dc.parseRequestState(e,t).libraryState.meta}catch(e){throw Wt(ct)}}(t,e.state);if(!n)throw tn(cr);if(n.interactionType!==r)throw tn(lr)}function bc(e,t,r,n){const o=t.correlationId,i=new Map;La(i,t.embeddedClientId||t.extraQueryParameters?.[ka]||e.clientId);if(Ua(i,[...t.scopes||[],...t.extraScopesToConsent||[]],!0,e.authority.options.OIDCOptions?.defaultScopes),Ha(i,t.redirectUri),za(i,o),function(e,t){e.set("response_mode",t||x)}(i,t.responseMode),Ya(i),t.prompt&&(!function(e,t){e.set("prompt",t)}(i,t.prompt),n?.addFields({prompt:t.prompt},o)),t.domainHint&&(!function(e,t){e.set("domain_hint",t)}(i,t.domainHint),n?.addFields({domainHintFromRequest:!0},o)),t.prompt!==O.SELECT_ACCOUNT)if(t.sid&&t.prompt===O.NONE)r.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),Fa(i,t.sid),n?.addFields({sidFromRequest:!0},o);else if(t.account){const e=(s=t.account,s.idTokenClaims?.sid||null);let a=function(e){return e.idTokenClaims?.login_hint||null}(t.account);if(a&&t.domainHint&&(r.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),a=null),a){r.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),xa(i,a),n?.addFields({loginHintFromClaim:!0},o);try{Da(i,Ii(t.account.homeAccountId))}catch(e){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e&&t.prompt===O.NONE){r.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),Fa(i,e),n?.addFields({sidFromClaim:!0},o);try{Da(i,Ii(t.account.homeAccountId))}catch(e){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(t.loginHint)r.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),xa(i,t.loginHint),Ba(i,t.loginHint),n?.addFields({loginHintFromRequest:!0},o);else if(t.account.username){r.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),xa(i,t.account.username),n?.addFields({loginHintFromUpn:!0},o);try{Da(i,Ii(t.account.homeAccountId))}catch(e){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else t.loginHint&&(r.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),xa(i,t.loginHint),Ba(i,t.loginHint),n?.addFields({loginHintFromRequest:!0},o));else r.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");var s;return t.nonce&&function(e,t){e.set("nonce",t)}(i,t.nonce),t.state&&Qa(i,t.state),(t.claims||e.clientCapabilities&&e.clientCapabilities.length>0)&&Ka(i,t.claims,e.clientCapabilities),t.embeddedClientId&&ic(i,e.clientId,e.redirectUri),!e.instanceAware||t.extraQueryParameters&&Object.keys(t.extraQueryParameters).includes(Na)||Xa(i),i}function Rc(e,t,r,n){const o=Jt(t,r,n);return Yt.appendQueryString(e.authorizationEndpoint,o)}function _c(e,t){if(!e.state||!t)throw e.state?Wt(dt,"Cached State"):Wt(dt,"Server State");let r,n;try{r=decodeURIComponent(e.state)}catch(t){throw Wt(ct,e.state)}try{n=decodeURIComponent(t)}catch(t){throw Wt(ct,e.state)}if(r!==n)throw Wt(lt);if(e.error||e.error_description||e.suberror){const t=function(e){const t="code=",r=e.error_uri?.lastIndexOf(t);return r&&r>=0?e.error_uri?.substring(r+t.length):void 0}(e);if(Xs(e.error,e.error_description,e.suberror))throw new Ys(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new ac(e.error||"",e.error_description,e.suberror,t)}}class Pc{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(Kn.HandleCodeResponse,t.correlationId);try{r=function(e,t){if(_c(e,t),!e.code)throw Wt(Ut);return e}(e,t.state)}catch(e){throw e instanceof ac&&e.subError===gr?tn(gr):e}return Zt(this.handleCodeResponseFromServer.bind(this),Kn.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(Kn.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await Zt(this.authModule.updateAuthority.bind(this.authModule),Kn.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await Zt(this.authModule.acquireToken.bind(this.authModule),Kn.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:Ta}:e.loginHint?{credential:e.loginHint,type:Aa}:null}}const Mc="user_switch",Nc={[Mc]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class Oc extends Se{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,Oc.prototype),this.name="NativeAuthError",this.ext=r}}function qc(e){return!(!e.ext||!e.ext.status||"PERSISTENT_ERROR"!==e.ext.status&&"DISABLED"!==e.ext.status)||(!(!e.ext||!e.ext.error||-2147186943!==e.ext.error)||"ContentError"===e.errorCode)}function Uc(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return Zs(Ds);case"USER_INTERACTION_REQUIRED":return new Ys(e,t);case"USER_CANCEL":return tn(gr);case"NO_NETWORK":return tn(_r);case"UX_NOT_ALLOWED":return Zs(Ks)}return new Oc(e,Nc[e]||t,r)}class Lc extends lc{constructor(e,t){super(e,t)}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(Kn.SilentFlowClientAcquireCachedToken,e.correlationId);let t=me;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!Ze.isEmptyObj(e.claims))throw this.setCacheOutcome(fe,e.correlationId),Wt(Nt);if(!e.account)throw Wt(kt);const r=e.account.tenantId||function(e){const t=new Yt(e).getUrlComponents(),r=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(r){case R:case _:case P:return;default:return r}}(e.authority),n=this.cacheManager.getTokenKeys(),o=this.cacheManager.getAccessToken(e.account,e,n,r);if(!o)throw this.setCacheOutcome(Ce,e.correlationId),Wt(Nt);if(oi(o.cachedAt)||ni(o.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(ye,e.correlationId),Wt(Nt);o.refreshOn&&ni(o.refreshOn,0)&&(t=ve);const i=e.authority||this.authority.getPreferredCache(),s={account:this.cacheManager.readAccountFromCache(e.account,e.correlationId),accessToken:o,idToken:this.cacheManager.getIdToken(e.account,e.correlationId,n,r,this.performanceClient),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(i)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await Zt(this.generateResultFromCacheRecord.bind(this),Kn.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(s,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==me&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let r;if(this.performanceClient?.addQueueMeasurement(Kn.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId),e.idToken&&(r=Xo(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=r?.auth_time;if(!e)throw Wt(ut);Zo(e,t.maxAge)}return pc.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,r)}}class Hc extends kc{async acquireToken(e){this.performanceClient.addQueueMeasurement(Kn.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(Nn.acquireTokenSilent_silentFlow),r=await Zt(this.getClientConfiguration.bind(this),Kn.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),n=new Lc(r,this.performanceClient);this.logger.verbose("Silent auth client created");try{const t=(await Zt(n.acquireCachedToken.bind(n),Kn.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof en&&e.errorCode===qr&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t.correlationId,t?.account)}}class xc extends Ic{constructor(e,t,r,n,o,i,s,a,c,l,d,h){super(e,t,r,n,o,i,a,c,h),this.apiId=s,this.accountId=l,this.platformAuthProvider=c,this.nativeStorageManager=d,this.silentCacheClient=new Hc(e,this.nativeStorageManager,r,n,o,i,a,c,h);const u=this.platformAuthProvider.getExtensionName();this.skus=wc.makeExtraSkuString({libraryName:rn.MSAL_SKU,libraryVersion:ds,extensionName:u,extensionVersion:this.platformAuthProvider.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[_a]:this.skus}}async acquireToken(e,t){this.performanceClient.addQueueMeasurement(Kn.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const r=this.performanceClient.startMeasurement(Kn.NativeInteractionClientAcquireToken,e.correlationId),n=ei(),o=this.initializeServerTelemetryManager(this.apiId);try{const i=await this.initializeNativeRequest(e);try{const e=await this.acquireTokensFromCache(this.accountId,i);return r.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){if(t===Bn.AccessToken)throw this.logger.info("MSAL internal Cache does not contain tokens, return error as per cache policy"),e;this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const s=await this.platformAuthProvider.sendMessage(i);return await this.handleNativeResponse(s,i,n).then((e=>(r.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),o.clearNativeBrokerErrorCode(),e))).catch((e=>{throw r.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e}))}catch(e){throw e instanceof Oc&&o.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:vi.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),Wt(bt);const r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e},this.correlationId);if(!r)throw Wt(bt);try{const e=this.createSilentCacheRequest(t,r),n=await this.silentCacheClient.acquireToken(e),o={...r,idTokenClaims:n?.idTokenClaims,idToken:n?.idToken};return{...n,account:o}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...r}=e;delete r.onRedirectNavigate;const n=await this.initializeNativeRequest(r);try{await this.platformAuthProvider.sendMessage(n)}catch(e){if(e instanceof Oc){if(this.initializeServerTelemetryManager(this.apiId).setNativeBrokerErrorCode(e.errorCode),qc(e))throw e}}this.browserStorage.setTemporaryCache(En,JSON.stringify(n),!0);const o={apiId:Nn.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(i,o)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:n,...o}=r;n&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(En));const i=ei();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const e=await this.platformAuthProvider.sendMessage(o),t=await this.handleNativeResponse(e,o,i);return this.initializeServerTelemetryManager(this.apiId).clearNativeBrokerErrorCode(),t}catch(e){throw e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const n=Xo(e.id_token,Yn),o=this.createHomeAccountIdentifier(e,n),i=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId},this.correlationId)?.homeAccountId;if(t.extraParameters?.child_client_id&&e.account.id!==t.accountId)this.logger.info("handleNativeServerResponse: Double broker flow detected, ignoring accountId mismatch");else if(o!==i&&e.account.id!==t.accountId)throw Uc(Mc);const s=await this.getDiscoveredAuthority({requestAuthority:t.authority}),a=mc(this.browserStorage,s,o,Yn,this.correlationId,n,e.client_info,void 0,n.tid,void 0,e.account.id,this.logger);e.expires_in=Number(e.expires_in);const c=await this.generateAuthenticationResult(e,t,n,a,s.canonicalAuthority,r);return await this.cacheAccount(a,this.correlationId),await this.cacheNativeTokens(e,t,o,n,e.access_token,c.tenantId,r),c}createHomeAccountIdentifier(e,t){return Pi.generateHomeAccountId(e.client_info||d.EMPTY_STRING,Si,this.logger,this.browserCrypto,t)}generateScopes(e,t){return t?vi.fromString(t):vi.fromString(e)}async generatePopAccessToken(e,t){if(t.tokenType===re.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const r=new uc(this.browserCrypto),n={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw Wt(xt);return r.signPopToken(e.access_token,t.keyId,n)}return e.access_token}async generateAuthenticationResult(e,t,r,n,o,i){const s=this.addTelemetryFromNativeResponse(e.properties.MATS),a=this.generateScopes(t.scope,e.scope),c=e.account.properties||{},l=c.UID||r.oid||r.sub||d.EMPTY_STRING,h=c.TenantId||r.tid||d.EMPTY_STRING,u=ki(n.getAccountInfo(),void 0,r,e.id_token);u.nativeAccountId!==e.account.id&&(u.nativeAccountId=e.account.id);const g=await this.generatePopAccessToken(e,t),p=t.tokenType===re.POP?re.POP:re.BEARER;return{authority:o,uniqueId:l,tenantId:h,scopes:a.asArray(),account:u,idToken:e.id_token,idTokenClaims:r,accessToken:g,fromCache:!!s&&this.isResponseFromCache(s),expiresOn:ri(i+e.expires_in),tokenType:p,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}async cacheAccount(e,t){await this.browserStorage.setAccount(e,this.correlationId),this.browserStorage.removeAccountContext(e,t)}cacheNativeTokens(e,t,r,n,o,i,s){const a=si(r,t.authority,e.id_token||"",t.clientId,n.tid||""),c=s+(t.tokenType===re.POP?d.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0),l=this.generateScopes(e.scope,t.scope),h={idToken:a,accessToken:ai(r,t.authority,o,t.clientId,n.tid||i,l.printScopes(),c,0,Yn,void 0,t.tokenType,void 0,t.keyId)};return this.nativeStorageManager.saveCacheRecord(h,this.correlationId,t.storeInCache)}getExpiresInValue(e,t){return e===re.POP?d.SHR_NONCE_VALIDITY:("string"==typeof t?parseInt(t,10):t)||0}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.platformAuthProvider.getExtensionId(),extensionVersion:this.platformAuthProvider.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}getMATSFromResponse(e){if(e)try{return JSON.parse(e)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=await this.getCanonicalAuthority(e),{scopes:r,...n}=e,o=new vi(r||[]);o.appendScopes(C);const i={...n,accountId:this.accountId,clientId:this.config.auth.clientId,authority:t.urlString,scope:o.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:this.getPrompt(e.prompt),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(i.signPopToken&&e.popKid)throw tn(Qr);if(this.handleExtraBrokerParams(i),i.extraParameters=i.extraParameters||{},i.extraParameters.telemetry=sn,e.authenticationScheme===re.POP){const t={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},r=new uc(this.browserCrypto);let n;if(i.keyId)n=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:i.keyId})),i.signPopToken=!1;else{const o=await Zt(r.generateCnf.bind(r),Kn.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(t,this.logger);n=o.reqCnfString,i.keyId=o.kid,i.signPopToken=!0}i.reqCnf=n}return this.addRequestSKUs(i),i}async getCanonicalAuthority(e){const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const r=new Yt(t);return r.validateAsUri(),r}getPrompt(e){switch(this.apiId){case Nn.ssoSilent:case Nn.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),O.NONE}if(e)switch(e){case O.NONE:case O.CONSENT:case O.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e} is not compatible with native flow`),tn(Gr)}else this.logger.trace("initializeNativeRequest: prompt was not provided")}handleExtraBrokerParams(e){const t=e.extraParameters&&e.extraParameters.hasOwnProperty(Pa)&&e.extraParameters.hasOwnProperty(Ma)&&e.extraParameters.hasOwnProperty(ka);if(!e.embeddedClientId&&!t)return;let r="";const n=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,r=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters[Ma],r=e.extraParameters[ka]),e.extraParameters={child_client_id:r,child_redirect_uri:n},this.performanceClient?.addFields({embeddedClientId:r,embeddedRedirectUri:n},e.correlationId)}}async function Bc(e,t,r,n,o){const i=bc({...e.auth,authority:t},r,n,o);if(Ga(i,{sku:rn.MSAL_SKU,version:ds,os:"",cpu:""}),e.auth.protocolMode!==Wo.OIDC&&$a(i,e.telemetry.application),r.platformBroker&&(function(e){e.set("nativebroker","1")}(i),r.authenticationScheme===re.POP)){const e=new Os(n,o),t=new uc(e);let s;if(r.popKid)s=e.encodeKid(r.popKid);else{s=(await Zt(t.generateCnf.bind(t),Kn.PopTokenGenerateCnf,n,o,r.correlationId)(r,n)).reqCnfString}tc(i,s)}return Oa(i,r.correlationId,o),i}async function Dc(e,t,r,n,o){if(!r.codeChallenge)throw Xe(xe);const i=await Zt(Bc,Kn.GetStandardParams,n,o,r.correlationId)(e,t,r,n,o);return qa(i,U),function(e,t,r){if(!t||!r)throw Xe(xe);e.set("code_challenge",t),e.set("code_challenge_method",r)}(i,r.codeChallenge,d.S256_CODE_CHALLENGE_METHOD),Za(i,r.extraQueryParameters||{}),Rc(t,i,e.auth.encodeExtraQueryParams,r.extraQueryParameters)}async function Fc(e,t,r,n,o,i){if(!n.earJwk)throw tn(tr);const s=await Bc(t,r,n,o,i);qa(s,L),function(e,t){e.set("ear_jwk",encodeURIComponent(t)),e.set("ear_jwe_crypto","eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0")}(s,n.earJwk);const a=new Map;Za(a,n.extraQueryParameters||{});return function(e,t,r){const n=e.createElement("form");return n.method="post",n.action=t,r.forEach(((t,r)=>{const o=e.createElement("input");o.hidden=!0,o.name=r,o.value=t,n.appendChild(o)})),e.body.appendChild(n),n}(e,Rc(r,a,t.auth.encodeExtraQueryParams,n.extraQueryParameters),s)}async function Kc(e,t,r,n,o,i,s,a,c,l){if(a.verbose("Account id found, calling WAM for token"),!l)throw tn(Kr);const d=new Os(a,c),h=new xc(n,o,d,a,s,n.system.navigationClient,r,c,l,t,i,e.correlationId),{userRequestState:u}=dc.parseRequestState(d,e.state);return Zt(h.acquireToken.bind(h),Kn.NativeInteractionClientAcquireToken,a,c,e.correlationId)({...e,state:u,prompt:void 0})}async function zc(e,t,r,n,o,i,s,a,c,l,d,h){if(cc.removeThrottle(s,o.auth.clientId,e),t.accountId)return Zt(Kc,Kn.HandleResponsePlatformBroker,l,d,e.correlationId)(e,t.accountId,n,o,s,a,c,l,d,h);const u={...e,code:t.code||"",codeVerifier:r},g=new Pc(i,s,u,l,d);return await Zt(g.handleCodeResponse.bind(g),Kn.HandleCodeResponse,l,d,e.correlationId)(t,e)}async function Gc(e,t,r,n,o,i,s,a,c,l,d){if(cc.removeThrottle(i,n.auth.clientId,e),_c(t,e.state),!t.ear_jwe)throw tn(rr);if(!e.earJwk)throw tn(tr);const h=JSON.parse(await Zt(fo,Kn.DecryptEarResponse,c,l,e.correlationId)(e.earJwk,t.ear_jwe));if(h.accountId)return Zt(Kc,Kn.HandleResponsePlatformBroker,c,l,e.correlationId)(e,h.accountId,r,n,i,s,a,c,l,d);const u=new pc(n.auth.clientId,i,new Os(c,l),c,null,null,l);u.validateTokenResponse(h);const g={code:"",state:e.state,nonce:e.nonce,client_info:h.client_info,cloud_graph_host_name:h.cloud_graph_host_name,cloud_instance_host_name:h.cloud_instance_host_name,cloud_instance_name:h.cloud_instance_name,msgraph_host:h.msgraph_host};return await Zt(u.handleServerTokenResponse.bind(u),Kn.HandleServerTokenResponse,c,l,e.correlationId)(h,o,ei(),e,g,void 0,void 0,void 0,void 0)}async function $c(e,t,r){e.addQueueMeasurement(Kn.GeneratePkceCodes,r);const n=Xt(Qc,Kn.GenerateCodeVerifier,t,e,r)(e,t,r);return{verifier:n,challenge:await Zt(Wc,Kn.GenerateCodeChallengeFromVerifier,t,e,r)(n,e,t,r)}}function Qc(e,t,r){try{const n=new Uint8Array(32);Xt(ho,Kn.GetRandomValues,t,e,r)(n);return jn(n)}catch(e){throw tn(er)}}async function Wc(e,t,r,n){t.addQueueMeasurement(Kn.GenerateCodeChallengeFromVerifier,n);try{const o=await Zt(lo,Kn.Sha256Digest,r,t,n)(e,t,n);return jn(new Uint8Array(o))}catch(e){throw tn(er)}}class jc{constructor(e,t,r,n){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=n,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(Kn.NativeMessageHandlerHandshake),this.platformAuthType=hn}async sendMessage(e){this.logger.trace(this.platformAuthType+" - sendMessage called.");const t={method:pn,request:e},r={channel:nn,extensionId:this.extensionId,responseId:go(),body:t};this.logger.trace(this.platformAuthType+" - Sending request to browser extension"),this.logger.tracePii(this.platformAuthType+` - Sending request to browser extension: ${JSON.stringify(r)}`),this.messageChannel.port1.postMessage(r);const n=await new Promise(((e,t)=>{this.resolvers.set(r.responseId,{resolve:e,reject:t})}));return this.validatePlatformBrokerResponse(n)}static async createProvider(e,t,r){e.trace("PlatformAuthExtensionHandler - createProvider called.");try{const n=new jc(e,t,r,on);return await n.sendHandshakeRequest(),n}catch(n){const o=new jc(e,t,r);return await o.sendHandshakeRequest(),o}}async sendHandshakeRequest(){this.logger.trace(this.platformAuthType+" - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:nn,extensionId:this.extensionId,responseId:go(),body:{method:un}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise(((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout((()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r(tn(Dr)),this.handshakeResolvers.delete(e.responseId)}),this.handshakeTimeoutMs)}))}onWindowMessage(e){if(this.logger.trace(this.platformAuthType+" - onWindowMessage called"),e.source!==window)return;const t=e.data;if(t.channel&&t.channel===nn&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===un){const e=this.handshakeResolvers.get(t.responseId);if(!e)return void this.logger.trace(this.platformAuthType+`.onWindowMessage - resolver can't be found for request ${t.responseId}`);this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(tn(Fr))}}onChannelMessage(e){this.logger.trace(this.platformAuthType+" - onChannelMessage called.");const t=e.data,r=this.resolvers.get(t.responseId),n=this.handshakeResolvers.get(t.responseId);try{const e=t.body.method;if(e===mn){if(!r)return;const e=t.body.response;if(this.logger.trace(this.platformAuthType+" - Received response from browser extension"),this.logger.tracePii(this.platformAuthType+` - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(Uc(e.code,e.description,e.ext));else{if(!e.result)throw Ee(Ie,"Event does not contain result.");e.result.code&&e.result.description?r.reject(Uc(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result)}this.resolvers.delete(t.responseId)}else if(e===gn){if(!n)return void this.logger.trace(this.platformAuthType+`.onChannelMessage - resolver can't be found for request ${t.responseId}`);clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(this.platformAuthType+` - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),n.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(t):n&&n.reject(t)}}validatePlatformBrokerResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw Ee(Ie,"Response missing expected properties.")}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}getExtensionName(){return this.getExtensionId()===on?"chrome":this.getExtensionId()?.length?"unknown":void 0}}class Vc{constructor(e,t,r){this.logger=e,this.performanceClient=t,this.correlationId=r,this.platformAuthType=dn}static async createProvider(e,t,r){if(e.trace("PlatformAuthDOMHandler: createProvider called"),window.navigator?.platformAuthentication){const n=await window.navigator.platformAuthentication.getSupportedContracts(an);if(n?.includes(ln))return e.trace("Platform auth api available in DOM"),new Vc(e,t,r)}}getExtensionId(){return an}getExtensionVersion(){return""}getExtensionName(){return cn}async sendMessage(e){this.logger.trace(this.platformAuthType+" - Sending request to browser DOM API");try{const t=this.initializePlatformDOMRequest(e),r=await window.navigator.platformAuthentication.executeGetToken(t);return this.validatePlatformBrokerResponse(r)}catch(e){throw this.logger.error(this.platformAuthType+" - executeGetToken DOM API error"),e}}initializePlatformDOMRequest(e){this.logger.trace(this.platformAuthType+" - initializeNativeDOMRequest called");const{accountId:t,clientId:r,authority:n,scope:o,redirectUri:i,correlationId:s,state:a,storeInCache:c,embeddedClientId:l,extraParameters:d,...h}=e,u=this.getDOMExtraParams(h);return{accountId:t,brokerId:this.getExtensionId(),authority:n,clientId:r,correlationId:s||this.correlationId,extraParameters:{...d,...u},isSecurityTokenService:!1,redirectUri:i,scope:o,state:a,storeInCache:c,embeddedClientId:l}}validatePlatformBrokerResponse(e){if(e.hasOwnProperty("isSuccess")){if(e.hasOwnProperty("accessToken")&&e.hasOwnProperty("idToken")&&e.hasOwnProperty("clientInfo")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scopes")&&e.hasOwnProperty("expiresIn"))return this.logger.trace(this.platformAuthType+" - platform broker returned successful and valid response"),this.convertToPlatformBrokerResponse(e);if(e.hasOwnProperty("error")){const t=e;if(!1===t.isSuccess&&t.error&&t.error.code)throw this.logger.trace(this.platformAuthType+" - platform broker returned error response"),Uc(t.error.code,t.error.description,{error:parseInt(t.error.errorCode),protocol_error:t.error.protocolError,status:t.error.status,properties:t.error.properties})}}throw Ee(Ie,"Response missing expected properties.")}convertToPlatformBrokerResponse(e){this.logger.trace(this.platformAuthType+" - convertToNativeResponse called");return{access_token:e.accessToken,id_token:e.idToken,client_info:e.clientInfo,account:e.account,expires_in:e.expiresIn,scope:e.scopes,state:e.state||"",properties:e.properties||{},extendedLifetimeToken:e.extendedLifetimeToken??!1,shr:e.proofOfPossessionPayload}}getDOMExtraParams(e){return{...Object.entries(e).reduce(((e,[t,r])=>(e[t]=String(r),e)),{})}}}async function Jc(e,t,r){const n=new Qo(e||{},ls,ds);n.trace("isPlatformBrokerAvailable called");const o=t||new Gi;return"undefined"==typeof window?(n.trace("Non-browser environment detected, returning false"),!1):!!await Yc(n,o,r||go())}async function Yc(e,t,r,n){e.trace("getPlatformAuthProvider called",r);const o=function(){let e;try{return e=window[fn.SessionStorage],"true"===e?.getItem(Fn)}catch(e){return!1}}();let i;e.trace("Has client allowed platform auth via DOM API: "+o);try{o&&(i=await Vc.createProvider(e,t,r)),i||(e.trace("Platform auth via DOM API not available, checking for extension"),i=await jc.createProvider(e,n||cs,t))}catch(t){e.trace("Platform auth not available",t)}return i}function Xc(e,t,r,n){if(t.trace("isPlatformAuthAllowed called"),!e.system.allowPlatformBroker)return t.trace("isPlatformAuthAllowed: allowPlatformBroker is not enabled, returning false"),!1;if(!r)return t.trace("isPlatformAuthAllowed: Platform auth provider is not initialized, returning false"),!1;if(n)switch(n){case re.BEARER:case re.POP:return t.trace("isPlatformAuthAllowed: authenticationScheme is supported, returning true"),!0;default:return t.trace("isPlatformAuthAllowed: authenticationScheme is not supported, returning false"),!1}return!0}class Zc extends kc{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,s,c,l),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=a,this.eventHandler=o}acquireToken(e,t){try{const r={popupName:this.generatePopupName(e.scopes||C,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.performanceClient.addFields({isAsyncPopup:this.config.system.asyncPopups},this.correlationId),this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,r,t)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),r.popup=this.openSizedPopup("about:blank",r),this.acquireTokenPopupAsync(e,r,t))}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),r={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},n=e&&e.authority,o=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,n,o)):(this.logger.verbose("asyncPopup set to false, opening popup"),r.popup=this.openSizedPopup("about:blank",r),this.logoutPopupAsync(t,r,n,o))}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(e,t,r){this.logger.verbose("acquireTokenPopupAsync called");const n=await Zt(this.initializeAuthorizationRequest.bind(this),Kn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,On.Popup);t.popup&&zo(n.authority);const o=Xc(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme);return n.platformBroker=o,this.config.auth.protocolMode===Wo.EAR?this.executeEarFlow(n,t):this.executeCodeFlow(n,t,r)}async executeCodeFlow(e,t,r){const n=e.correlationId,o=this.initializeServerTelemetryManager(Nn.acquireTokenPopup),i=r||await Zt($c,Kn.GeneratePkceCodes,this.logger,this.performanceClient,n)(this.performanceClient,this.logger,n),s={...e,codeChallenge:i.challenge};try{const r=await Zt(this.createAuthCodeClient.bind(this),Kn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,n)({serverTelemetryManager:o,requestAuthority:s.authority,requestAzureCloudOptions:s.azureCloudOptions,requestExtraQueryParameters:s.extraQueryParameters,account:s.account}),a=await Zt(Dc,Kn.GetAuthCodeUrl,this.logger,this.performanceClient,n)(this.config,r.authority,s,this.logger,this.performanceClient),c=this.initiateAuthRequest(a,t);this.eventHandler.emitEvent(da.POPUP_OPENED,On.Popup,{popupWindow:c},null);const l=await this.monitorPopupForHash(c,t.popupWindowParent),d=Xt(Sc,Kn.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(l,this.config.auth.OIDCOptions.serverResponseType,this.logger);return await Zt(zc,Kn.HandleResponseCode,this.logger,this.performanceClient,n)(e,d,i.verifier,Nn.acquireTokenPopup,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}catch(e){throw t.popup?.close(),e instanceof Se&&(e.setCorrelationId(this.correlationId),o.cacheFailedRequest(e)),e}}async executeEarFlow(e,t){const r=e.correlationId,n=await Zt(this.getDiscoveredAuthority.bind(this),Kn.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,r)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),o=await Zt(mo,Kn.GenerateEarKey,this.logger,this.performanceClient,r)(),i={...e,earJwk:o},s=t.popup||this.openPopup("about:blank",t);(await Fc(s.document,this.config,n,i,this.logger,this.performanceClient)).submit();const a=await Zt(this.monitorPopupForHash.bind(this),Kn.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(s,t.popupWindowParent),c=Xt(Sc,Kn.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(a,this.config.auth.OIDCOptions.serverResponseType,this.logger);return Zt(Gc,Kn.HandleResponseEar,this.logger,this.performanceClient,r)(i,c,Nn.acquireTokenPopup,this.config,n,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async logoutPopupAsync(e,t,r,n){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(da.LOGOUT_START,On.Popup,e);const o=this.initializeServerTelemetryManager(Nn.logoutPopup);try{await this.clearCacheOnLogout(this.correlationId,e.account);const i=await Zt(this.createAuthCodeClient.bind(this),Kn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:o,requestAuthority:r,account:e.account||void 0});try{i.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&i.authority.protocolMode===Wo.OIDC){if(this.browserStorage.removeAccount(e.account?.homeAccountId,this.correlationId),this.eventHandler.emitEvent(da.LOGOUT_SUCCESS,On.Popup,e),n){const e={apiId:Nn.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=Yt.getAbsoluteUrl(n,qo());await this.navigationClient.navigateInternal(t,e)}return void t.popup?.close()}}const s=i.getLogoutUri(e);this.eventHandler.emitEvent(da.LOGOUT_SUCCESS,On.Popup,e);const a=this.openPopup(s,t);if(this.eventHandler.emitEvent(da.POPUP_OPENED,On.Popup,{popupWindow:a},null),await this.monitorPopupForHash(a,t.popupWindowParent).catch((()=>{})),n){const e={apiId:Nn.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=Yt.getAbsoluteUrl(n,qo());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw t.popup?.close(),e instanceof Se&&(e.setCorrelationId(this.correlationId),o.cacheFailedRequest(e)),this.eventHandler.emitEvent(da.LOGOUT_FAILURE,On.Popup,null,e),this.eventHandler.emitEvent(da.LOGOUT_END,On.Popup),e}this.eventHandler.emitEvent(da.LOGOUT_END,On.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),tn(or)}monitorPopupForHash(e,t){return new Promise(((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const n=setInterval((()=>{if(e.closed)return this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(n),void r(tn(gr));let o="";try{o=e.location.href}catch(e){}if(!o||"about:blank"===o)return;clearInterval(n);let i="";const s=this.config.auth.OIDCOptions.serverResponseType;e&&(i=s===H.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(i)}),this.config.system.pollIntervalMilliseconds)})).finally((()=>{this.cleanPopup(e,t)}))}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t)),!r)throw tn(ur);return r.focus&&r.focus(),this.currentWindow=r,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),r}catch(e){throw this.logger.error("error opening popup "+e.message),tn(hr)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:r,popupWindowParent:n}){const o=n.screenLeft?n.screenLeft:n.screenX,i=n.screenTop?n.screenTop:n.screenY,s=n.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,a=n.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=r.popupSize?.width,l=r.popupSize?.height,d=r.popupPosition?.top,h=r.popupPosition?.left;return(!c||c<0||c>s)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=rn.POPUP_WIDTH),(!l||l<0||l>a)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),l=rn.POPUP_HEIGHT),(!d||d<0||d>a)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),d=Math.max(0,a/2-rn.POPUP_HEIGHT/2+i)),(!h||h<0||h>s)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),h=Math.max(0,s/2-rn.POPUP_WIDTH/2+o)),n.open(e,t,`width=${c}, height=${l}, top=${d}, left=${h}, scrollbars=yes`)}unloadWindow(e){this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow)}generatePopupName(e,t){return`${rn.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${rn.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}class el extends kc{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,s,c,l),this.nativeStorage=a}async acquireToken(e){const t=await Zt(this.initializeAuthorizationRequest.bind(this),Kn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,On.Redirect);t.platformBroker=Xc(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme);const r=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.resetRequestCache(),this.eventHandler.emitEvent(da.RESTORE_FROM_BFCACHE,On.Redirect))},n=this.getRedirectStartPage(e.redirectStartPage);this.logger.verbosePii(`Redirect start page: ${n}`),this.browserStorage.setTemporaryCache(In,n,!0),window.addEventListener("pageshow",r);try{this.config.auth.protocolMode===Wo.EAR?await this.executeEarFlow(t):await this.executeCodeFlow(t,e.onRedirectNavigate)}catch(e){throw e instanceof Se&&e.setCorrelationId(this.correlationId),window.removeEventListener("pageshow",r),e}}async executeCodeFlow(e,t){const r=e.correlationId,n=this.initializeServerTelemetryManager(Nn.acquireTokenRedirect),o=await Zt($c,Kn.GeneratePkceCodes,this.logger,this.performanceClient,r)(this.performanceClient,this.logger,r),i={...e,codeChallenge:o.challenge};this.browserStorage.cacheAuthorizeRequest(i,o.verifier);try{const r=await Zt(this.createAuthCodeClient.bind(this),Kn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:i.authority,requestAzureCloudOptions:i.azureCloudOptions,requestExtraQueryParameters:i.extraQueryParameters,account:i.account}),o=await Zt(Dc,Kn.GetAuthCodeUrl,this.logger,this.performanceClient,e.correlationId)(this.config,r.authority,i,this.logger,this.performanceClient);return await this.initiateAuthRequest(o,t)}catch(e){throw e instanceof Se&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),e}}async executeEarFlow(e){const t=e.correlationId,r=await Zt(this.getDiscoveredAuthority.bind(this),Kn.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),n=await Zt(mo,Kn.GenerateEarKey,this.logger,this.performanceClient,t)(),o={...e,earJwk:n};this.browserStorage.cacheAuthorizeRequest(o);return(await Fc(document,this.config,r,o,this.logger,this.performanceClient)).submit(),new Promise(((e,t)=>{setTimeout((()=>{t(tn(Jr,"failed_to_redirect"))}),this.config.system.redirectNavigationTimeout)}))}async handleRedirectPromise(e="",t,r,n){const o=this.initializeServerTelemetryManager(Nn.handleRedirectPromise);try{const[i,s]=this.getRedirectResponse(e||"");if(!i)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.resetRequestCache(),"back_forward"!==function(){if("undefined"==typeof window||void 0===window.performance||"function"!=typeof window.performance.getEntriesByType)return;const e=window.performance.getEntriesByType("navigation"),t=e.length?e[0]:void 0;return t?.type}()?n.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const a=this.browserStorage.getTemporaryCache(In,!0)||d.EMPTY_STRING,c=Yt.removeHashFromUrl(a);if(c===Yt.removeHashFromUrl(window.location.href)&&this.config.auth.navigateToLoginRequestUrl){this.logger.verbose("Current page is loginRequestUrl, handling response"),a.indexOf("#")>-1&&Mo(a);return await this.handleResponse(i,t,r,o)}if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(i,t,r,o);if(!No()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(Tn,s,!0);const e={apiId:Nn.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let n=!0;if(a&&"null"!==a)this.logger.verbose(`Navigating to loginRequestUrl: ${a}`),n=await this.navigationClient.navigateInternal(a,e);else{const t=Uo();this.browserStorage.setTemporaryCache(In,t,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),n=await this.navigationClient.navigateInternal(t,e)}if(!n)return await this.handleResponse(i,t,r,o)}return null}catch(e){throw e instanceof Se&&(e.setCorrelationId(this.correlationId),o.cacheFailedRequest(e)),e}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(t=this.config.auth.OIDCOptions.serverResponseType===H.QUERY?window.location.search:window.location.hash);let r=Vt(t);if(r){try{Ec(r,this.browserCrypto,On.Redirect)}catch(e){return e instanceof Se&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return Po(window),this.logger.verbose("Hash contains known properties, returning response hash"),[r,t]}const n=this.browserStorage.getTemporaryCache(Tn,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(Tn)),n&&(r=Vt(n),r)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[r,n]):[null,""]}async handleResponse(e,t,r,n){if(!e.state)throw tn(sr);if(e.ear_jwe){const r=await Zt(this.getDiscoveredAuthority.bind(this),Kn.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t.correlationId)({requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account});return Zt(Gc,Kn.HandleResponseEar,this.logger,this.performanceClient,t.correlationId)(t,e,Nn.acquireTokenRedirect,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}const o=await Zt(this.createAuthCodeClient.bind(this),Kn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority});return Zt(zc,Kn.HandleResponseCode,this.logger,this.performanceClient,t.correlationId)(t,e,r,Nn.acquireTokenRedirect,this.config,o,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const r={apiId:Nn.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},n=t||this.config.auth.onRedirectNavigate;if("function"==typeof n){this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback");return!1!==n(e)?(this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),void await this.navigationClient.navigateExternal(e,r)):void this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation")}return this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),void await this.navigationClient.navigateExternal(e,r)}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),tn(or)}async logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),r=this.initializeServerTelemetryManager(Nn.logout);try{this.eventHandler.emitEvent(da.LOGOUT_START,On.Redirect,e),await this.clearCacheOnLogout(this.correlationId,t.account);const n={apiId:Nn.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},o=await Zt(this.createAuthCodeClient.bind(this),Kn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(o.authority.protocolMode===Wo.OIDC)try{o.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId)return this.browserStorage.removeAccount(t.account?.homeAccountId,this.correlationId),void this.eventHandler.emitEvent(da.LOGOUT_SUCCESS,On.Redirect,t)}const i=o.getLogoutUri(t);if(this.eventHandler.emitEvent(da.LOGOUT_SUCCESS,On.Redirect,t),!e||"function"!=typeof e.onRedirectNavigate)return this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0,wn),void await this.navigationClient.navigateExternal(i,n);if(!1!==e.onRedirectNavigate(i))return this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0,wn),void await this.navigationClient.navigateExternal(i,n);this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}catch(e){throw e instanceof Se&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),this.eventHandler.emitEvent(da.LOGOUT_FAILURE,On.Redirect,null,e),this.eventHandler.emitEvent(da.LOGOUT_END,On.Redirect),e}this.eventHandler.emitEvent(da.LOGOUT_END,On.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return Yt.getAbsoluteUrl(t,qo())}}async function tl(e,t,r,n,o){if(t.addQueueMeasurement(Kn.SilentHandlerInitiateAuthRequest,n),!e)throw r.info("Navigate url is empty"),tn(or);return o?Zt(ol,Kn.SilentHandlerLoadFrame,r,t,n)(e,o,t,n):Xt(il,Kn.SilentHandlerLoadFrameSync,r,t,n)(e)}async function rl(e,t,r,n,o){const i=sl();if(!i.contentDocument)throw"No document associated with iframe!";return(await Fc(i.contentDocument,e,t,r,n,o)).submit(),i}async function nl(e,t,r,n,o,i,s){return n.addQueueMeasurement(Kn.SilentHandlerMonitorIframeForHash,i),new Promise(((n,i)=>{t<as&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (${as}ms). This may result in timeouts.`);const a=window.setTimeout((()=>{window.clearInterval(c),i(tn(mr))}),t),c=window.setInterval((()=>{let t="";const r=e.contentWindow;try{t=r?r.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let o="";r&&(o=s===H.QUERY?r.location.search:r.location.hash),window.clearTimeout(a),window.clearInterval(c),n(o)}),r)})).finally((()=>{Xt(al,Kn.RemoveHiddenIframe,o,n,i)(e)}))}function ol(e,t,r,n){return r.addQueueMeasurement(Kn.SilentHandlerLoadFrame,n),new Promise(((r,n)=>{const o=sl();window.setTimeout((()=>{o?(o.src=e,r(o)):n("Unable to load iframe")}),t)}))}function il(e){const t=sl();return t.src=e,t}function sl(){const e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function al(e){document.body===e.parentNode&&document.body.removeChild(e)}class cl extends kc{constructor(e,t,r,n,o,i,s,a,c,l,d){super(e,t,r,n,o,i,a,l,d),this.apiId=s,this.nativeStorage=c}async acquireToken(e){this.performanceClient.addQueueMeasurement(Kn.SilentIframeClientAcquireToken,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==O.NONE&&t.prompt!==O.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${O.NONE}`),t.prompt=O.NONE):t.prompt=O.NONE;const r=await Zt(this.initializeAuthorizationRequest.bind(this),Kn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,On.Silent);return r.platformBroker=Xc(this.config,this.logger,this.platformAuthProvider,r.authenticationScheme),zo(r.authority),this.config.auth.protocolMode===Wo.EAR?this.executeEarFlow(r):this.executeCodeFlow(r)}async executeCodeFlow(e){let t;const r=this.initializeServerTelemetryManager(this.apiId);try{return t=await Zt(this.createAuthCodeClient.bind(this),Kn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),await Zt(this.silentTokenHelper.bind(this),Kn.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(t,e)}catch(n){if(n instanceof Se&&(n.setCorrelationId(this.correlationId),r.cacheFailedRequest(n)),!(t&&n instanceof Se&&n.errorCode===rn.INVALID_GRANT_ERROR))throw n;return this.performanceClient.addFields({retryError:n.errorCode},this.correlationId),await Zt(this.silentTokenHelper.bind(this),Kn.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(t,e)}}async executeEarFlow(e){const t=e.correlationId,r=await Zt(this.getDiscoveredAuthority.bind(this),Kn.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),n=await Zt(mo,Kn.GenerateEarKey,this.logger,this.performanceClient,t)(),o={...e,earJwk:n},i=await Zt(rl,Kn.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,t)(this.config,r,o,this.logger,this.performanceClient),s=this.config.auth.OIDCOptions.serverResponseType,a=await Zt(nl,Kn.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,t)(i,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,t,s),c=Xt(Sc,Kn.DeserializeResponse,this.logger,this.performanceClient,t)(a,s,this.logger);return Zt(Gc,Kn.HandleResponseEar,this.logger,this.performanceClient,t)(o,c,this.apiId,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}logout(){return Promise.reject(tn(wr))}async silentTokenHelper(e,t){const r=t.correlationId;this.performanceClient.addQueueMeasurement(Kn.SilentIframeClientTokenHelper,r);const n=await Zt($c,Kn.GeneratePkceCodes,this.logger,this.performanceClient,r)(this.performanceClient,this.logger,r),o={...t,codeChallenge:n.challenge},i=await Zt(Dc,Kn.GetAuthCodeUrl,this.logger,this.performanceClient,r)(this.config,e.authority,o,this.logger,this.performanceClient),s=await Zt(tl,Kn.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,r)(i,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait),a=this.config.auth.OIDCOptions.serverResponseType,c=await Zt(nl,Kn.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,a),l=Xt(Sc,Kn.DeserializeResponse,this.logger,this.performanceClient,r)(c,a,this.logger);return Zt(zc,Kn.HandleResponseCode,this.logger,this.performanceClient,r)(t,l,n.verifier,this.apiId,this.config,e,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}}class ll extends lc{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(Kn.RefreshTokenClientAcquireToken,e.correlationId);const t=ei(),r=await Zt(this.executeTokenRequest.bind(this),Kn.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),n=r.headers?.[S],o=new pc(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(r.body),Zt(o.handleServerTokenResponse.bind(o),Kn.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,n)}async acquireTokenByRefreshToken(e){if(!e)throw Xe(Ue);if(this.performanceClient?.addQueueMeasurement(Kn.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw Wt(kt);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await Zt(this.acquireTokenWithCachedRefreshToken.bind(this),Kn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(t){const r=t instanceof Ys&&t.errorCode===Bs,n=t instanceof ac&&t.errorCode===ae&&t.subError===ce;if(r||n)return Zt(this.acquireTokenWithCachedRefreshToken.bind(this),Kn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw t}return Zt(this.acquireTokenWithCachedRefreshToken.bind(this),Kn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(Kn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const r=Xt(this.cacheManager.getRefreshToken.bind(this.cacheManager),Kn.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,e.correlationId,void 0,this.performanceClient);if(!r)throw Zs(Bs);if(r.expiresOn&&ni(r.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw this.performanceClient?.addFields({rtExpiresOnMs:Number(r.expiresOn)},e.correlationId),Zs(Fs);const n={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||re.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:Ta}};try{return await Zt(this.acquireToken.bind(this),Kn.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(n)}catch(t){if(t instanceof Ys&&(this.performanceClient?.addFields({rtExpiresOnMs:Number(r.expiresOn)},e.correlationId),t.subError===Qs)){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const t=ii(r);this.cacheManager.removeRefreshToken(t,e.correlationId)}throw t}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(Kn.RefreshTokenClientExecuteTokenRequest,e.correlationId);const r=this.createTokenQueryParameters(e),n=Yt.appendQueryString(t.tokenEndpoint,r),o=await Zt(this.createTokenRequestBody.bind(this),Kn.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),s=ea(this.config.authOptions.clientId,e);return Zt(this.executePostToTokenEndpoint.bind(this),Kn.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(n,o,i,s,e.correlationId,Kn.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(Kn.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=new Map;if(La(t,e.embeddedClientId||e.tokenBodyParameters?.[ka]||this.config.authOptions.clientId),e.redirectUri&&Ha(t,e.redirectUri),Ua(t,e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),Ja(t,D),Ya(t),Ga(t,this.config.libraryInfo),$a(t,this.config.telemetry.application),oc(t),this.serverTelemetryManager&&!Zi(this.config)&&nc(t,this.serverTelemetryManager),function(e,t){e.set("refresh_token",t)}(t,e.refreshToken),this.config.clientCredentials.clientSecret&&Wa(t,this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const r=this.config.clientCredentials.clientAssertion;ja(t,await Cc(r.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),Va(t,r.assertionType)}if(e.authenticationScheme===re.POP){const r=new uc(this.cryptoUtils,this.performanceClient);let n;if(e.popKid)n=this.cryptoUtils.encodeKid(e.popKid);else{n=(await Zt(r.generateCnf.bind(r),Kn.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString}tc(t,n)}else if(e.authenticationScheme===re.SSH){if(!e.sshJwk)throw Xe(Ke);rc(t,e.sshJwk)}if((!Ze.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&Ka(t,e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case Ta:try{Da(t,Ii(e.ccsCredential.credential))}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Aa:Ba(t,e.ccsCredential.credential)}return e.embeddedClientId&&ic(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenBodyParameters&&Za(t,e.tokenBodyParameters),Oa(t,e.correlationId,this.performanceClient),Jt(t)}}class dl extends kc{async acquireToken(e){this.performanceClient.addQueueMeasurement(Kn.SilentRefreshClientAcquireToken,e.correlationId);const t=await Zt(Tc,Kn.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));const n=this.initializeServerTelemetryManager(Nn.acquireTokenSilent_silentFlow),o=await this.createRefreshTokenClient({serverTelemetryManager:n,authorityUrl:r.authority,azureCloudOptions:r.azureCloudOptions,account:r.account});return Zt(o.acquireTokenByRefreshToken.bind(o),Kn.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(r).catch((e=>{throw e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e),e}))}logout(){return Promise.reject(tn(wr))}async createRefreshTokenClient(e){const t=await Zt(this.getClientConfiguration.bind(this),Kn.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new ll(t,this.performanceClient)}}class hl{constructor(e,t,r,n){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=n}async loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw tn(br);const n=e.correlationId||go(),o=t.id_token?Xo(t.id_token,Yn):void 0,i={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},s=e.authority?new Ls(Ls.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,i,this.logger,e.correlationId||go()):void 0,a=await this.loadAccount(e,r.clientInfo||t.client_info||"",n,o,s),c=await this.loadIdToken(t,a.homeAccountId,a.environment,a.realm,n),l=await this.loadAccessToken(e,t,a.homeAccountId,a.environment,a.realm,r,n),d=await this.loadRefreshToken(t,a.homeAccountId,a.environment,n);return this.generateAuthenticationResult(e,{account:a,idToken:c,accessToken:l,refreshToken:d},o,s)}async loadAccount(e,t,r,n,o){if(this.logger.verbose("TokenCache - loading account"),e.account){const t=Pi.createFromAccountInfo(e.account);return await this.storage.setAccount(t,r),t}if(!o||!t&&!n)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),tn(Or);const i=Pi.generateHomeAccountId(t,o.authorityType,this.logger,this.cryptoObj,n),s=n?.tid,a=mc(this.storage,o,i,Yn,r,n,t,o.hostnameAndPort,s,void 0,void 0,this.logger);return await this.storage.setAccount(a,r),a}async loadIdToken(e,t,r,n,o){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const i=si(t,r,e.id_token,this.config.auth.clientId,n);return await this.storage.setIdTokenCredential(i,o),i}async loadAccessToken(e,t,r,n,o,i,s){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!(t.scope||e.scopes&&e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");const a=t.scope?vi.fromString(t.scope):new vi(e.scopes),c=i.expiresOn||t.expires_in+ei(),l=i.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+ei(),d=ai(r,n,t.access_token,this.config.auth.clientId,o,a.printScopes(),c,l,Yn);return await this.storage.setAccessTokenCredential(d,s),d}async loadRefreshToken(e,t,r,n){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const o=ci(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return await this.storage.setRefreshTokenCredential(o,n),o}generateAuthenticationResult(e,t,r,n){let o,i="",s=[],a=null;t?.accessToken&&(i=t.accessToken.secret,s=vi.fromString(t.accessToken.target).asArray(),a=ri(t.accessToken.expiresOn),o=ri(t.accessToken.extendedExpiresOn));const c=t.account;return{authority:n?n.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:s,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:r||{},accessToken:i,fromCache:!0,expiresOn:a,correlationId:e.correlationId||"",requestId:"",extExpiresOn:o,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}class ul extends yc{constructor(e){super(e),this.includeRedirectUri=!1}}class gl extends kc{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,a,c,l),this.apiId=s}async acquireToken(e){if(!e.code)throw tn(Ur);const t=await Zt(this.initializeAuthorizationRequest.bind(this),Kn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,On.Silent),r=this.initializeServerTelemetryManager(this.apiId);try{const n={...t,code:e.code},o=await Zt(this.getClientConfiguration.bind(this),Kn.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),i=new ul(o);this.logger.verbose("Auth code client created");const s=new Pc(i,this.browserStorage,n,this.logger,this.performanceClient);return await Zt(s.handleCodeResponseFromServer.bind(s),Kn.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(e){throw e instanceof Se&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}logout(){return Promise.reject(tn(wr))}}function pl(e){const t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?"9188040d-6c67-4c5b-b112-36a304b66dad"===t?.tid?"MSA":"AAD":void 0}function ml(e,t){try{Fo(e)}catch(e){throw t.end({success:!1},e),e}}class fl{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Os(this.logger,this.performanceClient):Vo,this.eventHandler=new Ia(this.logger),this.browserStorage=this.isBrowserEnvironment?new ha(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler,xs(this.config.auth)):ga(this.config.auth.clientId,this.logger,this.performanceClient,this.eventHandler);const t={cacheLocation:fn.MemoryStorage,temporaryCacheLocation:fn.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new ha(this.config.auth.clientId,t,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler),this.tokenCache=new hl(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e,t){const r=new fl(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e,t){if(this.logger.trace("initialize called"),this.initialized)return void this.logger.info("initialize has already been called, exiting early.");if(!this.isBrowserEnvironment)return this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,void this.eventHandler.emitEvent(da.INITIALIZE_END);const r=e?.correlationId||this.getRequestCorrelationId(),n=this.config.system.allowPlatformBroker,o=this.performanceClient.startMeasurement(Kn.InitializeClientApplication,r);if(this.eventHandler.emitEvent(da.INITIALIZE_START),!t)try{this.logMultipleInstances(o)}catch{}if(await Zt(this.browserStorage.initialize.bind(this.browserStorage),Kn.InitializeCache,this.logger,this.performanceClient,r)(r),n)try{this.platformAuthProvider=await Yc(this.logger,this.performanceClient,r,this.config.system.nativeBrokerHandshakeTimeout)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),Xt(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),Kn.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,r)(r)),this.config.system.asyncPopups&&await this.preGeneratePkceCodes(r),this.initialized=!0,this.eventHandler.emitEvent(da.INITIALIZE_END),o.end({allowPlatformBroker:n,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),Do(this.initialized),this.isBrowserEnvironment){const t=e||"";let r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const t=this.browserStorage.getInteractionInProgress()?.type;if(t===wn)return this.logger.verbose("handleRedirectPromise removing interaction_in_progress flag and returning null after sign-out"),this.browserStorage.setInteractionInProgress(!1),Promise.resolve(null);const r=this.getAllAccounts(),n=this.browserStorage.getCachedNativeRequest(),o=n&&this.platformAuthProvider&&!e;let i,s;this.eventHandler.emitEvent(da.HANDLE_REDIRECT_START,On.Redirect);try{if(o&&this.platformAuthProvider){i=this.performanceClient.startMeasurement(Kn.AcquireTokenRedirect,n?.correlationId||""),this.logger.trace("handleRedirectPromise - acquiring token from native platform");const e=new xc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Nn.handleRedirectPromise,this.performanceClient,this.platformAuthProvider,n.accountId,this.nativeInternalStorage,n.correlationId);s=Zt(e.handleRedirectPromise.bind(e),Kn.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,i.event.correlationId)(this.performanceClient,i.event.correlationId)}else{const[t,r]=this.browserStorage.getCachedRequest(),n=t.correlationId;i=this.performanceClient.startMeasurement(Kn.AcquireTokenRedirect,n),this.logger.trace("handleRedirectPromise - acquiring token from web flow");const o=this.createRedirectClient(n);s=Zt(o.handleRedirectPromise.bind(o),Kn.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,i.event.correlationId)(e,t,r,i)}}catch(e){throw this.browserStorage.resetRequestCache(),e}return s.then((e=>{if(e){this.browserStorage.resetRequestCache();r.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(da.LOGIN_SUCCESS,On.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_SUCCESS,On.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),i.end({success:!0,accountType:pl(e.account)})}else i.event.errorCode?i.end({success:!1}):i.discard();return this.eventHandler.emitEvent(da.HANDLE_REDIRECT_END,On.Redirect),e})).catch((e=>{this.browserStorage.resetRequestCache();const t=e;throw r.length>0?this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_FAILURE,On.Redirect,null,t):this.eventHandler.emitEvent(da.LOGIN_FAILURE,On.Redirect,null,t),this.eventHandler.emitEvent(da.HANDLE_REDIRECT_END,On.Redirect),i.end({success:!1},t),e}))}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const r=this.performanceClient.startMeasurement(Kn.AcquireTokenPreRedirect,t);r.add({accountType:pl(e.account),scenarioId:e.scenarioId});const n=e.onRedirectNavigate;if(n)e.onRedirectNavigate=e=>{const t="function"==typeof n?n(e):void 0;return!1!==t?r.end({success:!0}):r.discard(),t};else{const e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{const n="function"==typeof e?e(t):void 0;return!1!==n?r.end({success:!0}):r.discard(),n}}const o=this.getAllAccounts().length>0;try{let n;if(Ko(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0,vn),o?this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_START,On.Redirect,e):this.eventHandler.emitEvent(da.LOGIN_START,On.Redirect,e),this.platformAuthProvider&&this.canUsePlatformBroker(e)){n=new xc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Nn.acquireTokenRedirect,this.performanceClient,this.platformAuthProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,r).catch((r=>{if(r instanceof Oc&&qc(r)){this.platformAuthProvider=void 0;return this.createRedirectClient(t).acquireToken(e)}if(r instanceof Ys){this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow");return this.createRedirectClient(t).acquireToken(e)}throw r}))}else{n=this.createRedirectClient(t).acquireToken(e)}return await n}catch(e){throw this.browserStorage.resetRequestCache(),r.end({success:!1},e),o?this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_FAILURE,On.Redirect,null,e):this.eventHandler.emitEvent(da.LOGIN_FAILURE,On.Redirect,null,e),e}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(Kn.AcquireTokenPopup,t);r.add({scenarioId:e.scenarioId,accountType:pl(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),ml(this.initialized,r),this.browserStorage.setInteractionInProgress(!0,vn)}catch(e){return Promise.reject(e)}const n=this.getAllAccounts();let o;n.length>0?this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_START,On.Popup,e):this.eventHandler.emitEvent(da.LOGIN_START,On.Popup,e);const i=this.getPreGeneratedPkceCodes(t);if(this.canUsePlatformBroker(e))o=this.acquireTokenNative({...e,correlationId:t},Nn.acquireTokenPopup).then((e=>(r.end({success:!0,isNativeBroker:!0,accountType:pl(e.account)}),e))).catch((r=>{if(r instanceof Oc&&qc(r)){this.platformAuthProvider=void 0;return this.createPopupClient(t).acquireToken(e,i)}if(r instanceof Ys){this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow");return this.createPopupClient(t).acquireToken(e,i)}throw r}));else{o=this.createPopupClient(t).acquireToken(e,i)}return o.then((e=>(n.length<this.getAllAccounts().length?this.eventHandler.emitEvent(da.LOGIN_SUCCESS,On.Popup,e):this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_SUCCESS,On.Popup,e),r.end({success:!0,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:pl(e.account)}),e))).catch((e=>(n.length>0?this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_FAILURE,On.Popup,null,e):this.eventHandler.emitEvent(da.LOGIN_FAILURE,On.Popup,null,e),r.end({success:!1},e),Promise.reject(e)))).finally((async()=>{this.browserStorage.setInteractionInProgress(!1),this.config.system.asyncPopups&&await this.preGeneratePkceCodes(t)}))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const t=this.getRequestCorrelationId(e),r={...e,prompt:e.prompt,correlationId:t};let n;if(this.ssoSilentMeasurement=this.performanceClient.startMeasurement(Kn.SsoSilent,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:pl(e.account)}),ml(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(da.SSO_SILENT_START,On.Silent,r),this.canUsePlatformBroker(r))n=this.acquireTokenNative(r,Nn.ssoSilent).catch((e=>{if(e instanceof Oc&&qc(e)){this.platformAuthProvider=void 0;return this.createSilentIframeClient(r.correlationId).acquireToken(r)}throw e}));else{n=this.createSilentIframeClient(r.correlationId).acquireToken(r)}return n.then((e=>(this.eventHandler.emitEvent(da.SSO_SILENT_SUCCESS,On.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:pl(e.account)}),e))).catch((e=>{throw this.eventHandler.emitEvent(da.SSO_SILENT_FAILURE,On.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const r=this.performanceClient.startMeasurement(Kn.AcquireTokenByCode,t);ml(this.initialized,r),this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_BY_CODE_START,On.Silent,e),r.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw tn(Hr);if(e.code){const n=e.code;let o=this.hybridAuthCodeResponses.get(n);return o?(this.logger.verbose("Existing acquireTokenByCode request found",t),r.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),o=this.acquireTokenByCodeAsync({...e,correlationId:t}).then((e=>(this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_BY_CODE_SUCCESS,On.Silent,e),this.hybridAuthCodeResponses.delete(n),r.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:pl(e.account)}),e))).catch((e=>{throw this.hybridAuthCodeResponses.delete(n),this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_BY_CODE_FAILURE,On.Silent,null,e),r.end({success:!1},e),e})),this.hybridAuthCodeResponses.set(n,o)),await o}if(e.nativeAccountId){if(this.canUsePlatformBroker(e,e.nativeAccountId)){const n=await this.acquireTokenNative({...e,correlationId:t},Nn.acquireTokenByCode,e.nativeAccountId).catch((e=>{throw e instanceof Oc&&qc(e)&&(this.platformAuthProvider=void 0),e}));return r.end({accountType:pl(n.account),success:!0}),n}throw tn(Br)}throw tn(Lr)}catch(e){throw this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_BY_CODE_FAILURE,On.Silent,null,e),r.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(Kn.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);const t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then((e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker}),e))).catch((e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(Kn.AcquireTokenFromCache,e.correlationId),t){case Bn.Default:case Bn.AccessToken:case Bn.AccessTokenAndRefreshToken:const t=this.createSilentCacheClient(e.correlationId);return Zt(t.acquireToken.bind(t),Kn.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw Wt(Nt)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(Kn.AcquireTokenByRefreshToken,e.correlationId),t){case Bn.Default:case Bn.AccessTokenAndRefreshToken:case Bn.RefreshToken:case Bn.RefreshTokenAndNetwork:const t=this.createSilentRefreshClient(e.correlationId);return Zt(t.acquireToken.bind(t),Kn.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw Wt(Nt)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(Kn.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return Zt(t.acquireToken.bind(t),Kn.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);Ko(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0,wn);return this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);Fo(this.initialized),this.browserStorage.setInteractionInProgress(!0,wn);return this.createPopupClient(t).logout(e).finally((()=>{this.browserStorage.setInteractionInProgress(!1)}))}catch(e){return Promise.reject(e)}}async clearCache(e){if(!this.isBrowserEnvironment)return void this.logger.info("in non-browser environment, returning early.");const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){const t=this.getRequestCorrelationId();return pa(this.logger,this.browserStorage,this.isBrowserEnvironment,t,e)}getAccount(e){const t=this.getRequestCorrelationId();return ma(e,this.logger,this.browserStorage,t)}getAccountByUsername(e){const t=this.getRequestCorrelationId();return fa(e,this.logger,this.browserStorage,t)}getAccountByHomeId(e){const t=this.getRequestCorrelationId();return Ca(e,this.logger,this.browserStorage,t)}getAccountByLocalId(e){const t=this.getRequestCorrelationId();return ya(e,this.logger,this.browserStorage,t)}setActiveAccount(e){const t=this.getRequestCorrelationId();va(e,this.browserStorage,t)}getActiveAccount(){const e=this.getRequestCorrelationId();return wa(this.browserStorage,e)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=Pi.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return await this.browserStorage.setAccount(r,e.correlationId),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r,n){if(this.logger.trace("acquireTokenNative called"),!this.platformAuthProvider)throw tn(Kr);return new xc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.platformAuthProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e,n)}canUsePlatformBroker(e,t){if(this.logger.trace("canUsePlatformBroker called"),!this.platformAuthProvider)return this.logger.trace("canUsePlatformBroker: platform broker unavilable, returning false"),!1;if(!Xc(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme))return this.logger.trace("canUsePlatformBroker: isBrokerAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case O.NONE:case O.CONSENT:case O.LOGIN:this.logger.trace("canUsePlatformBroker: prompt is compatible with platform broker flow");break;default:return this.logger.trace(`canUsePlatformBroker: prompt = ${e.prompt} is not compatible with platform broker flow, returning false`),!1}return!(!t&&!this.getNativeAccountId(e))||(this.logger.trace("canUsePlatformBroker: nativeAccountId is not available, returning false"),!1)}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new Zc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createRedirectClient(e){return new el(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createSilentIframeClient(e){return new cl(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Nn.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createSilentCacheClient(e){return new Hc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.platformAuthProvider,e)}createSilentRefreshClient(e){return new dl(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.platformAuthProvider,e)}createSilentAuthCodeClient(e){return new gl(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Nn.acquireTokenByCode,this.performanceClient,this.platformAuthProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return Bo(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.config.cache.cacheLocation===fn.LocalStorage?this.eventHandler.subscribeCrossTab():this.logger.info("Account storage events are only available when cacheLocation is set to localStorage")}disableAccountStorageEvents(){this.config.cache.cacheLocation===fn.LocalStorage?this.eventHandler.unsubscribeCrossTab():this.logger.info("Account storage events are only available when cacheLocation is set to localStorage")}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?go():d.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||Un})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||Un})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(Kn.AcquireTokenSilent,t);r.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),ml(this.initialized,r),this.logger.verbose("acquireTokenSilent called",t);const n=e.account||this.getActiveAccount();if(!n)throw tn(Ir);return r.add({accountType:pl(n)}),this.acquireTokenSilentDeduped(e,n,t).then((n=>(r.end({success:!0,fromCache:n.fromCache,isNativeBroker:n.fromNativeBroker,accessTokenSize:n.accessToken.length,idTokenSize:n.idToken.length}),{...n,state:e.state,correlationId:t}))).catch((e=>{throw e instanceof Se&&e.setCorrelationId(t),r.end({success:!1},e),e}))}async acquireTokenSilentDeduped(e,t,r){const n=ea(this.config.auth.clientId,{...e,authority:e.authority||this.config.auth.authority,correlationId:r},t.homeAccountId),o=JSON.stringify(n),i=this.activeSilentTokenRequests.get(o);if(void 0===i){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",r),this.performanceClient.addFields({deduped:!1},r);const n=Zt(this.acquireTokenSilentAsync.bind(this),Kn.AcquireTokenSilentAsync,this.logger,this.performanceClient,r)({...e,correlationId:r},t);return this.activeSilentTokenRequests.set(o,n),n.finally((()=>{this.activeSilentTokenRequests.delete(o)}))}return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",r),this.performanceClient.addFields({deduped:!0},r),i}async acquireTokenSilentAsync(e,t){const r=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(Kn.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_START,On.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",r);const n=await Zt(Ac,Kn.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),o=e.cacheLookupPolicy||Bn.Default;return this.acquireTokenSilentNoIframe(n,o).catch((async e=>{const t=function(e,t){const r=!(e instanceof Ys&&e.subError!==Qs),n=e.errorCode===rn.INVALID_GRANT_ERROR||e.errorCode===Nt,o=r&&n||e.errorCode===Bs||e.errorCode===Fs,i=Dn.includes(t);return o&&i}(e,o);if(t){if(this.activeIframeRequest){if(o!==Bn.Skip){const[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,n.correlationId);const i=this.performanceClient.startMeasurement(Kn.AwaitConcurrentIframe,n.correlationId);i.add({awaitIframeCorrelationId:r});const s=await t;if(i.end({success:s}),s)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,n.correlationId),this.acquireTokenSilentNoIframe(n,o);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",n.correlationId),Zt(this.acquireTokenBySilentIframe.bind(this),Kn.AcquireTokenBySilentIframe,this.logger,this.performanceClient,n.correlationId)(n)}{let e;return this.activeIframeRequest=[new Promise((t=>{e=t})),n.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",n.correlationId),Zt(this.acquireTokenBySilentIframe.bind(this),Kn.AcquireTokenBySilentIframe,this.logger,this.performanceClient,n.correlationId)(n).then((t=>(e(!0),t))).catch((t=>{throw e(!1),t})).finally((()=>{this.activeIframeRequest=void 0}))}}throw e})).then((t=>(this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_SUCCESS,On.Silent,t),e.correlationId&&this.performanceClient.addFields({fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker},e.correlationId),t))).catch((e=>{throw this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_FAILURE,On.Silent,null,e),e})).finally((()=>{document.removeEventListener("visibilitychange",r)}))}async acquireTokenSilentNoIframe(e,t){return Xc(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,Nn.acquireTokenSilent_silentFlow,e.account.nativeAccountId,t).catch((async e=>{if(e instanceof Oc&&qc(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.platformAuthProvider=void 0,Wt(Nt);throw e}))):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),t===Bn.AccessToken&&this.logger.verbose("acquireTokenSilent - cache lookup policy set to AccessToken, attempting to acquire token from local cache"),Zt(this.acquireTokenFromCache.bind(this),Kn.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch((r=>{if(t===Bn.AccessToken)throw r;return this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_NETWORK_START,On.Silent,e),Zt(this.acquireTokenByRefreshToken.bind(this),Kn.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)})))}async preGeneratePkceCodes(e){return this.logger.verbose("Generating new PKCE codes"),this.pkceCode=await Zt($c,Kn.GeneratePkceCodes,this.logger,this.performanceClient,e)(this.performanceClient,this.logger,e),Promise.resolve()}getPreGeneratedPkceCodes(e){this.logger.verbose("Attempting to pick up pre-generated PKCE codes");const t=this.pkceCode?{...this.pkceCode}:void 0;return this.pkceCode=void 0,this.logger.verbose((t?"Found":"Did not find")+" pre-generated PKCE codes"),this.performanceClient.addFields({usePreGeneratedPkce:!!t},e),t}logMultipleInstances(e){const t=this.config.auth.clientId;if(!window)return;window.msal=window.msal||{},window.msal.clientIds=window.msal.clientIds||[];window.msal.clientIds.length>0&&this.logger.verbose("There is already an instance of MSAL.js in the window."),window.msal.clientIds.push(t),function(e,t,r){const n=window.msal?.clientIds||[],o=n.length,i=n.filter((t=>t===e)).length;i>1&&r.warning("There is already an instance of MSAL.js in the window with the same client id."),t.add({msalInstanceCount:o,sameClientIdInstanceCount:i})}(t,e,this.logger)}}class Cl{constructor(e,t,r,n){this.clientId=e,this.clientCapabilities=t,this.crypto=r,this.logger=n}toNaaTokenRequest(e){let t;t=void 0===e.extraQueryParameters?new Map:new Map(Object.entries(e.extraQueryParameters));const r=e.correlationId||this.crypto.createNewGuid(),n=ec(e.claims,this.clientCapabilities),o=e.scopes||C;return{platformBrokerId:e.account?.homeAccountId,clientId:this.clientId,authority:e.authority,scope:o.join(" "),correlationId:r,claims:Ze.isEmptyObj(n)?void 0:n,state:e.state,authenticationScheme:e.authenticationScheme||re.BEARER,extraParameters:t}}fromNaaTokenResponse(e,t,r){if(!t.token.id_token||!t.token.access_token)throw Wt(nt);const n=ri(r+(t.token.expires_in||0)),o=Xo(t.token.id_token,this.crypto.base64Decode),i=this.fromNaaAccountInfo(t.account,t.token.id_token,o),s=t.token.scope||e.scope;return{authority:t.token.authority||i.environment,uniqueId:i.localAccountId,tenantId:i.tenantId,scopes:s.split(" "),account:i,idToken:t.token.id_token,idTokenClaims:o,accessToken:t.token.access_token,fromCache:!1,expiresOn:n,tokenType:e.authenticationScheme||re.BEARER,correlationId:e.correlationId,extExpiresOn:n,state:e.state}}fromNaaAccountInfo(e,t,r){const n=r||e.idTokenClaims,o=e.localAccountId||n?.oid||n?.sub||"",i=e.tenantId||n?.tid||"",s=e.homeAccountId||`${o}.${i}`,a=e.username||n?.preferred_username||"",c=e.name||n?.name,l=new Map,d=Ai(s,o,i,n);l.set(i,d);return{homeAccountId:s,environment:e.environment,tenantId:i,username:a,localAccountId:o,name:c,idToken:t,idTokenClaims:n,tenantProfiles:l}}fromBridgeError(e){if(!function(e){return void 0!==e.status}(e))return new Se("unknown_error","An unknown error occurred");switch(e.status){case ps:return new Qt(Dt);case ms:return new Qt(Bt);case vs:return new Qt(bt);case ys:return new Qt(zt);case ws:return new Qt(e.code||zt,e.description);case fs:case Cs:return new ac(e.code,e.description);case gs:return new Ys(e.code,e.description);default:return new Se(e.code,e.description)}}toAuthenticationResultFromCache(e,t,r,n,o){if(!t||!r)throw Wt(nt);const i=Xo(t.secret,this.crypto.base64Decode),s=r.target||n.scopes.join(" ");return{authority:r.environment||e.environment,uniqueId:e.localAccountId,tenantId:e.tenantId,scopes:s.split(" "),account:e,idToken:t.secret,idTokenClaims:i||{},accessToken:r.secret,fromCache:!0,expiresOn:ri(r.expiresOn),extExpiresOn:ri(r.extendedExpiresOn),tokenType:n.authenticationScheme||re.BEARER,correlationId:o,state:n.state}}}const yl={code:"unsupported_method",desc:"This method is not supported in nested app environment."};class vl extends Se{constructor(e,t){super(e,t),Object.setPrototypeOf(this,vl.prototype),this.name="NestedAppAuthError"}static createUnsupportedError(){return new vl(yl.code,yl.desc)}}class wl{constructor(e){this.operatingContext=e;const t=this.operatingContext.getBridgeProxy();if(void 0===t)throw new Error("unexpected: bridgeProxy is undefined");this.bridgeProxy=t,this.config=e.getConfig(),this.logger=this.operatingContext.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=e.isBrowserEnvironment()?new Os(this.logger,this.performanceClient,!0):Vo,this.eventHandler=new Ia(this.logger),this.browserStorage=this.operatingContext.isBrowserEnvironment()?new ha(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler,xs(this.config.auth)):ga(this.config.auth.clientId,this.logger,this.performanceClient,this.eventHandler),this.nestedAppAuthAdapter=new Cl(this.config.auth.clientId,this.config.auth.clientCapabilities,this.browserCrypto,this.logger);const r=this.bridgeProxy.getAccountContext();this.currentAccountContext=r||null}static async createController(e){const t=new wl(e);return Promise.resolve(t)}async initialize(e,t){const r=e?.correlationId||go();return await this.browserStorage.initialize(r),Promise.resolve()}ensureValidRequest(e){return e?.correlationId?e:{...e,correlationId:this.browserCrypto.createNewGuid()}}async acquireTokenInteractive(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_START,On.Popup,t);const r=this.performanceClient.startMeasurement(Kn.AcquireTokenPopup,t.correlationId);r?.add({nestedAppAuthRequest:!0});try{const n=this.nestedAppAuthAdapter.toNaaTokenRequest(t),o=ei(),i=await this.bridgeProxy.getTokenInteractive(n),s={...this.nestedAppAuthAdapter.fromNaaTokenResponse(n,i,o)};return await this.hydrateCache(s,e),this.currentAccountContext={homeAccountId:s.account.homeAccountId,environment:s.account.environment,tenantId:s.account.tenantId},this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_SUCCESS,On.Popup,s),r.add({accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length}),r.end({success:!0,requestId:s.requestId}),s}catch(e){const t=e instanceof Se?e:this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_FAILURE,On.Popup,null,e),r.end({success:!1},e),t}}async acquireTokenSilentInternal(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_START,On.Silent,t);const r=await this.acquireTokenFromCache(t);if(r)return this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_SUCCESS,On.Silent,r),r;const n=this.performanceClient.startMeasurement(Kn.SsoSilent,t.correlationId);n?.increment({visibilityChangeCount:0}),n?.add({nestedAppAuthRequest:!0});try{const r=this.nestedAppAuthAdapter.toNaaTokenRequest(t),o=ei(),i=await this.bridgeProxy.getTokenSilent(r),s=this.nestedAppAuthAdapter.fromNaaTokenResponse(r,i,o);return await this.hydrateCache(s,e),this.currentAccountContext={homeAccountId:s.account.homeAccountId,environment:s.account.environment,tenantId:s.account.tenantId},this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_SUCCESS,On.Silent,s),n?.add({accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length}),n?.end({success:!0,requestId:s.requestId}),s}catch(e){const t=e instanceof Se?e:this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_FAILURE,On.Silent,null,e),n?.end({success:!1},e),t}}async acquireTokenFromCache(e){const t=this.performanceClient.startMeasurement(Kn.AcquireTokenSilent,e.correlationId);if(t?.add({nestedAppAuthRequest:!0}),e.claims)return this.logger.verbose("Claims are present in the request, skipping cache lookup"),null;if(e.forceRefresh)return this.logger.verbose("forceRefresh is set to true, skipping cache lookup"),null;let r=null;switch(e.cacheLookupPolicy||(e.cacheLookupPolicy=Bn.Default),e.cacheLookupPolicy){case Bn.Default:case Bn.AccessToken:case Bn.AccessTokenAndRefreshToken:r=await this.acquireTokenFromCacheInternal(e);break;default:return null}return r?(this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_SUCCESS,On.Silent,r),t?.add({accessTokenSize:r?.accessToken.length,idTokenSize:r?.idToken.length}),t?.end({success:!0}),r):(this.logger.warning("Cached tokens are not found for the account, proceeding with silent token request."),this.eventHandler.emitEvent(da.ACQUIRE_TOKEN_FAILURE,On.Silent,null),t?.end({success:!1}),null)}async acquireTokenFromCacheInternal(e){const t=this.bridgeProxy.getAccountContext()||this.currentAccountContext;let r=null;const n=e.correlationId||this.browserCrypto.createNewGuid();if(t&&(r=ma(t,this.logger,this.browserStorage,n)),!r)return this.logger.verbose("No active account found, falling back to the host"),Promise.resolve(null);this.logger.verbose("active account found, attempting to acquire token silently");const o={...e,correlationId:e.correlationId||this.browserCrypto.createNewGuid(),authority:e.authority||r.environment,scopes:e.scopes?.length?e.scopes:[...C]},i=this.browserStorage.getTokenKeys(),s=this.browserStorage.getAccessToken(r,o,i,r.tenantId);if(!s)return this.logger.verbose("No cached access token found"),Promise.resolve(null);if(oi(s.cachedAt)||ni(s.expiresOn,this.config.system.tokenRenewalOffsetSeconds))return this.logger.verbose("Cached access token has expired"),Promise.resolve(null);const a=this.browserStorage.getIdToken(r,o.correlationId,i,r.tenantId,this.performanceClient);return a?this.nestedAppAuthAdapter.toAuthenticationResultFromCache(r,a,s,o,o.correlationId):(this.logger.verbose("No cached id token found"),Promise.resolve(null))}async acquireTokenPopup(e){return this.acquireTokenInteractive(e)}acquireTokenRedirect(e){throw vl.createUnsupportedError()}async acquireTokenSilent(e){return this.acquireTokenSilentInternal(e)}acquireTokenByCode(e){throw vl.createUnsupportedError()}acquireTokenNative(e,t,r){throw vl.createUnsupportedError()}acquireTokenByRefreshToken(e,t){throw vl.createUnsupportedError()}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){throw vl.createUnsupportedError()}removePerformanceCallback(e){throw vl.createUnsupportedError()}enableAccountStorageEvents(){throw vl.createUnsupportedError()}disableAccountStorageEvents(){throw vl.createUnsupportedError()}getAllAccounts(e){const t=this.browserCrypto.createNewGuid();return pa(this.logger,this.browserStorage,this.isBrowserEnv(),t,e)}getAccount(e){const t=this.browserCrypto.createNewGuid();return ma(e,this.logger,this.browserStorage,t)}getAccountByUsername(e){const t=this.browserCrypto.createNewGuid();return fa(e,this.logger,this.browserStorage,t)}getAccountByHomeId(e){const t=this.browserCrypto.createNewGuid();return Ca(e,this.logger,this.browserStorage,t)}getAccountByLocalId(e){const t=this.browserCrypto.createNewGuid();return ya(e,this.logger,this.browserStorage,t)}setActiveAccount(e){const t=this.browserCrypto.createNewGuid();return va(e,this.browserStorage,t)}getActiveAccount(){const e=this.browserCrypto.createNewGuid();return wa(this.browserStorage,e)}handleRedirectPromise(e){return Promise.resolve(null)}loginPopup(e){return this.acquireTokenInteractive(e||Un)}loginRedirect(e){throw vl.createUnsupportedError()}logout(e){throw vl.createUnsupportedError()}logoutRedirect(e){throw vl.createUnsupportedError()}logoutPopup(e){throw vl.createUnsupportedError()}ssoSilent(e){return this.acquireTokenSilentInternal(e)}getTokenCache(){throw vl.createUnsupportedError()}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){}setNavigationClient(e){this.logger.warning("setNavigationClient is not supported in nested app auth")}getConfiguration(){return this.config}isBrowserEnv(){return this.operatingContext.isBrowserEnvironment()}getBrowserCrypto(){return this.browserCrypto}getPerformanceClient(){throw vl.createUnsupportedError()}getRedirectResponse(){throw vl.createUnsupportedError()}async clearCache(e){throw vl.createUnsupportedError()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=Pi.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return await this.browserStorage.setAccount(r,e.correlationId),this.browserStorage.hydrateCache(e,t)}}async function Il(e){const t=new As(e),r=new Ts(e),n=[t.initialize(),r.initialize()];return await Promise.all(n),r.isAvailable()&&e.auth.supportsNestedAppAuth?wl.createController(r):t.isAvailable()?fl.createController(t):null}class Tl{static async createPublicClientApplication(e){const t=await async function(e,t){const r=new As(e);return await r.initialize(),fl.createController(r,t)}(e);return new Tl(e,t)}constructor(e,t){this.isBroker=!1,this.controller=t||new fl(new As(e))}async initialize(e){return this.controller.initialize(e,this.isBroker)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}async function Al(e){const t=new Ts(e);if(await t.initialize(),t.isAvailable()){const r=new wl(t),n=new Tl(e,r);return await n.initialize(),n}return kl(e)}async function kl(e){const t=new Tl(e);return await t.initialize(),t}class Sl{constructor(e){this.initialized=!1,this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.logger=e.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Os(this.logger,this.performanceClient):Vo,this.eventHandler=new Ia(this.logger),this.browserStorage=this.isBrowserEnvironment?new ha(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler,void 0):ga(this.config.auth.clientId,this.logger,this.performanceClient,this.eventHandler)}getBrowserStorage(){return this.browserStorage}getAccount(e){return null}getAccountByHomeId(e){return null}getAccountByLocalId(e){return null}getAccountByUsername(e){return null}getAllAccounts(){return[]}initialize(){return this.initialized=!0,Promise.resolve()}acquireTokenPopup(e){return Do(this.initialized),Bo(),{}}acquireTokenRedirect(e){return Do(this.initialized),Bo(),Promise.resolve()}acquireTokenSilent(e){return Do(this.initialized),Bo(),{}}acquireTokenByCode(e){return Do(this.initialized),Bo(),{}}acquireTokenNative(e,t,r){return Do(this.initialized),Bo(),{}}acquireTokenByRefreshToken(e,t){return Do(this.initialized),Bo(),{}}addEventCallback(e,t){return null}removeEventCallback(e){}addPerformanceCallback(e){return Do(this.initialized),Bo(),""}removePerformanceCallback(e){return Do(this.initialized),Bo(),!0}enableAccountStorageEvents(){Do(this.initialized),Bo()}disableAccountStorageEvents(){Do(this.initialized),Bo()}handleRedirectPromise(e){return Do(this.initialized),Promise.resolve(null)}loginPopup(e){return Do(this.initialized),Bo(),{}}loginRedirect(e){return Do(this.initialized),Bo(),{}}logout(e){return Do(this.initialized),Bo(),{}}logoutRedirect(e){return Do(this.initialized),Bo(),{}}logoutPopup(e){return Do(this.initialized),Bo(),{}}ssoSilent(e){return Do(this.initialized),Bo(),{}}getTokenCache(){return Do(this.initialized),Bo(),{}}getLogger(){return this.logger}setLogger(e){Do(this.initialized),Bo()}setActiveAccount(e){Do(this.initialized),Bo()}getActiveAccount(){return Do(this.initialized),Bo(),null}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){Do(this.initialized),Bo()}getConfiguration(){return this.config}isBrowserEnv(){return Do(this.initialized),Bo(),!0}getBrowserCrypto(){return Do(this.initialized),Bo(),{}}getPerformanceClient(){return Do(this.initialized),Bo(),{}}getRedirectResponse(){return Do(this.initialized),Bo(),{}}async clearCache(e){Do(this.initialized),Bo()}async hydrateCache(e,t){Do(this.initialized),Bo()}}class El extends us{getId(){return El.ID}getModuleName(){return El.MODULE_NAME}async initialize(){return!0}}El.MODULE_NAME="",El.ID="UnknownOperatingContext";class bl{static async createPublicClientApplication(e){const t=await Il(e);let r;return r=null!==t?new bl(e,t):new bl(e),r}constructor(e,t){if(this.configuration=e,t)this.controller=t;else{const t=new El(e);this.controller=new Sl(t)}}async initialize(){if(this.controller instanceof Sl){const e=await Il(this.configuration);return null!==e&&(this.controller=e),this.controller.initialize()}return Promise.resolve()}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}const Rl={initialize:()=>Promise.reject(_o(ko)),acquireTokenPopup:()=>Promise.reject(_o(ko)),acquireTokenRedirect:()=>Promise.reject(_o(ko)),acquireTokenSilent:()=>Promise.reject(_o(ko)),acquireTokenByCode:()=>Promise.reject(_o(ko)),getAllAccounts:()=>[],getAccount:()=>null,getAccountByHomeId:()=>null,getAccountByUsername:()=>null,getAccountByLocalId:()=>null,handleRedirectPromise:()=>Promise.reject(_o(ko)),loginPopup:()=>Promise.reject(_o(ko)),loginRedirect:()=>Promise.reject(_o(ko)),logout:()=>Promise.reject(_o(ko)),logoutRedirect:()=>Promise.reject(_o(ko)),logoutPopup:()=>Promise.reject(_o(ko)),ssoSilent:()=>Promise.reject(_o(ko)),addEventCallback:()=>null,removeEventCallback:()=>{},addPerformanceCallback:()=>"",removePerformanceCallback:()=>!1,enableAccountStorageEvents:()=>{},disableAccountStorageEvents:()=>{},getTokenCache:()=>{throw _o(ko)},getLogger:()=>{throw _o(ko)},setLogger:()=>{},setActiveAccount:()=>{},getActiveAccount:()=>null,initializeWrapperLibrary:()=>{},setNavigationClient:()=>{},getConfiguration:()=>{throw _o(ko)},hydrateCache:()=>Promise.reject(_o(ko)),clearCache:()=>Promise.reject(_o(ko))};class _l{static getInteractionStatusFromEvent(e,t){switch(e.eventType){case da.LOGIN_START:return qn.Login;case da.SSO_SILENT_START:return qn.SsoSilent;case da.ACQUIRE_TOKEN_START:if(e.interactionType===On.Redirect||e.interactionType===On.Popup)return qn.AcquireToken;break;case da.HANDLE_REDIRECT_START:return qn.HandleRedirect;case da.LOGOUT_START:return qn.Logout;case da.SSO_SILENT_SUCCESS:case da.SSO_SILENT_FAILURE:if(t&&t!==qn.SsoSilent)break;return qn.None;case da.LOGOUT_END:if(t&&t!==qn.Logout)break;return qn.None;case da.HANDLE_REDIRECT_END:if(t&&t!==qn.HandleRedirect)break;return qn.None;case da.LOGIN_SUCCESS:case da.LOGIN_FAILURE:case da.ACQUIRE_TOKEN_SUCCESS:case da.ACQUIRE_TOKEN_FAILURE:case da.RESTORE_FROM_BFCACHE:if(e.interactionType===On.Redirect||e.interactionType===On.Popup){if(t&&t!==qn.Login&&t!==qn.AcquireToken)break;return qn.None}}return null}}class Pl{constructor(e,t){const r=t&&t.loggerOptions||{};this.logger=new Qo(r,ls,ds),this.cryptoOps=new Os(this.logger),this.popTokenGenerator=new uc(this.cryptoOps),this.shrParameters=e}async generatePublicKeyThumbprint(){const{kid:e}=await this.popTokenGenerator.generateKid(this.shrParameters);return e}async signRequest(e,t,r){return this.popTokenGenerator.signPayload(e,t,this.shrParameters,r)}async removeKeys(e){return this.cryptoOps.removeTokenBindingKey(e).then((()=>!0)).catch((e=>{if(e instanceof Qt&&e.errorCode===Lt)return!1;throw e}))}}function Ml(e,t,r,n=5){if(e instanceof Error)return e instanceof Se?(r.errorCode=e.errorCode,r.subErrorCode=e.subError,void((e instanceof ac||e instanceof Ys)&&(r.serverErrorNo=e.errorNo))):void(e instanceof Bi?r.errorCode=e.errorCode:r.errorStack?.length?t.trace("PerformanceClient.addErrorStack: Stack already exist",r.correlationId):e.stack?.length?(e.stack&&(r.errorStack=function(e,t){if(t<0)return[];const r=e.split("\n")||[],n=[],o=r[0];o.startsWith("TypeError: Cannot read property")||o.startsWith("TypeError: Cannot read properties of")||o.startsWith("TypeError: Cannot set property")||o.startsWith("TypeError: Cannot set properties of")||o.endsWith("is not a function")?n.push(Nl(o)):(o.startsWith("SyntaxError")||o.startsWith("TypeError"))&&n.push(Nl(o.replace(/['].*[']|["].*["]/g,"<redacted>")));for(let e=1;e<r.length&&!(n.length>=t);e++){const t=r[e];n.push(Nl(t))}return n}(e.stack,n)),r.errorName=e.name):t.trace("PerformanceClient.addErrorStack: Input stack is empty",r.correlationId));t.trace("PerformanceClient.addErrorStack: Input error is not instance of Error",r.correlationId)}function Nl(e){const t=e.lastIndexOf(" ")+1;if(t<1)return e;const r=e.substring(t);let n=r.lastIndexOf("/");return n=n<0?r.lastIndexOf("\\"):n,n>=0?(e.substring(0,t)+"("+r.substring(n+1)+(")"===r.charAt(r.length-1)?"":")")).trimStart():e.trimStart()}class Ol{constructor(e,t,r,n,o,i,s,a){this.authority=t,this.libraryName=n,this.libraryVersion=o,this.applicationTelemetry=i,this.clientId=e,this.logger=r,this.callbacks=new Map,this.eventsByCorrelationId=new Map,this.eventStack=new Map,this.queueMeasurements=new Map,this.preQueueTimeByCorrelationId=new Map,this.intFields=s||new Set;for(const e of Qn)this.intFields.add(e);this.abbreviations=a||new Map;for(const[e,t]of zn)this.abbreviations.set(e,t)}startPerformanceMeasurement(e,t){return{}}getPreQueueTime(e,t){const r=this.preQueueTimeByCorrelationId.get(t);if(r){if(r.name===e)return r.time;this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${e}, unable to add queue measurement`)}else this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${t}, unable to add queue measurement`)}calculateQueuedTime(e,t){return e<1?(this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${e}`),0):t<1?(this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${t}`),0):t<e?(this.logger.trace("PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved"),0):t-e}addQueueMeasurement(e,t,r,n){if(!t)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${e}, cannot add queue measurement`);if(0===r)this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${e} is ${r}`);else if(!r)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${e}`);const o={eventName:e,queueTime:n?0:r,manuallyCompleted:n},i=this.queueMeasurements.get(t);if(i)i.push(o),this.queueMeasurements.set(t,i);else{this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${t} to queue measurements`);const e=[o];this.queueMeasurements.set(t,e)}this.preQueueTimeByCorrelationId.delete(t)}startMeasurement(e,t){const r=t||this.generateId();t||this.logger.info(`PerformanceClient: No correlation id provided for ${e}, generating`,r),this.logger.trace(`PerformanceClient: Performance measurement started for ${e}`,r);const n={eventId:this.generateId(),status:Gn,authority:this.authority,libraryName:this.libraryName,libraryVersion:this.libraryVersion,clientId:this.clientId,name:e,startTimeMs:Date.now(),correlationId:r,appName:this.applicationTelemetry?.appName,appVersion:this.applicationTelemetry?.appVersion};var o,i,s;return this.cacheEventByCorrelationId(n),o=n,i=this.abbreviations,(s=this.eventStack.get(r))&&s.push({name:i.get(o.name)||o.name}),{end:(e,t)=>this.endMeasurement({...n,...e},t),discard:()=>this.discardMeasurements(n.correlationId),add:e=>this.addFields(e,n.correlationId),increment:e=>this.incrementFields(e,n.correlationId),event:n,measurement:new zi}}endMeasurement(e,t){const r=this.eventsByCorrelationId.get(e.correlationId);if(!r)return this.logger.trace(`PerformanceClient: Measurement not found for ${e.eventId}`,e.correlationId),null;const n=e.eventId===r.eventId;let o={totalQueueTime:0,totalQueueCount:0,manuallyCompletedCount:0};e.durationMs=Math.round(e.durationMs||this.getDurationMs(e.startTimeMs));const i=JSON.stringify(function(e,t,r,n){if(!r?.length)return;const o=e=>e.length?e[e.length-1]:void 0,i=t.get(e.name)||e.name,s=o(r);if(s?.name!==i)return;const a=r?.pop();if(!a)return;const c=n instanceof Se?n.errorCode:n instanceof Error?n.name:void 0,l=n instanceof Se?n.subError:void 0;c&&a.childErr!==c&&(a.err=c,l&&(a.subErr=l)),delete a.name,delete a.childErr;const d={...a,dur:e.durationMs};e.success||(d.fail=1);const h=o(r);if(!h)return{[i]:d};let u;if(c&&(h.childErr=c),h[i]){const e=Object.keys(h).filter((e=>e.startsWith(i))).length;u=`${i}_${e+1}`}else u=i;return h[u]=d,h}(e,this.abbreviations,this.eventStack.get(r.correlationId),t));if(n?(o=this.getQueueInfo(e.correlationId),this.discardMeasurements(r.correlationId)):r.incompleteSubMeasurements?.delete(e.eventId),this.logger.trace(`PerformanceClient: Performance measurement ended for ${e.name}: ${e.durationMs} ms`,e.correlationId),t&&Ml(t,this.logger,r),!n)return r[e.name+"DurationMs"]=Math.floor(e.durationMs),{...r};n&&!t&&(r.errorCode||r.subErrorCode)&&(this.logger.trace(`PerformanceClient: Remove error and sub-error codes for root event ${e.name} as intermediate error was successfully handled`,e.correlationId),r.errorCode=void 0,r.subErrorCode=void 0);let s={...r,...e},a=0;return s.incompleteSubMeasurements?.forEach((t=>{this.logger.trace(`PerformanceClient: Incomplete submeasurement ${t.name} found for ${e.name}`,s.correlationId),a++})),s.incompleteSubMeasurements=void 0,s={...s,queuedTimeMs:o.totalQueueTime,queuedCount:o.totalQueueCount,queuedManuallyCompletedCount:o.manuallyCompletedCount,status:$n,incompleteSubsCount:a,context:i},this.truncateIntegralFields(s),this.emitEvents([s],e.correlationId),s}addFields(e,t){this.logger.trace("PerformanceClient: Updating static fields");const r=this.eventsByCorrelationId.get(t);r?this.eventsByCorrelationId.set(t,{...r,...e}):this.logger.trace("PerformanceClient: Event not found for",t)}incrementFields(e,t){this.logger.trace("PerformanceClient: Updating counters");const r=this.eventsByCorrelationId.get(t);if(r)for(const t in e){if(r.hasOwnProperty(t)){if(isNaN(Number(r[t])))return}else r[t]=0;r[t]+=e[t]}else this.logger.trace("PerformanceClient: Event not found for",t)}cacheEventByCorrelationId(e){const t=this.eventsByCorrelationId.get(e.correlationId);t?(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} added/updated`,e.correlationId),t.incompleteSubMeasurements=t.incompleteSubMeasurements||new Map,t.incompleteSubMeasurements.set(e.eventId,{name:e.name,startTimeMs:e.startTimeMs})):(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} started`,e.correlationId),this.eventsByCorrelationId.set(e.correlationId,{...e}),this.eventStack.set(e.correlationId,[]))}getQueueInfo(e){const t=this.queueMeasurements.get(e);t||this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${e}`);let r=0,n=0,o=0;return t?.forEach((e=>{r+=e.queueTime,n++,o+=e.manuallyCompleted?1:0})),{totalQueueTime:r,totalQueueCount:n,manuallyCompletedCount:o}}discardMeasurements(e){this.logger.trace("PerformanceClient: Performance measurements discarded",e),this.eventsByCorrelationId.delete(e),this.logger.trace("PerformanceClient: QueueMeasurements discarded",e),this.queueMeasurements.delete(e),this.logger.trace("PerformanceClient: Pre-queue times discarded",e),this.preQueueTimeByCorrelationId.delete(e),this.logger.trace("PerformanceClient: Event stack discarded",e),this.eventStack.delete(e)}addPerformanceCallback(e){for(const[t,r]of this.callbacks)if(r.toString()===e.toString())return this.logger.warning(`PerformanceClient: Performance callback is already registered with id: ${t}`),t;const t=this.generateId();return this.callbacks.set(t,e),this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${t}`),t}removePerformanceCallback(e){const t=this.callbacks.delete(e);return t?this.logger.verbose(`PerformanceClient: Performance callback ${e} removed.`):this.logger.verbose(`PerformanceClient: Performance callback ${e} not removed.`),t}emitEvents(e,t){this.logger.verbose("PerformanceClient: Emitting performance events",t),this.callbacks.forEach(((r,n)=>{this.logger.trace(`PerformanceClient: Emitting event to callback ${n}`,t),r.apply(null,[e])}))}truncateIntegralFields(e){this.intFields.forEach((t=>{t in e&&"number"==typeof e[t]&&(e[t]=Math.floor(e[t]))}))}getDurationMs(e){const t=Date.now()-e;return t<0?t:0}}function ql(){let e;try{e=window[fn.SessionStorage];const t=e?.getItem("msal.browser.performance.enabled");if(1===Number(t))return Promise.resolve().then(r.bind(r,96413))}catch(e){}}function Ul(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.now}function Ll(e){if(e&&Ul())return Math.round(window.performance.now()-e)}class Hl extends Ol{constructor(e,t,r){super(e.auth.clientId,e.auth.authority||`${d.DEFAULT_AUTHORITY}`,new Qo(e.system?.loggerOptions||{},ls,ds),ls,ds,e.telemetry?.application||{appName:"",appVersion:""},t,r)}generateId(){return go()}getPageVisibility(){return document.visibilityState?.toString()||null}deleteIncompleteSubMeasurements(e){ql()?.then((t=>{const r=this.eventsByCorrelationId.get(e.event.correlationId),n=r&&r.eventId===e.event.eventId,o=[];n&&r?.incompleteSubMeasurements&&r.incompleteSubMeasurements.forEach((e=>{o.push({...e})})),t.BrowserPerformanceMeasurement.flushMeasurements(e.event.correlationId,o)}))}startMeasurement(e,t){const r=this.getPageVisibility(),n=super.startMeasurement(e,t),o=Ul()?window.performance.now():void 0,i=ql()?.then((t=>new t.BrowserPerformanceMeasurement(e,n.event.correlationId)));return i?.then((e=>e.startMeasurement())),{...n,end:(e,t)=>{const s=n.end({...e,startPageVisibility:r,endPageVisibility:this.getPageVisibility(),durationMs:Ll(o)},t);return i?.then((e=>e.endMeasurement())),this.deleteIncompleteSubMeasurements(n),s},discard:()=>{n.discard(),i?.then((e=>e.flushMeasurement())),this.deleteIncompleteSubMeasurements(n)}}}setPreQueueTime(e,t){if(!Ul())return void this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to set telemetry queue time for ${e}`);if(!t)return void this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to set telemetry queue time`);const r=this.preQueueTimeByCorrelationId.get(t);r&&(this.logger.trace(`BrowserPerformanceClient: Incomplete pre-queue ${r.name} found`,t),this.addQueueMeasurement(r.name,t,void 0,!0)),this.preQueueTimeByCorrelationId.set(t,{name:e,time:window.performance.now()})}addQueueMeasurement(e,t,r,n){if(!Ul())return void this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to add queue measurement for ${e}`);if(!t)return void this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to add queue measurement`);const o=super.getPreQueueTime(e,t);if(!o)return;const i=window.performance.now(),s=r||super.calculateQueuedTime(o,i);return super.addQueueMeasurement(e,t,s,n)}}var xl=r(96413);class Bl{constructor(e){this.headers=e}getShrNonce(){const e=this.headers[k];if(e){const t=this.parseChallenges(e);if(t.nextnonce)return t.nextnonce;throw Xe($e)}const t=this.headers[A];if(t){const e=this.parseChallenges(t);if(e.nonce)return e.nonce;throw Xe($e)}throw Xe(Ge)}parseChallenges(e){const t=e.indexOf(" "),r=e.substr(t+1).split(","),n={};return r.forEach((e=>{const[t,r]=e.split("=");n[t]=unescape(r.replace(/['"]+/g,d.EMPTY_STRING))})),n}}},89393:(e,t,r)=>{r.r(t),r.d(t,{AccountEntity:()=>pi,ApiId:()=>Pn,AuthError:()=>Me,AuthErrorCodes:()=>n,AuthErrorMessage:()=>Pe,AuthenticationHeaderParser:()=>Pc,AuthenticationScheme:()=>oe,AzureCloudInstance:()=>Mo,BrowserAuthError:()=>rn,BrowserAuthErrorCodes:()=>s,BrowserAuthErrorMessage:()=>tn,BrowserCacheLocation:()=>gn,BrowserConfigurationAuthError:()=>ho,BrowserConfigurationAuthErrorCodes:()=>a,BrowserConfigurationAuthErrorMessage:()=>lo,BrowserPerformanceClient:()=>Rc,BrowserPerformanceMeasurement:()=>_c.BrowserPerformanceMeasurement,BrowserStorage:()=>vc,BrowserUtils:()=>c,CacheLookupPolicy:()=>Hn,ClientAuthError:()=>Xt,ClientAuthErrorCodes:()=>i,ClientAuthErrorMessage:()=>Yt,ClientConfigurationError:()=>nt,ClientConfigurationErrorCodes:()=>o,ClientConfigurationErrorMessage:()=>rt,DEFAULT_IFRAME_TIMEOUT_MS:()=>Gi,EventHandler:()=>ea,EventMessageUtils:()=>wc,EventType:()=>Zs,InteractionRequiredAuthError:()=>Os,InteractionRequiredAuthErrorCodes:()=>l,InteractionRequiredAuthErrorMessage:()=>Ns,InteractionStatus:()=>Nn,InteractionType:()=>Mn,JsonWebTokenTypes:()=>Ee,LocalStorage:()=>Bs,LogLevel:()=>Ro,Logger:()=>_o,MemoryStorage:()=>ps,NavigationClient:()=>xi,OIDC_DEFAULT_SCOPES:()=>m,PerformanceEvents:()=>Bn,PromptValue:()=>H,ProtocolMode:()=>Po,PublicClientApplication:()=>uc,PublicClientNext:()=>Cc,ServerError:()=>ta,ServerResponseType:()=>B,SessionStorage:()=>Ds,SignedHttpRequest:()=>Ic,StringUtils:()=>it,StubPerformanceClient:()=>Hi,UrlString:()=>rr,WrapperSKU:()=>qn,createNestablePublicClientApplication:()=>gc,createStandardPublicClientApplication:()=>pc,stubbedPublicClientApplication:()=>yc,version:()=>Qi});var n={};r.r(n),r.d(n,{postRequestFailed:()=>Re,unexpectedError:()=>be});var o={};r.r(o),r.d(o,{authorityMismatch:()=>et,authorityUriInsecure:()=>Ue,cannotAllowNativeBroker:()=>Ze,cannotSetOIDCOptions:()=>Xe,claimsRequestParsingError:()=>qe,emptyInputScopesError:()=>xe,invalidAuthenticationHeader:()=>Ye,invalidAuthorityMetadata:()=>Qe,invalidClaims:()=>De,invalidCloudDiscoveryMetadata:()=>$e,invalidCodeChallengeMethod:()=>ze,invalidPromptValue:()=>Be,logoutRequestEmpty:()=>Ke,missingNonceAuthenticationHeader:()=>Je,missingSshJwk:()=>je,missingSshKid:()=>Ve,pkceParamsMissing:()=>Ge,redirectUriEmpty:()=>Oe,tokenRequestEmpty:()=>Fe,untrustedAuthority:()=>We,urlEmptyError:()=>He,urlParseError:()=>Le});var i={};r.r(i),r.d(i,{authTimeNotFound:()=>yt,authorizationCodeMissingFromServerResponse:()=>Ft,bindingKeyNotRemoved:()=>Kt,cannotAppendScopeSet:()=>St,cannotRemoveEmptyScope:()=>kt,clientInfoDecodingError:()=>st,clientInfoEmptyError:()=>at,deviceCodeExpired:()=>Rt,deviceCodePollingCancelled:()=>bt,deviceCodeUnknownError:()=>_t,emptyInputScopeSet:()=>Et,endSessionEndpointNotSupported:()=>zt,endpointResolutionError:()=>dt,hashNotDeserialized:()=>gt,invalidAssertion:()=>Lt,invalidCacheEnvironment:()=>Nt,invalidCacheRecord:()=>Mt,invalidClientCredential:()=>Ht,invalidState:()=>pt,keyIdMissing:()=>Gt,maxAgeTranspired:()=>vt,methodNotImplemented:()=>jt,missingTenantIdError:()=>Wt,multipleMatchingAccounts:()=>It,multipleMatchingAppMetadata:()=>Tt,multipleMatchingTokens:()=>wt,nestedAppAuthBridgeDisabled:()=>Vt,networkError:()=>ht,noAccountFound:()=>Ot,noAccountInSilentRequest:()=>Pt,noCryptoObject:()=>qt,noNetworkConnectivity:()=>$t,nonceMismatch:()=>Ct,nullOrEmptyToken:()=>lt,openIdConfigError:()=>ut,requestCannotBeMade:()=>At,stateMismatch:()=>mt,stateNotFound:()=>ft,tokenClaimsCnfRequiredForSignedJwt:()=>Dt,tokenParsingError:()=>ct,tokenRefreshRequired:()=>xt,unexpectedCredentialType:()=>Ut,userCanceled:()=>Qt,userTimeoutReached:()=>Bt});var s={};r.r(s),r.d(s,{authCodeOrNativeAccountIdRequired:()=>Dr,authCodeRequired:()=>Br,authRequestNotSetError:()=>_r,blockIframeReload:()=>wr,blockNestedPopups:()=>Ir,cryptoKeyNotFound:()=>xr,cryptoNonExistent:()=>sr,databaseNotOpen:()=>Nr,databaseUnavailable:()=>Kr,emptyNavigateUri:()=>ar,emptyWindowError:()=>mr,failedToBuildHeaders:()=>Yr,failedToParseHeaders:()=>Xr,failedToParseResponse:()=>Lr,getRequestFailed:()=>Ur,hashDoesNotContainKnownProperties:()=>dr,hashEmptyError:()=>cr,iframeClosedPrematurely:()=>Tr,interactionInProgress:()=>gr,invalidBase64String:()=>Vr,invalidCacheType:()=>Pr,invalidPopTokenRequest:()=>Jr,monitorPopupTimeout:()=>Cr,monitorWindowTimeout:()=>yr,nativeConnectionNotEstablished:()=>Qr,nativeExtensionNotInstalled:()=>$r,nativeHandshakeTimeout:()=>Gr,nativePromptNotSupported:()=>jr,noAccountError:()=>kr,noCachedAuthorityError:()=>Rr,noNetworkConnectivity:()=>Or,noStateInHash:()=>lr,noTokenRequestCacheError:()=>Er,nonBrowserEnvironment:()=>Mr,pkceNotCreated:()=>ir,popupWindowError:()=>pr,postRequestFailed:()=>qr,redirectInIframe:()=>vr,silentLogoutUnsupported:()=>Ar,silentPromptValueError:()=>Sr,spaCodeAndNativeAccountIdPresent:()=>Fr,stateInteractionTypeMismatch:()=>ur,unableToAcquireTokenFromNativePlatform:()=>zr,unableToLoadToken:()=>Hr,unableToParseState:()=>hr,unableToParseTokenRequestCacheError:()=>br,uninitializedPublicClientApplication:()=>Wr,userCancelled:()=>fr});var a={};r.r(a),r.d(a,{inMemRedirectUnavailable:()=>ao,storageNotSupported:()=>io,stubbedPublicClientApplicationCalled:()=>so});var c={};r.r(c),r.d(c,{blockAPICallsBeforeInitialize:()=>Ao,blockAcquireTokenInPopups:()=>Io,blockNonBrowserEnvironment:()=>To,blockRedirectInIframe:()=>wo,blockReloadInHiddenIframes:()=>vo,clearHash:()=>go,createGuid:()=>bo,getCurrentUri:()=>Co,getHomepage:()=>yo,invoke:()=>nr,invokeAsync:()=>or,isInIframe:()=>mo,isInPopup:()=>fo,preconnect:()=>Eo,preflightCheck:()=>ko,redirectPreflightCheck:()=>So,replaceHash:()=>po});var l={};r.r(l),r.d(l,{badToken:()=>Rs,consentRequired:()=>Es,interactionRequired:()=>Ss,loginRequired:()=>bs,nativeAccountUnavailable:()=>As,noTokensFound:()=>Ts,refreshTokenExpired:()=>ks});const d={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},h=400,u=499,g=500,p=599,m=[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE],f=[...m,d.EMAIL_SCOPE],C="Content-Type",y="Content-Length",v="Retry-After",w="X-AnchorMailbox",I="WWW-Authenticate",T="Authentication-Info",A="x-ms-request-id",k="x-ms-httpver",S="idtoken",E="client.info",b="adal.idtoken",R="error",_="error.description",P="active-account",M="active-account-filters",N="common",O="organizations",q="consumers",U="access_token",L="xms_cc",H={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},x={PLAIN:"plain",S256:"S256"},B={QUERY:"query",FRAGMENT:"fragment"},D={...B,FORM_POST:"form_post"},F="authorization_code",K="refresh_token",z="MSSTS",G="ADFS",$="Generic",Q="-",W=".",j={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},V="appmetadata",J="1",Y="authority-metadata",X=86400,Z="config",ee="cache",te="network",re="hardcoded_values",ne={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},oe={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},ie=60,se=3600,ae="throttling",ce="retry-after, h429",le="invalid_grant",de="client_mismatch",he="username",ue="password",ge=200,pe=400,me="1",fe="3",Ce="4",ye="2",ve="4",we="5",Ie="0",Te="1",Ae="2",ke="3",Se="4",Ee={Jwt:"JWT",Jwk:"JWK",Pop:"pop"},be="unexpected_error",Re="post_request_failed",_e={[be]:"Unexpected error in authentication.",[Re]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."},Pe={unexpectedError:{code:be,desc:_e[be]},postRequestFailed:{code:Re,desc:_e[Re]}};class Me extends Error{constructor(e,t,r){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,Me.prototype),this.errorCode=e||d.EMPTY_STRING,this.errorMessage=t||d.EMPTY_STRING,this.subError=r||d.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function Ne(e,t){return new Me(e,t?`${_e[e]} ${t}`:_e[e])}const Oe="redirect_uri_empty",qe="claims_request_parsing_error",Ue="authority_uri_insecure",Le="url_parse_error",He="empty_url_error",xe="empty_input_scopes_error",Be="invalid_prompt_value",De="invalid_claims",Fe="token_request_empty",Ke="logout_request_empty",ze="invalid_code_challenge_method",Ge="pkce_params_missing",$e="invalid_cloud_discovery_metadata",Qe="invalid_authority_metadata",We="untrusted_authority",je="missing_ssh_jwk",Ve="missing_ssh_kid",Je="missing_nonce_authentication_header",Ye="invalid_authentication_header",Xe="cannot_set_OIDCOptions",Ze="cannot_allow_native_broker",et="authority_mismatch",tt={[Oe]:"A redirect URI is required for all calls, and none has been set.",[qe]:"Could not parse the given claims request object.",[Ue]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[Le]:"URL could not be parsed into appropriate segments.",[He]:"URL was empty or null.",[xe]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Be]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[De]:"Given claims parameter must be a stringified JSON object.",[Fe]:"Token request was empty and not found in cache.",[Ke]:"The logout request was null or undefined.",[ze]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[Ge]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[$e]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[Qe]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[We]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[je]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[Ve]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Je]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[Ye]:"Invalid authentication header provided",[Xe]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Ze]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[et]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."},rt={redirectUriNotSet:{code:Oe,desc:tt[Oe]},claimsRequestParsingError:{code:qe,desc:tt[qe]},authorityUriInsecure:{code:Ue,desc:tt[Ue]},urlParseError:{code:Le,desc:tt[Le]},urlEmptyError:{code:He,desc:tt[He]},emptyScopesError:{code:xe,desc:tt[xe]},invalidPrompt:{code:Be,desc:tt[Be]},invalidClaimsRequest:{code:De,desc:tt[De]},tokenRequestEmptyError:{code:Fe,desc:tt[Fe]},logoutRequestEmptyError:{code:Ke,desc:tt[Ke]},invalidCodeChallengeMethod:{code:ze,desc:tt[ze]},invalidCodeChallengeParams:{code:Ge,desc:tt[Ge]},invalidCloudDiscoveryMetadata:{code:$e,desc:tt[$e]},invalidAuthorityMetadata:{code:Qe,desc:tt[Qe]},untrustedAuthority:{code:We,desc:tt[We]},missingSshJwk:{code:je,desc:tt[je]},missingSshKid:{code:Ve,desc:tt[Ve]},missingNonceAuthenticationHeader:{code:Je,desc:tt[Je]},invalidAuthenticationHeader:{code:Ye,desc:tt[Ye]},cannotSetOIDCOptions:{code:Xe,desc:tt[Xe]},cannotAllowNativeBroker:{code:Ze,desc:tt[Ze]},authorityMismatch:{code:et,desc:tt[et]}};class nt extends Me{constructor(e){super(e,tt[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,nt.prototype)}}function ot(e){return new nt(e)}class it{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},r=e.split("&"),n=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach((e=>{if(e.trim()){const[r,o]=e.split(/=(.+)/g,2);r&&o&&(t[n(r)]=n(o))}})),t}static trimArrayEntries(e){return e.map((e=>e.trim()))}static removeEmptyStringsFromArray(e){return e.filter((e=>!!e))}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}const st="client_info_decoding_error",at="client_info_empty_error",ct="token_parsing_error",lt="null_or_empty_token",dt="endpoints_resolution_error",ht="network_error",ut="openid_config_error",gt="hash_not_deserialized",pt="invalid_state",mt="state_mismatch",ft="state_not_found",Ct="nonce_mismatch",yt="auth_time_not_found",vt="max_age_transpired",wt="multiple_matching_tokens",It="multiple_matching_accounts",Tt="multiple_matching_appMetadata",At="request_cannot_be_made",kt="cannot_remove_empty_scope",St="cannot_append_scopeset",Et="empty_input_scopeset",bt="device_code_polling_cancelled",Rt="device_code_expired",_t="device_code_unknown_error",Pt="no_account_in_silent_request",Mt="invalid_cache_record",Nt="invalid_cache_environment",Ot="no_account_found",qt="no_crypto_object",Ut="unexpected_credential_type",Lt="invalid_assertion",Ht="invalid_client_credential",xt="token_refresh_required",Bt="user_timeout_reached",Dt="token_claims_cnf_required_for_signedjwt",Ft="authorization_code_missing_from_server_response",Kt="binding_key_not_removed",zt="end_session_endpoint_not_supported",Gt="key_id_missing",$t="no_network_connectivity",Qt="user_canceled",Wt="missing_tenant_id_error",jt="method_not_implemented",Vt="nested_app_auth_bridge_disabled",Jt={[st]:"The client info could not be parsed/decoded correctly",[at]:"The client info was empty",[ct]:"Token cannot be parsed",[lt]:"The token is null or empty",[dt]:"Endpoints cannot be resolved",[ht]:"Network request failed",[ut]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[gt]:"The hash parameters could not be deserialized",[pt]:"State was not the expected format",[mt]:"State mismatch error",[ft]:"State not found",[Ct]:"Nonce mismatch error",[yt]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[vt]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[wt]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[It]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[Tt]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[At]:"Token request cannot be made without authorization code or refresh token.",[kt]:"Cannot remove null or empty scope from ScopeSet",[St]:"Cannot append ScopeSet",[Et]:"Empty input ScopeSet cannot be processed",[bt]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[Rt]:"Device code is expired.",[_t]:"Device code stopped polling for unknown reasons.",[Pt]:"Please pass an account object, silent flow is not supported without account information",[Mt]:"Cache record object was null or undefined.",[Nt]:"Invalid environment when attempting to create cache entry",[Ot]:"No account found in cache for given key.",[qt]:"No crypto object detected.",[Ut]:"Unexpected credential type.",[Lt]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[Ht]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[xt]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[Bt]:"User defined timeout for device code polling reached",[Dt]:"Cannot generate a POP jwt if the token_claims are not populated",[Ft]:"Server response does not contain an authorization code to proceed",[Kt]:"Could not remove the credential's binding key from storage.",[zt]:"The provided authority does not support logout",[Gt]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[$t]:"No network connectivity. Check your internet connection.",[Qt]:"User cancelled the flow.",[Wt]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[jt]:"This method has not been implemented",[Vt]:"The nested app auth bridge is disabled"},Yt={clientInfoDecodingError:{code:st,desc:Jt[st]},clientInfoEmptyError:{code:at,desc:Jt[at]},tokenParsingError:{code:ct,desc:Jt[ct]},nullOrEmptyToken:{code:lt,desc:Jt[lt]},endpointResolutionError:{code:dt,desc:Jt[dt]},networkError:{code:ht,desc:Jt[ht]},unableToGetOpenidConfigError:{code:ut,desc:Jt[ut]},hashNotDeserialized:{code:gt,desc:Jt[gt]},invalidStateError:{code:pt,desc:Jt[pt]},stateMismatchError:{code:mt,desc:Jt[mt]},stateNotFoundError:{code:ft,desc:Jt[ft]},nonceMismatchError:{code:Ct,desc:Jt[Ct]},authTimeNotFoundError:{code:yt,desc:Jt[yt]},maxAgeTranspired:{code:vt,desc:Jt[vt]},multipleMatchingTokens:{code:wt,desc:Jt[wt]},multipleMatchingAccounts:{code:It,desc:Jt[It]},multipleMatchingAppMetadata:{code:Tt,desc:Jt[Tt]},tokenRequestCannotBeMade:{code:At,desc:Jt[At]},removeEmptyScopeError:{code:kt,desc:Jt[kt]},appendScopeSetError:{code:St,desc:Jt[St]},emptyInputScopeSetError:{code:Et,desc:Jt[Et]},DeviceCodePollingCancelled:{code:bt,desc:Jt[bt]},DeviceCodeExpired:{code:Rt,desc:Jt[Rt]},DeviceCodeUnknownError:{code:_t,desc:Jt[_t]},NoAccountInSilentRequest:{code:Pt,desc:Jt[Pt]},invalidCacheRecord:{code:Mt,desc:Jt[Mt]},invalidCacheEnvironment:{code:Nt,desc:Jt[Nt]},noAccountFound:{code:Ot,desc:Jt[Ot]},noCryptoObj:{code:qt,desc:Jt[qt]},unexpectedCredentialType:{code:Ut,desc:Jt[Ut]},invalidAssertion:{code:Lt,desc:Jt[Lt]},invalidClientCredential:{code:Ht,desc:Jt[Ht]},tokenRefreshRequired:{code:xt,desc:Jt[xt]},userTimeoutReached:{code:Bt,desc:Jt[Bt]},tokenClaimsRequired:{code:Dt,desc:Jt[Dt]},noAuthorizationCodeFromServer:{code:Ft,desc:Jt[Ft]},bindingKeyNotRemovedError:{code:Kt,desc:Jt[Kt]},logoutNotSupported:{code:zt,desc:Jt[zt]},keyIdMissing:{code:Gt,desc:Jt[Gt]},noNetworkConnectivity:{code:$t,desc:Jt[$t]},userCanceledError:{code:Qt,desc:Jt[Qt]},missingTenantIdError:{code:Wt,desc:Jt[Wt]},nestedAppAuthBridgeDisabled:{code:Vt,desc:Jt[Vt]}};class Xt extends Me{constructor(e,t){super(e,t?`${Jt[e]}: ${t}`:Jt[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,Xt.prototype)}}function Zt(e,t){return new Xt(e,t)}function er(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function tr(e){if(!e||e.indexOf("=")<0)return null;try{const t=er(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.error||r.error_description||r.state)return r}catch(e){throw Zt(gt)}return null}class rr{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw ot(He);e.includes("#")||(this._urlString=rr.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return it.endsWith(t,"?")?t=t.slice(0,-1):it.endsWith(t,"?/")&&(t=t.slice(0,-2)),it.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw ot(Le)}if(!e.HostNameAndPort||!e.PathSegments)throw ot(Le);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw ot(Ue)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return rr.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),r=t.PathSegments;return!e||0===r.length||r[0]!==N&&r[0]!==O||(r[0]=e),rr.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw ot(Le);const r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let n=r.AbsolutePath.split("/");return n=n.filter((e=>e&&e.length>0)),r.PathSegments=n,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw ot(Le);return r[2]}static getAbsoluteUrl(e,t){if(e[0]===d.FORWARD_SLASH){const r=new rr(t).getUrlComponents();return r.Protocol+"//"+r.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new rr(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!tr(e)}}const nr=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}try{const n=e(...i);return s?.end({success:!0}),r.trace(`Returning result from ${t}`),n}catch(e){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw s?.end({success:!1},e),e}},or=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}return n?.setPreQueueTime(t,o),e(...i).then((e=>(r.trace(`Returning result from ${t}`),s?.end({success:!0}),e))).catch((e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw s?.end({success:!1},e),e}))},ir="pkce_not_created",sr="crypto_nonexistent",ar="empty_navigate_uri",cr="hash_empty_error",lr="no_state_in_hash",dr="hash_does_not_contain_known_properties",hr="unable_to_parse_state",ur="state_interaction_type_mismatch",gr="interaction_in_progress",pr="popup_window_error",mr="empty_window_error",fr="user_cancelled",Cr="monitor_popup_timeout",yr="monitor_window_timeout",vr="redirect_in_iframe",wr="block_iframe_reload",Ir="block_nested_popups",Tr="iframe_closed_prematurely",Ar="silent_logout_unsupported",kr="no_account_error",Sr="silent_prompt_value_error",Er="no_token_request_cache_error",br="unable_to_parse_token_request_cache_error",Rr="no_cached_authority_error",_r="auth_request_not_set_error",Pr="invalid_cache_type",Mr="non_browser_environment",Nr="database_not_open",Or="no_network_connectivity",qr="post_request_failed",Ur="get_request_failed",Lr="failed_to_parse_response",Hr="unable_to_load_token",xr="crypto_key_not_found",Br="auth_code_required",Dr="auth_code_or_nativeAccountId_required",Fr="spa_code_and_nativeAccountId_present",Kr="database_unavailable",zr="unable_to_acquire_token_from_native_platform",Gr="native_handshake_timeout",$r="native_extension_not_installed",Qr="native_connection_not_established",Wr="uninitialized_public_client_application",jr="native_prompt_not_supported",Vr="invalid_base64_string",Jr="invalid_pop_token_request",Yr="failed_to_build_headers",Xr="failed_to_parse_headers",Zr="For more visit: aka.ms/msaljs/browser-errors",en={[ir]:"The PKCE code challenge and verifier could not be generated.",[sr]:"The crypto object or function is not available.",[ar]:"Navigation URI is empty. Please check stack trace for more info.",[cr]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${Zr}`,[lr]:"Hash does not contain state. Please verify that the request originated from msal.",[dr]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${Zr}`,[hr]:"Unable to parse state. Please verify that the request originated from msal.",[ur]:"Hash contains state but the interaction type does not match the caller.",[gr]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${Zr}`,[pr]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[mr]:"window.open returned null or undefined window object.",[fr]:"User cancelled the flow.",[Cr]:`Token acquisition in popup failed due to timeout.  ${Zr}`,[yr]:`Token acquisition in iframe failed due to timeout.  ${Zr}`,[vr]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[wr]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${Zr}`,[Ir]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[Tr]:"The iframe being monitored was closed prematurely.",[Ar]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[kr]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Sr]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Er]:"No token request found in cache.",[br]:"The cached token request could not be parsed.",[Rr]:"No cached authority found.",[_r]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Pr]:"Invalid cache type",[Mr]:"Login and token requests are not supported in non-browser environments.",[Nr]:"Database is not open!",[Or]:"No network connectivity. Check your internet connection.",[qr]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Ur]:"Network request failed. Please check the network trace to determine root cause.",[Lr]:"Failed to parse network response. Check network trace.",[Hr]:"Error loading token to cache.",[xr]:"Cryptographic Key or Keypair not found in browser storage.",[Br]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Dr]:"An authorization code or nativeAccountId must be provided to this flow.",[Fr]:"Request cannot contain both spa code and native account id.",[Kr]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[zr]:`Unable to acquire token from native platform.  ${Zr}`,[Gr]:"Timed out while attempting to establish connection to browser extension",[$r]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[Qr]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${Zr}`,[Wr]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${Zr}`,[jr]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[Vr]:"Invalid base64 encoded string.",[Jr]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[Yr]:"Failed to build request headers object.",[Xr]:"Failed to parse response headers"},tn={pkceNotGenerated:{code:ir,desc:en[ir]},cryptoDoesNotExist:{code:sr,desc:en[sr]},emptyNavigateUriError:{code:ar,desc:en[ar]},hashEmptyError:{code:cr,desc:en[cr]},hashDoesNotContainStateError:{code:lr,desc:en[lr]},hashDoesNotContainKnownPropertiesError:{code:dr,desc:en[dr]},unableToParseStateError:{code:hr,desc:en[hr]},stateInteractionTypeMismatchError:{code:ur,desc:en[ur]},interactionInProgress:{code:gr,desc:en[gr]},popupWindowError:{code:pr,desc:en[pr]},emptyWindowError:{code:mr,desc:en[mr]},userCancelledError:{code:fr,desc:en[fr]},monitorPopupTimeoutError:{code:Cr,desc:en[Cr]},monitorIframeTimeoutError:{code:yr,desc:en[yr]},redirectInIframeError:{code:vr,desc:en[vr]},blockTokenRequestsInHiddenIframeError:{code:wr,desc:en[wr]},blockAcquireTokenInPopupsError:{code:Ir,desc:en[Ir]},iframeClosedPrematurelyError:{code:Tr,desc:en[Tr]},silentLogoutUnsupportedError:{code:Ar,desc:en[Ar]},noAccountError:{code:kr,desc:en[kr]},silentPromptValueError:{code:Sr,desc:en[Sr]},noTokenRequestCacheError:{code:Er,desc:en[Er]},unableToParseTokenRequestCacheError:{code:br,desc:en[br]},noCachedAuthorityError:{code:Rr,desc:en[Rr]},authRequestNotSet:{code:_r,desc:en[_r]},invalidCacheType:{code:Pr,desc:en[Pr]},notInBrowserEnvironment:{code:Mr,desc:en[Mr]},databaseNotOpen:{code:Nr,desc:en[Nr]},noNetworkConnectivity:{code:Or,desc:en[Or]},postRequestFailed:{code:qr,desc:en[qr]},getRequestFailed:{code:Ur,desc:en[Ur]},failedToParseNetworkResponse:{code:Lr,desc:en[Lr]},unableToLoadTokenError:{code:Hr,desc:en[Hr]},signingKeyNotFoundInStorage:{code:xr,desc:en[xr]},authCodeRequired:{code:Br,desc:en[Br]},authCodeOrNativeAccountRequired:{code:Dr,desc:en[Dr]},spaCodeAndNativeAccountPresent:{code:Fr,desc:en[Fr]},databaseUnavailable:{code:Kr,desc:en[Kr]},unableToAcquireTokenFromNativePlatform:{code:zr,desc:en[zr]},nativeHandshakeTimeout:{code:Gr,desc:en[Gr]},nativeExtensionNotInstalled:{code:$r,desc:en[$r]},nativeConnectionNotEstablished:{code:Qr,desc:en[Qr]},uninitializedPublicClientApplication:{code:Wr,desc:en[Wr]},nativePromptNotSupported:{code:jr,desc:en[jr]},invalidBase64StringError:{code:Vr,desc:en[Vr]},invalidPopTokenRequest:{code:Jr,desc:en[Jr]}};class rn extends Me{constructor(e,t){super(e,en[e],t),Object.setPrototypeOf(this,rn.prototype),this.name="BrowserAuthError"}}function nn(e,t){return new rn(e,t)}const on={INTERACTION_IN_PROGRESS_VALUE:"interaction_in_progress",INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},sn="53ee284d-920a-4b59-9d30-a60315b26836",an="ppnbnpeolgkicgegkbkbjmhlideopiji",cn="MATS",ln="Handshake",dn="HandshakeResponse",hn="GetToken",un="Response",gn={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},pn="GET",mn="POST",fn="authority",Cn="request.state",yn="nonce.id_token",vn="request.origin",wn="urlHash",In="request.params",Tn="interaction.status",An="ccs.credential",kn="request.correlationId",Sn="request.native",En="msal.account.keys",bn="msal.token.keys",Rn="wrapper.sku",_n="wrapper.version",Pn={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var Mn;!function(e){e.Redirect="redirect",e.Popup="popup",e.Silent="silent",e.None="none"}(Mn||(Mn={}));const Nn={Startup:"startup",Login:"login",Logout:"logout",AcquireToken:"acquireToken",SsoSilent:"ssoSilent",HandleRedirect:"handleRedirect",None:"none"},On={scopes:m},qn={React:"@azure/msal-react",Angular:"@azure/msal-angular"},Un="msal.db",Ln=`${Un}.keys`,Hn={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},xn=[Hn.Default,Hn.Skip,Hn.RefreshTokenAndNetwork],Bn={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",NetworkClientSendPostRequestAsync:"networkClientSendPostRequestAsync",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},Dn=new Map([[Bn.AcquireTokenByCode,"ATByCode"],[Bn.AcquireTokenByRefreshToken,"ATByRT"],[Bn.AcquireTokenSilent,"ATS"],[Bn.AcquireTokenSilentAsync,"ATSAsync"],[Bn.AcquireTokenPopup,"ATPopup"],[Bn.AcquireTokenRedirect,"ATRedirect"],[Bn.CryptoOptsGetPublicKeyThumbprint,"CryptoGetPKThumb"],[Bn.CryptoOptsSignJwt,"CryptoSignJwt"],[Bn.SilentCacheClientAcquireToken,"SltCacheClientAT"],[Bn.SilentIframeClientAcquireToken,"SltIframeClientAT"],[Bn.SilentRefreshClientAcquireToken,"SltRClientAT"],[Bn.SsoSilent,"SsoSlt"],[Bn.StandardInteractionClientGetDiscoveredAuthority,"StdIntClientGetDiscAuth"],[Bn.FetchAccountIdWithNativeBroker,"FetchAccIdWithNtvBroker"],[Bn.NativeInteractionClientAcquireToken,"NtvIntClientAT"],[Bn.BaseClientCreateTokenRequestHeaders,"BaseClientCreateTReqHead"],[Bn.NetworkClientSendPostRequestAsync,"NetClientSendPost"],[Bn.RefreshTokenClientExecutePostToTokenEndpoint,"RTClientExecPost"],[Bn.AuthorizationCodeClientExecutePostToTokenEndpoint,"AuthCodeClientExecPost"],[Bn.BrokerHandhshake,"BrokerHandshake"],[Bn.AcquireTokenByRefreshTokenInBroker,"ATByRTInBroker"],[Bn.AcquireTokenByBroker,"ATByBroker"],[Bn.RefreshTokenClientExecuteTokenRequest,"RTClientExecTReq"],[Bn.RefreshTokenClientAcquireToken,"RTClientAT"],[Bn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,"RTClientATWithCachedRT"],[Bn.RefreshTokenClientAcquireTokenByRefreshToken,"RTClientATByRT"],[Bn.RefreshTokenClientCreateTokenRequestBody,"RTClientCreateTReqBody"],[Bn.AcquireTokenFromCache,"ATFromCache"],[Bn.SilentFlowClientAcquireCachedToken,"SltFlowClientATCached"],[Bn.SilentFlowClientGenerateResultFromCacheRecord,"SltFlowClientGenResFromCache"],[Bn.AcquireTokenBySilentIframe,"ATBySltIframe"],[Bn.InitializeBaseRequest,"InitBaseReq"],[Bn.InitializeSilentRequest,"InitSltReq"],[Bn.InitializeClientApplication,"InitClientApplication"],[Bn.SilentIframeClientTokenHelper,"SIClientTHelper"],[Bn.SilentHandlerInitiateAuthRequest,"SHandlerInitAuthReq"],[Bn.SilentHandlerMonitorIframeForHash,"SltHandlerMonitorIframeForHash"],[Bn.SilentHandlerLoadFrame,"SHandlerLoadFrame"],[Bn.SilentHandlerLoadFrameSync,"SHandlerLoadFrameSync"],[Bn.StandardInteractionClientCreateAuthCodeClient,"StdIntClientCreateAuthCodeClient"],[Bn.StandardInteractionClientGetClientConfiguration,"StdIntClientGetClientConf"],[Bn.StandardInteractionClientInitializeAuthorizationRequest,"StdIntClientInitAuthReq"],[Bn.StandardInteractionClientInitializeAuthorizationCodeRequest,"StdIntClientInitAuthCodeReq"],[Bn.GetAuthCodeUrl,"GetAuthCodeUrl"],[Bn.HandleCodeResponseFromServer,"HandleCodeResFromServer"],[Bn.HandleCodeResponse,"HandleCodeResp"],[Bn.UpdateTokenEndpointAuthority,"UpdTEndpointAuth"],[Bn.AuthClientAcquireToken,"AuthClientAT"],[Bn.AuthClientExecuteTokenRequest,"AuthClientExecTReq"],[Bn.AuthClientCreateTokenRequestBody,"AuthClientCreateTReqBody"],[Bn.AuthClientCreateQueryString,"AuthClientCreateQueryStr"],[Bn.PopTokenGenerateCnf,"PopTGenCnf"],[Bn.PopTokenGenerateKid,"PopTGenKid"],[Bn.HandleServerTokenResponse,"HandleServerTRes"],[Bn.DeserializeResponse,"DeserializeRes"],[Bn.AuthorityFactoryCreateDiscoveredInstance,"AuthFactCreateDiscInst"],[Bn.AuthorityResolveEndpointsAsync,"AuthResolveEndpointsAsync"],[Bn.AuthorityResolveEndpointsFromLocalSources,"AuthResolveEndpointsFromLocal"],[Bn.AuthorityGetCloudDiscoveryMetadataFromNetwork,"AuthGetCDMetaFromNet"],[Bn.AuthorityUpdateCloudDiscoveryMetadata,"AuthUpdCDMeta"],[Bn.AuthorityGetEndpointMetadataFromNetwork,"AuthUpdCDMetaFromNet"],[Bn.AuthorityUpdateEndpointMetadata,"AuthUpdEndpointMeta"],[Bn.AuthorityUpdateMetadataWithRegionalInformation,"AuthUpdMetaWithRegInfo"],[Bn.RegionDiscoveryDetectRegion,"RegDiscDetectReg"],[Bn.RegionDiscoveryGetRegionFromIMDS,"RegDiscGetRegFromIMDS"],[Bn.RegionDiscoveryGetCurrentVersion,"RegDiscGetCurrentVer"],[Bn.AcquireTokenByCodeAsync,"ATByCodeAsync"],[Bn.GetEndpointMetadataFromNetwork,"GetEndpointMetaFromNet"],[Bn.GetCloudDiscoveryMetadataFromNetworkMeasurement,"GetCDMetaFromNet"],[Bn.HandleRedirectPromiseMeasurement,"HandleRedirectPromise"],[Bn.HandleNativeRedirectPromiseMeasurement,"HandleNtvRedirectPromise"],[Bn.UpdateCloudDiscoveryMetadataMeasurement,"UpdateCDMeta"],[Bn.UsernamePasswordClientAcquireToken,"UserPassClientAT"],[Bn.NativeMessageHandlerHandshake,"NtvMsgHandlerHandshake"],[Bn.NativeGenerateAuthResult,"NtvGenAuthRes"],[Bn.RemoveHiddenIframe,"RemoveHiddenIframe"],[Bn.ClearTokensAndKeysWithClaims,"ClearTAndKeysWithClaims"],[Bn.CacheManagerGetRefreshToken,"CacheManagerGetRT"],[Bn.GeneratePkceCodes,"GenPkceCodes"],[Bn.GenerateCodeVerifier,"GenCodeVerifier"],[Bn.GenerateCodeChallengeFromVerifier,"GenCodeChallengeFromVerifier"],[Bn.Sha256Digest,"Sha256Digest"],[Bn.GetRandomValues,"GetRandomValues"]]),Fn=1,Kn=2,zn=new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status","multiMatchedAT","multiMatchedID","multiMatchedRT"]);function Gn(e){return encodeURIComponent(Qn(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function $n(e){return Wn(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Qn(e){return Wn((new TextEncoder).encode(e))}function Wn(e){const t=Array.from(e,(e=>String.fromCodePoint(e))).join("");return btoa(t)}const jn="SHA-256",Vn=new Uint8Array([1,0,1]),Jn="0123456789abcdef",Yn=new Uint32Array(1),Xn={name:"RSASSA-PKCS1-v1_5",hash:jn,modulusLength:2048,publicExponent:Vn};async function Zn(e,t,r){t?.addQueueMeasurement(Bn.Sha256Digest,r);const n=(new TextEncoder).encode(e);return window.crypto.subtle.digest(jn,n)}function eo(e){return window.crypto.getRandomValues(e)}function to(){return window.crypto.getRandomValues(Yn),Yn[0]}function ro(){const e=Date.now(),t=1024*to()+(1023&to()),r=new Uint8Array(16),n=Math.trunc(t/2**30),o=t&2**30-1,i=to();r[0]=e/2**40,r[1]=e/2**32,r[2]=e/2**24,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|n>>>8,r[7]=n,r[8]=128|o>>>24,r[9]=o>>>16,r[10]=o>>>8,r[11]=o,r[12]=i>>>24,r[13]=i>>>16,r[14]=i>>>8,r[15]=i;let s="";for(let e=0;e<r.length;e++)s+=Jn.charAt(r[e]>>>4),s+=Jn.charAt(15&r[e]),3!==e&&5!==e&&7!==e&&9!==e||(s+="-");return s}async function no(e){return window.crypto.subtle.exportKey("jwk",e)}async function oo(e){const t=await Zn(e);return $n(new Uint8Array(t))}const io="storage_not_supported",so="stubbed_public_client_application_called",ao="in_mem_redirect_unavailable",co={[io]:"Given storage configuration option was not supported.",[so]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[ao]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."},lo={storageNotSupportedError:{code:io,desc:co[io]},stubPcaInstanceCalled:{code:so,desc:co[so]},inMemRedirectUnavailable:{code:ao,desc:co[ao]}};class ho extends Me{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,ho.prototype)}}function uo(e){return new ho(e,co[e])}function go(e){e.location.hash="","function"==typeof e.history.replaceState&&e.history.replaceState(null,"",`${e.location.origin}${e.location.pathname}${e.location.search}`)}function po(e){const t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}function mo(){return window.parent!==window}function fo(){return"undefined"!=typeof window&&!!window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${on.POPUP_NAME_PREFIX}.`)}function Co(){return"undefined"!=typeof window&&window.location?window.location.href.split("?")[0].split("#")[0]:""}function yo(){const e=new rr(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function vo(){if(rr.hashContainsKnownProperties(window.location.hash)&&mo())throw nn(wr)}function wo(e){if(mo()&&!e)throw nn(vr)}function Io(){if(fo())throw nn(Ir)}function To(){if("undefined"==typeof window)throw nn(Mr)}function Ao(e){if(!e)throw nn(Wr)}function ko(e){To(),vo(),Io(),Ao(e)}function So(e,t){if(ko(e),wo(t.system.allowRedirectInIframe),t.cache.cacheLocation===gn.MemoryStorage&&!t.cache.storeAuthStateInCookie)throw uo(ao)}function Eo(e){const t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout((()=>{try{document.head.removeChild(t)}catch{}}),1e4)}function bo(){return ro()}var Ro;!function(e){e[e.Error=0]="Error",e[e.Warning=1]="Warning",e[e.Info=2]="Info",e[e.Verbose=3]="Verbose",e[e.Trace=4]="Trace"}(Ro||(Ro={}));class _o{constructor(e,t,r){this.level=Ro.Info;const n=e||_o.createDefaultLoggerOptions();this.localCallback=n.loggerCallback||(()=>{}),this.piiLoggingEnabled=n.piiLoggingEnabled||!1,this.level="number"==typeof n.logLevel?n.logLevel:Ro.Info,this.correlationId=n.correlationId||d.EMPTY_STRING,this.packageName=t||d.EMPTY_STRING,this.packageVersion=r||d.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:Ro.Info}}clone(e,t,r){return new _o({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`${`[${(new Date).toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${Ro[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(e,t){this.logMessage(e,{logLevel:Ro.Error,containsPii:!1,correlationId:t||d.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:Ro.Error,containsPii:!0,correlationId:t||d.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:Ro.Warning,containsPii:!1,correlationId:t||d.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:Ro.Warning,containsPii:!0,correlationId:t||d.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:Ro.Info,containsPii:!1,correlationId:t||d.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:Ro.Info,containsPii:!0,correlationId:t||d.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:Ro.Verbose,containsPii:!1,correlationId:t||d.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:Ro.Verbose,containsPii:!0,correlationId:t||d.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:Ro.Trace,containsPii:!1,correlationId:t||d.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:Ro.Trace,containsPii:!0,correlationId:t||d.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}const Po={AAD:"AAD",OIDC:"OIDC"},Mo={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"},No={createNewGuid:()=>{throw Zt(jt)},base64Decode:()=>{throw Zt(jt)},base64Encode:()=>{throw Zt(jt)},base64UrlEncode:()=>{throw Zt(jt)},encodeKid:()=>{throw Zt(jt)},async getPublicKeyThumbprint(){throw Zt(jt)},async removeTokenBindingKey(){throw Zt(jt)},async clearKeystore(){throw Zt(jt)},async signJwt(){throw Zt(jt)},async hashString(){throw Zt(jt)}},Oo="@azure/msal-common",qo="14.16.0";function Uo(e,t){const r=function(e){if(!e)throw Zt(lt);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw Zt(ct);return t[2]}(e);try{const e=t(r);return JSON.parse(e)}catch(e){throw Zt(ct)}}function Lo(e,t){if(0===t||Date.now()-3e5>e+t)throw Zt(vt)}function Ho(){return Math.round((new Date).getTime()/1e3)}function xo(e,t){const r=Number(e)||0;return Ho()+t>r}function Bo(e){return Number(e)>Ho()}function Do(e){return[jo(e),Vo(e),Jo(e),Yo(e),Xo(e)].join(Q).toLowerCase()}function Fo(e,t,r,n,o){return{credentialType:j.ID_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,realm:o}}function Ko(e,t,r,n,o,i,s,a,c,l,d,h,u,g,p){const m={homeAccountId:e,credentialType:j.ACCESS_TOKEN,secret:r,cachedAt:Ho().toString(),expiresOn:s.toString(),extendedExpiresOn:a.toString(),environment:t,clientId:n,realm:o,target:i,tokenType:d||oe.BEARER};if(h&&(m.userAssertionHash=h),l&&(m.refreshOn=l.toString()),g&&(m.requestedClaims=g,m.requestedClaimsHash=p),m.tokenType?.toLowerCase()!==oe.BEARER.toLowerCase())switch(m.credentialType=j.ACCESS_TOKEN_WITH_AUTH_SCHEME,m.tokenType){case oe.POP:const e=Uo(r,c);if(!e?.cnf?.kid)throw Zt(Dt);m.keyId=e.cnf.kid;break;case oe.SSH:m.keyId=u}return m}function zo(e,t,r,n,o,i,s){const a={credentialType:j.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r};return i&&(a.userAssertionHash=i),o&&(a.familyId=o),s&&(a.expiresOn=s.toString()),a}function Go(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function $o(e){return!!e&&(Go(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===j.ACCESS_TOKEN||e.credentialType===j.ACCESS_TOKEN_WITH_AUTH_SCHEME))}function Qo(e){return!!e&&(Go(e)&&e.hasOwnProperty("realm")&&e.credentialType===j.ID_TOKEN)}function Wo(e){return!!e&&(Go(e)&&e.credentialType===j.REFRESH_TOKEN)}function jo(e){return[e.homeAccountId,e.environment].join(Q).toLowerCase()}function Vo(e){const t=e.credentialType===j.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(Q).toLowerCase()}function Jo(e){return(e.target||"").toLowerCase()}function Yo(e){return(e.requestedClaimsHash||"").toLowerCase()}function Xo(e){return e.tokenType&&e.tokenType.toLowerCase()!==oe.BEARER.toLowerCase()?e.tokenType.toLowerCase():""}function Zo(){return Ho()+X}function ei(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function ti(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function ri(e){return e.expiresAt<=Ho()}class ni{constructor(e){const t=e?it.trimArrayEntries([...e]):[],r=t?it.removeEmptyStringsFromArray(t):[];this.validateInputScopes(r),this.scopes=new Set,r.forEach((e=>this.scopes.add(e)))}static fromString(e){const t=(e||d.EMPTY_STRING).split(" ");return new ni(t)}static createSearchScopes(e){const t=new ni(e);return t.containsOnlyOIDCScopes()?t.removeScope(d.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw ot(xe)}containsScope(e){const t=this.printScopesLowerCase().split(" "),r=new ni(t);return!!e&&r.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&(this.scopes.size>=e.scopes.size&&e.asArray().every((e=>this.containsScope(e))))}containsOnlyOIDCScopes(){let e=0;return f.forEach((t=>{this.containsScope(t)&&(e+=1)})),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach((e=>this.appendScope(e)))}catch(e){throw Zt(St)}}removeScope(e){if(!e)throw Zt(kt);this.scopes.delete(e.trim())}removeOIDCScopes(){f.forEach((e=>{this.scopes.delete(e)}))}unionScopeSets(e){if(!e)throw Zt(Et);const t=new Set;return e.scopes.forEach((e=>t.add(e.toLowerCase()))),this.scopes.forEach((e=>t.add(e.toLowerCase()))),t}intersectingScopeSets(e){if(!e)throw Zt(Et);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),r=e.getScopeCount(),n=this.getScopeCount();return t.size<n+r}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach((t=>e.push(t))),e}printScopes(){if(this.scopes){return this.asArray().join(" ")}return d.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function oi(e,t){if(!e)throw Zt(at);try{const r=t(e);return JSON.parse(r)}catch(e){throw Zt(st)}}function ii(e){if(!e)throw Zt(st);const t=e.split(W,2);return{uid:t[0],utid:t.length<2?d.EMPTY_STRING:t[1]}}function si(e,t){return!!e&&!!t&&e===t.split(".")[1]}function ai(e,t,r,n){if(n){const{oid:t,sub:r,tid:o,name:i,tfp:s,acr:a}=n,c=o||s||a||"";return{tenantId:c,localAccountId:t||r||"",name:i,isHomeTenant:si(c,e)}}return{tenantId:r,localAccountId:t,isHomeTenant:si(r,e)}}function ci(e,t,r,n){let o=e;if(t){const{isHomeTenant:r,...n}=t;o={...e,...n}}if(r){const{isHomeTenant:t,...i}=ai(e.homeAccountId,e.localAccountId,e.tenantId,r);return o={...o,...i,idTokenClaims:r,idToken:n},o}return o}const li=0,di=1,hi=2,ui=3;function gi(e){if(e){return e.tid||e.tfp||e.acr||null}return null}class pi{generateAccountId(){return[this.homeAccountId,this.environment].join(Q).toLowerCase()}generateAccountKey(){return pi.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map((e=>[e.tenantId,e])))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(Q).toLowerCase()}static createAccount(e,t,r){const n=new pi;let o;t.authorityType===di?n.authorityType=G:t.protocolMode===Po.AAD?n.authorityType=z:n.authorityType=$,e.clientInfo&&r&&(o=oi(e.clientInfo,r)),n.clientInfo=e.clientInfo,n.homeAccountId=e.homeAccountId,n.nativeAccountId=e.nativeAccountId;const i=e.environment||t&&t.getPreferredCache();if(!i)throw Zt(Nt);n.environment=i,n.realm=o?.utid||gi(e.idTokenClaims)||"",n.localAccountId=o?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const s=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,a=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(n.username=s||a||"",n.name=e.idTokenClaims?.name||"",n.cloudGraphHostName=e.cloudGraphHostName,n.msGraphHost=e.msGraphHost,e.tenantProfiles)n.tenantProfiles=e.tenantProfiles;else{const t=ai(e.homeAccountId,n.localAccountId,n.realm,e.idTokenClaims);n.tenantProfiles=[t]}return n}static createFromAccountInfo(e,t,r){const n=new pi;return n.authorityType=e.authorityType||$,n.homeAccountId=e.homeAccountId,n.localAccountId=e.localAccountId,n.nativeAccountId=e.nativeAccountId,n.realm=e.tenantId,n.environment=e.environment,n.username=e.username,n.name=e.name,n.cloudGraphHostName=t,n.msGraphHost=r,n.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),n}static generateHomeAccountId(e,t,r,n,o){if(t!==di&&t!==hi){if(e)try{const t=oi(e,n.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}r.warning("No client info in response")}return o?.sub||""}static isAccountEntity(e){return!!e&&(e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"))}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let n=!0;if(r){const r=e.idTokenClaims||{},o=t.idTokenClaims||{};n=r.iat===o.iat&&r.nonce===o.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&n}}const mi={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},fi={tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},Ci=new Set;function yi(e,t,r,n){if(n?.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){const o=vi(t,e);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function vi(e,t){for(let r=0;r<e.length;r++){const n=e[r];if(n.aliases.includes(t))return n}return null}fi.metadata.forEach((e=>{e.aliases.forEach((e=>{Ci.add(e)}))}));const wi="cache_quota_exceeded",Ii="cache_error_unknown",Ti={[wi]:"Exceeded cache storage capacity.",[Ii]:"Unexpected error occurred when using cache storage."};class Ai extends Error{constructor(e,t){const r=t||(Ti[e]?Ti[e]:Ti[Ii]);super(`${e}: ${r}`),Object.setPrototypeOf(this,Ai.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}class ki{constructor(e,t,r,n){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(Oo,qo),this.staticAuthorityOptions=n}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);if(t.length>1){return t.sort((e=>e.idTokenClaims?-1:1))[0]}return 1===t.length?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap((e=>this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t)))}getTenantedAccountInfoByFilter(e,t,r,n){let o,i=null;if(n&&!this.tenantProfileMatchesFilter(r,n))return null;const s=this.getIdToken(e,t,r.tenantId);return s&&(o=Uo(s.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(o,n))?null:(i=ci(e,r,o,s?.secret),i)}getTenantProfilesFromAccountEntity(e,t,r){const n=e.getAccountInfo();let o=n.tenantProfiles||new Map;const i=this.getTokenKeys();if(t){const e=o.get(t);if(!e)return[];o=new Map([[t,e]])}const s=[];return o.forEach((e=>{const t=this.getTenantedAccountInfoByFilter(n,i,e,r);t&&s.push(t)})),s}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId))&&((!t.name||e.name===t.name)&&(void 0===t.isHomeTenant||e.isHomeTenant===t.isHomeTenant))}idTokenClaimsMatchTenantProfileFilter(e,t){if(t){if(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))return!1;if(t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint))return!1;if(t.username&&!this.matchUsername(e.preferred_username,t.username))return!1;if(t.name&&!this.matchName(e,t.name))return!1;if(t.sid&&!this.matchSid(e,t.sid))return!1}return!0}async saveCacheRecord(e,t,r){if(!e)throw Zt(Mt);try{e.account&&this.setAccount(e.account),e.idToken&&!1!==t?.idToken&&this.setIdTokenCredential(e.idToken),e.accessToken&&!1!==t?.accessToken&&await this.saveAccessToken(e.accessToken),e.refreshToken&&!1!==t?.refreshToken&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(e){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Error?(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`,r),"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota")?(this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",r),new Ai(wi)):new Ai(e.name,e.message)):(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`,r),new Ai(Ii))}}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},r=this.getTokenKeys(),n=ni.fromString(e.target),o=[];r.accessToken.forEach((e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;const r=this.getAccessTokenCredential(e);if(r&&this.credentialMatchesFilter(r,t)){ni.fromString(r.target).intersectingScopeSets(n)&&o.push(this.removeAccessToken(e))}})),await Promise.all(o),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),r=[];return t.forEach((t=>{if(!this.isAccountKey(t,e.homeAccountId))return;const n=this.getAccount(t,this.commonLogger);if(!n)return;if(e.homeAccountId&&!this.matchHomeAccountId(n,e.homeAccountId))return;if(e.username&&!this.matchUsername(n.username,e.username))return;if(e.environment&&!this.matchEnvironment(n,e.environment))return;if(e.realm&&!this.matchRealm(n,e.realm))return;if(e.nativeAccountId&&!this.matchNativeAccountId(n,e.nativeAccountId))return;if(e.authorityType&&!this.matchAuthorityType(n,e.authorityType))return;const o={localAccountId:e?.localAccountId,name:e?.name},i=n.tenantProfiles?.filter((e=>this.tenantProfileMatchesFilter(e,o)));i&&0===i.length||r.push(n)})),r}isAccountKey(e,t,r){return!(e.split(Q).length<3)&&(!(t&&!e.toLowerCase().includes(t.toLowerCase()))&&!(r&&!e.toLowerCase().includes(r.toLowerCase())))}isCredentialKey(e){if(e.split(Q).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(j.ID_TOKEN.toLowerCase())&&-1===t.indexOf(j.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(j.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(j.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(j.REFRESH_TOKEN.toLowerCase())>-1){const e=`${j.REFRESH_TOKEN}${Q}${this.clientId}${Q}`,r=`${j.REFRESH_TOKEN}${Q}${J}${Q}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(r.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===j.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===oe.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){const t=this.getKeys(),r={};return t.forEach((t=>{if(!this.isAppMetadata(t))return;const n=this.getAppMetadata(t);n&&(e.environment&&!this.matchEnvironment(n,e.environment)||e.clientId&&!this.matchClientId(n,e.clientId)||(r[t]=n))})),r}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let r=null;return t.forEach((t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const n=this.getAuthorityMetadata(t);n&&-1!==n.aliases.indexOf(e)&&(r=n)})),r}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach((e=>{t.push(this.removeAccount(e))})),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),r=e.generateAccountId(),n=[];t.idToken.forEach((e=>{0===e.indexOf(r)&&this.removeIdToken(e)})),t.accessToken.forEach((e=>{0===e.indexOf(r)&&n.push(this.removeAccessToken(e))})),t.refreshToken.forEach((e=>{0===e.indexOf(r)&&this.removeRefreshToken(e)})),await Promise.all(n)}updateOutdatedCachedAccount(e,t,r){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const n=this.getAccountKeys().filter((e=>e.startsWith(t.homeAccountId))),o=[];n.forEach((e=>{const t=this.getCachedAccountEntity(e);t&&o.push(t)}));const i=o.find((e=>si(e.realm,e.homeAccountId)))||o[0];i.tenantProfiles=o.map((e=>({tenantId:e.realm,localAccountId:e.localAccountId,name:e.name,isHomeTenant:si(e.realm,e.homeAccountId)})));const s=ki.toObject(new pi,{...i}),a=s.generateAccountKey();return n.forEach((t=>{t!==a&&this.removeOutdatedAccount(e)})),this.setAccount(s),r?.verbose("Updated an outdated account entity in the cache"),s}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===j.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===oe.POP){const e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw Zt(Kt)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach((e=>{this.isAppMetadata(e)&&this.removeItem(e)})),!0}readAccountFromCache(e){const t=pi.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getIdToken called");const i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:j.ID_TOKEN,clientId:this.clientId,realm:r},s=this.getIdTokensByFilter(i,t),a=s.size;if(a<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(a>1){let t=s;if(!r){const r=new Map;s.forEach(((t,n)=>{t.realm===e.tenantId&&r.set(n,t)}));const n=r.size;if(n<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(1===n)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),r.values().next().value;t=r}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),t.forEach(((e,t)=>{this.removeIdToken(t)})),n&&o&&n.addFields({multiMatchedID:s.size},o),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t){const r=t&&t.idToken||this.getTokenKeys().idToken,n=new Map;return r.forEach((t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;const r=this.getIdTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&n.set(t,r)})),n}idTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return(!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,r,n,o,i){this.commonLogger.trace("CacheManager - getAccessToken called");const s=ni.createSearchScopes(t.scopes),a=t.authenticationScheme||oe.BEARER,c=a&&a.toLowerCase()!==oe.BEARER.toLowerCase()?j.ACCESS_TOKEN_WITH_AUTH_SCHEME:j.ACCESS_TOKEN,l={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:c,clientId:this.clientId,realm:n||e.tenantId,target:s,tokenType:a,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},d=r&&r.accessToken||this.getTokenKeys().accessToken,h=[];d.forEach((e=>{if(this.accessTokenKeyMatchesFilter(e,l,!0)){const t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,l)&&h.push(t)}}));const u=h.length;return u<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):u>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),h.forEach((e=>{this.removeAccessToken(Do(e))})),o&&i&&o.addFields({multiMatchedAT:h.length},i),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),h[0])}accessTokenKeyMatchesFilter(e,t,r){const n=e.toLowerCase();if(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===n.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===n.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!n.includes(e[t].toLowerCase()))return!1;if(!r&&n.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),r=[];return t.accessToken.forEach((t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;const n=this.getAccessTokenCredential(t);n&&this.credentialMatchesFilter(n,e)&&r.push(n)})),r}getRefreshToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getRefreshToken called");const i=t?J:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:j.REFRESH_TOKEN,clientId:this.clientId,familyId:i},a=r&&r.refreshToken||this.getTokenKeys().refreshToken,c=[];a.forEach((e=>{if(this.refreshTokenKeyMatchesFilter(e,s)){const t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,s)&&c.push(t)}}));const l=c.length;return l<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(l>1&&n&&o&&n.addFields({multiMatchedRT:l},o),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),c[0])}refreshTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return(!t.familyId||-1!==r.indexOf(t.familyId.toLowerCase()))&&(!(!t.familyId&&t.clientId&&-1===r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase())))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),n=Object.keys(r).map((e=>r[e])),o=n.length;if(o<1)return null;if(o>1)throw Zt(Tt);return n[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==J)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!(!e||"string"!=typeof e||t?.toLowerCase()!==e.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const r=function(e,t){let r;const n=e.canonicalAuthority;if(n){const o=new rr(n).getUrlComponents().HostNameAndPort;r=yi(o,e.cloudDiscoveryMetadata?.metadata,Z,t)||yi(o,fi.metadata,re,t)||e.knownAuthorities}return r||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}const r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||(e.preferred_username===t||e.upn===t)}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){if(e.credentialType!==j.ACCESS_TOKEN&&e.credentialType!==j.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)return!1;return ni.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(V)}isAuthorityMetadata(e){return-1!==e.indexOf(Y)}generateAuthorityMetadataCacheKey(e){return`${Y}-${this.clientId}-${e}`}static toObject(e,t){for(const r in t)e[r]=t[r];return e}}class Si extends ki{setAccount(){throw Zt(jt)}getAccount(){throw Zt(jt)}getCachedAccountEntity(){throw Zt(jt)}setIdTokenCredential(){throw Zt(jt)}getIdTokenCredential(){throw Zt(jt)}setAccessTokenCredential(){throw Zt(jt)}getAccessTokenCredential(){throw Zt(jt)}setRefreshTokenCredential(){throw Zt(jt)}getRefreshTokenCredential(){throw Zt(jt)}setAppMetadata(){throw Zt(jt)}getAppMetadata(){throw Zt(jt)}setServerTelemetry(){throw Zt(jt)}getServerTelemetry(){throw Zt(jt)}setAuthorityMetadata(){throw Zt(jt)}getAuthorityMetadata(){throw Zt(jt)}getAuthorityMetadataKeys(){throw Zt(jt)}setThrottlingCache(){throw Zt(jt)}getThrottlingCache(){throw Zt(jt)}removeItem(){throw Zt(jt)}getKeys(){throw Zt(jt)}getAccountKeys(){throw Zt(jt)}getTokenKeys(){throw Zt(jt)}updateCredentialCacheKey(){throw Zt(jt)}removeOutdatedAccount(){throw Zt(jt)}}const Ei={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},bi={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:Ro.Info,correlationId:d.EMPTY_STRING},Ri={claimsBasedCachingEnabled:!1},_i={async sendGetRequestAsync(){throw Zt(jt)},async sendPostRequestAsync(){throw Zt(jt)}},Pi={sku:d.SKU,version:qo,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},Mi={clientSecret:d.EMPTY_STRING,clientAssertion:void 0},Ni={azureCloudInstance:Mo.None,tenant:`${d.DEFAULT_COMMON_TENANT}`},Oi={application:{appName:"",appVersion:""}};function qi(e){return e.authOptions.authority.options.protocolMode===Po.OIDC}const Ui={sendGetRequestAsync:()=>Promise.reject(Zt(jt)),sendPostRequestAsync:()=>Promise.reject(Zt(jt))};class Li{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class Hi{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:Fn,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new Li}}startPerformanceMeasurement(){return new Li}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}class xi{navigateInternal(e,t){return xi.defaultNavigateWindow(e,t)}navigateExternal(e,t){return xi.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise((e=>{setTimeout((()=>{e(!0)}),t.timeout)}))}}class Bi extends Me{constructor(e,t,r){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,Bi.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=r}}function Di(e,t,r){return new Bi(e,t,r)}class Fi{async sendGetRequestAsync(e,t){let r,n={},o=0;const i=Ki(t);try{r=await fetch(e,{method:pn,headers:i})}catch(e){throw nn(window.navigator.onLine?Ur:Or)}n=zi(r.headers);try{return o=r.status,{headers:n,body:await r.json(),status:o}}catch(e){throw Di(nn(Lr),o,n)}}async sendPostRequestAsync(e,t){const r=t&&t.body||"",n=Ki(t);let o,i=0,s={};try{o=await fetch(e,{method:mn,headers:n,body:r})}catch(e){throw nn(window.navigator.onLine?qr:Or)}s=zi(o.headers);try{return i=o.status,{headers:s,body:await o.json(),status:i}}catch(e){throw Di(nn(Lr),i,s)}}}function Ki(e){try{const t=new Headers;if(!e||!e.headers)return t;const r=e.headers;return Object.entries(r).forEach((([e,r])=>{t.append(e,r)})),t}catch(e){throw nn(Yr)}}function zi(e){try{const t={};return e.forEach(((e,r)=>{t[r]=e})),t}catch(e){throw nn(Xr)}}const Gi=1e4;const $i="@azure/msal-browser",Qi="3.28.1";var Wi=r(58651);class ji{static loggerCallback(e,t){switch(e){case Ro.Error:return void Wi.error(t);case Ro.Info:return void Wi.info(t);case Ro.Verbose:return void Wi.debug(t);case Ro.Warning:return void Wi.warn(t);default:return void Wi.log(t)}}constructor(e){let t;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:e,cache:t,system:r,telemetry:n},o){const i={clientId:d.EMPTY_STRING,authority:`${d.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:d.EMPTY_STRING,authorityMetadata:d.EMPTY_STRING,redirectUri:"undefined"!=typeof window?Co():"",postLogoutRedirectUri:d.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:Po.AAD,OIDCOptions:{serverResponseType:B.FRAGMENT,defaultScopes:[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:Mo.None,tenant:d.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},s={cacheLocation:gn.SessionStorage,temporaryCacheLocation:gn.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!(!t||t.cacheLocation!==gn.LocalStorage),claimsBasedCachingEnabled:!1},a={loggerCallback:()=>{},logLevel:Ro.Info,piiLoggingEnabled:!1},c={...{...Ei,loggerOptions:a,networkClient:o?new Fi:Ui,navigationClient:new xi,loadFrameTimeout:0,windowHashTimeout:r?.loadFrameTimeout||6e4,iframeHashTimeout:r?.loadFrameTimeout||Gi,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:r?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:on.DEFAULT_POLL_INTERVAL_MS},...r,loggerOptions:r?.loggerOptions||a},l={application:{appName:d.EMPTY_STRING,appVersion:d.EMPTY_STRING},client:new Hi};e?.protocolMode!==Po.OIDC&&e?.OIDCOptions&&new _o(c.loggerOptions).warning(JSON.stringify(ot(Xe)));if(e?.protocolMode&&e.protocolMode!==Po.AAD&&c?.allowNativeBroker)throw ot(Ze);return{auth:{...i,...e,OIDCOptions:{...i.OIDCOptions,...e?.OIDCOptions}},cache:{...s,...t},system:c,telemetry:{...l,...n}}}(e,this.browserEnvironment);try{t=window[gn.SessionStorage]}catch(e){}const r=t?.getItem("msal.browser.log.level"),n=t?.getItem("msal.browser.log.pii")?.toLowerCase(),o="true"===n||"false"!==n&&void 0,i={...this.config.system.loggerOptions},s=r&&Object.keys(Ro).includes(r)?Ro[r]:void 0;s&&(i.loggerCallback=ji.loggerCallback,i.logLevel=s),void 0!==o&&(i.piiLoggingEnabled=o),this.logger=new _o(i,$i,Qi),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}const Vi="USER_INTERACTION_REQUIRED",Ji="USER_CANCEL",Yi="NO_NETWORK",Xi="TRANSIENT_ERROR",Zi="PERSISTENT_ERROR",es="DISABLED",ts="ACCOUNT_UNAVAILABLE",rs="NESTED_APP_AUTH_UNAVAILABLE";class ns{static async initializeNestedAppAuthBridge(){if(void 0===window)throw new Error("window is undefined");if(void 0===window.nestedAppAuthBridge)throw new Error("window.nestedAppAuthBridge is undefined");try{window.nestedAppAuthBridge.addEventListener("message",(e=>{const t="string"==typeof e?e:e.data,r=JSON.parse(t),n=ns.bridgeRequests.find((e=>e.requestId===r.requestId));void 0!==n&&(ns.bridgeRequests.splice(ns.bridgeRequests.indexOf(n),1),r.success?n.resolve(r):n.reject(r.error))}));const e=await new Promise(((e,t)=>{const r=ns.buildRequest("GetInitContext"),n={requestId:r.requestId,method:r.method,resolve:e,reject:t};ns.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))}));return ns.validateBridgeResultOrThrow(e.initContext)}catch(e){throw window.console.log(e),e}}getTokenInteractive(e){return this.getToken("GetTokenPopup",e)}getTokenSilent(e){return this.getToken("GetToken",e)}async getToken(e,t){const r=await this.sendRequest(e,{tokenParams:t});return{token:ns.validateBridgeResultOrThrow(r.token),account:ns.validateBridgeResultOrThrow(r.account)}}getHostCapabilities(){return this.capabilities??null}getAccountContext(){return this.accountContext?this.accountContext:null}static buildRequest(e,t){return{messageType:"NestedAppAuthRequest",method:e,requestId:ro(),sendTime:Date.now(),clientLibrary:on.MSAL_SKU,clientLibraryVersion:Qi,...t}}sendRequest(e,t){const r=ns.buildRequest(e,t);return new Promise(((e,t)=>{const n={requestId:r.requestId,method:r.method,resolve:e,reject:t};ns.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))}))}static validateBridgeResultOrThrow(e){if(void 0===e){throw{status:rs}}return e}constructor(e,t,r,n){this.sdkName=e,this.sdkVersion=t,this.accountContext=r,this.capabilities=n}static async create(){const e=await ns.initializeNestedAppAuthBridge();return new ns(e.sdkName,e.sdkVersion,e.accountContext,e.capabilities)}}ns.bridgeRequests=[];class os extends ji{constructor(){super(...arguments),this.bridgeProxy=void 0,this.accountContext=null}getModuleName(){return os.MODULE_NAME}getId(){return os.ID}getBridgeProxy(){return this.bridgeProxy}async initialize(){try{if("undefined"!=typeof window){"function"==typeof window.__initializeNestedAppAuth&&await window.__initializeNestedAppAuth();const e=await ns.create();this.accountContext=e.getAccountContext(),this.bridgeProxy=e,this.available=void 0!==e}}catch(e){this.logger.infoPii(`Could not initialize Nested App Auth bridge (${e})`)}return this.logger.info(`Nested App Auth Bridge available: ${this.available}`),this.available}}os.MODULE_NAME="",os.ID="NestedAppOperatingContext";class is extends ji{getModuleName(){return is.MODULE_NAME}getId(){return is.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}is.MODULE_NAME="",is.ID="StandardOperatingContext";const ss="missing_kid_error",as="missing_alg_error",cs={[ss]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[as]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class ls extends Me{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,ls.prototype)}}function ds(e){return new ls(e,cs[e])}class hs{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw ds(ss);if(!e.alg)throw ds(as);const t=new hs({typ:e.typ||Ee.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}function us(e){return(new TextDecoder).decode(function(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw nn(Vr)}const r=atob(t);return Uint8Array.from(r,(e=>e.codePointAt(0)||0))}(e))}class gs{constructor(){this.dbName=Un,this.version=1,this.tableName=Ln,this.dbOpen=!1}async open(){return new Promise(((e,t)=>{const r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",(e=>{e.target.result.createObjectStore(this.tableName)})),r.addEventListener("success",(t=>{const r=t;this.db=r.target.result,this.dbOpen=!0,e()})),r.addEventListener("error",(()=>t(nn(Kr))))}))}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(nn(Nr));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);n.addEventListener("success",(e=>{const r=e;this.closeConnection(),t(r.target.result)})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async setItem(e,t){return await this.validateDbIsOpen(),new Promise(((r,n)=>{if(!this.db)return n(nn(Nr));const o=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);o.addEventListener("success",(()=>{this.closeConnection(),r()})),o.addEventListener("error",(e=>{this.closeConnection(),n(e)}))}))}async removeItem(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(nn(Nr));const n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);n.addEventListener("success",(()=>{this.closeConnection(),t()})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async getKeys(){return await this.validateDbIsOpen(),new Promise(((e,t)=>{if(!this.db)return t(nn(Nr));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",(t=>{const r=t;this.closeConnection(),e(r.target.result)})),r.addEventListener("error",(e=>{this.closeConnection(),t(e)}))}))}async containsKey(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(nn(Nr));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);n.addEventListener("success",(e=>{const r=e;this.closeConnection(),t(1===r.target.result)})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise(((e,t)=>{const r=window.indexedDB.deleteDatabase(Un),n=setTimeout((()=>t(!1)),200);r.addEventListener("success",(()=>(clearTimeout(n),e(!0)))),r.addEventListener("blocked",(()=>(clearTimeout(n),e(!0)))),r.addEventListener("error",(()=>(clearTimeout(n),t(!1))))}))}}class ps{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach(((t,r)=>{e.push(r)})),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class ms{constructor(e){this.inMemoryCache=new ps,this.indexedDBCache=new gs,this.logger=e}handleDatabaseAccessError(e){if(!(e instanceof rn&&e.errorCode===Kr))throw e;this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.")}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}class fs{constructor(e,t,r){this.logger=e,function(e){if(!window)throw nn(Mr);if(!window.crypto)throw nn(sr);if(!e&&!window.crypto.subtle)throw nn(sr,"crypto_subtle_undefined")}(r??!1),this.cache=new ms(this.logger),this.performanceClient=t}createNewGuid(){return ro()}base64Encode(e){return Qn(e)}base64Decode(e){return us(e)}base64UrlEncode(e){return Gn(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(Bn.CryptoOptsGetPublicKeyThumbprint,e.correlationId),r=await async function(e,t){return window.crypto.subtle.generateKey(Xn,e,t)}(fs.EXTRACTABLE,fs.POP_KEY_USAGES),n=await no(r.publicKey),o=Cs({e:n.e,kty:n.kty,n:n.n}),i=await this.hashString(o),s=await no(r.privateKey),a=await async function(e,t,r){return window.crypto.subtle.importKey("jwk",e,Xn,t,r)}(s,!1,["sign"]);return await this.cache.setItem(i,{privateKey:a,publicKey:r.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),i}async removeTokenBindingKey(e){await this.cache.removeItem(e);return!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,n){const o=this.performanceClient?.startMeasurement(Bn.CryptoOptsSignJwt,n),i=await this.cache.getItem(t);if(!i)throw nn(xr);const s=await no(i.publicKey),a=Cs(s),c=Gn(JSON.stringify({kid:t})),l=Gn(hs.getShrHeaderString({...r?.header,alg:s.alg,kid:c}));e.cnf={jwk:JSON.parse(a)};const d=`${l}.${Gn(JSON.stringify(e))}`,h=(new TextEncoder).encode(d),u=await async function(e,t){return window.crypto.subtle.sign(Xn,e,t)}(i.privateKey,h),g=`${d}.${$n(new Uint8Array(u))}`;return o&&o.end({success:!0}),g}async hashString(e){return oo(e)}}function Cs(e){return JSON.stringify(e,Object.keys(e).sort())}fs.POP_KEY_USAGES=["sign","verify"],fs.EXTRACTABLE=!0;class ys{constructor(e,t,r,n){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=n}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(Bn.RegionDiscoveryDetectRegion,this.correlationId);let r=e;if(r)t.region_source=fe;else{const e=ys.IMDS_OPTIONS;try{const n=await or(this.getRegionFromIMDS.bind(this),Bn.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(d.IMDS_VERSION,e);if(n.status===ge&&(r=n.body,t.region_source=Ce),n.status===pe){const n=await or(this.getCurrentVersion.bind(this),Bn.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(e);if(!n)return t.region_source=me,null;const o=await or(this.getRegionFromIMDS.bind(this),Bn.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(n,e);o.status===ge&&(r=o.body,t.region_source=Ce)}}catch(e){return t.region_source=me,null}}return r||(t.region_source=me),r||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(Bn.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,d.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(Bn.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?format=json`,e);return t.status===pe&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch(e){return null}}}ys.IMDS_OPTIONS={headers:{Metadata:"true"}};class vs{constructor(e,t,r,n,o,i,s,a){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=n,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=s,this.correlationId=i,this.managedIdentity=a||!1,this.regionDiscovery=new ys(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(d.CIAM_AUTH_URL))return ui;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case d.ADFS:return di;case d.DSTS:return hi}return li}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new rr(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw Zt(dt)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw Zt(dt)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw Zt(dt)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw Zt(zt);return this.replacePath(this.metadata.end_session_endpoint)}throw Zt(dt)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw Zt(dt)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw Zt(dt)}canReplaceTenant(e){return 1===e.PathSegments.length&&!vs.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===li&&this.protocolMode===Po.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const r=new rr(this.metadata.canonical_authority).getUrlComponents(),n=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach(((e,o)=>{let i=n[o];if(0===o&&this.canReplaceTenant(r)){const e=new rr(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];i!==e&&(this.logger.verbose(`Replacing tenant domain name ${i} with id ${e}`),i=e)}e!==i&&(t=t.replace(`/${i}/`,`/${e}/`))})),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===di||this.protocolMode!==Po.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(Bn.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await or(this.updateCloudDiscoveryMetadata.bind(this),Bn.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const r=await or(this.updateEndpointMetadata.bind(this),Bn.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:r}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:r},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:Zo(),jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==ee&&r?.source!==ee&&(e.expiresAt=Zo(),e.canonical_authority=this.canonicalAuthority);const n=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(n,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(Bn.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===re&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata){ei(e,await or(this.updateMetadataWithRegionalInformation.bind(this),Bn.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority}return t.source}let r=await or(this.getEndpointMetadataFromNetwork.bind(this),Bn.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(r=await or(this.updateMetadataWithRegionalInformation.bind(this),Bn.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(r)),ei(e,r,!0),te;throw Zt(ut,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),ei(e,t,!1),{source:Z};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const t=this.getEndpointMetadataFromHardcodedValues();if(t)return ei(e,t,!1),{source:re,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const r=ri(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:ee}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new rr(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw ot(Qe)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Bn.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const r=await this.networkInterface.sendGetRequestAsync(t,e),n=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(r.body);return n?r.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in mi?mi[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(Bn.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==d.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=ye,this.regionDiscoveryMetadata.region_used=t,vs.replaceWithRegionalInformation(e,t);const r=await or(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),Bn.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(r)return this.regionDiscoveryMetadata.region_outcome=ve,this.regionDiscoveryMetadata.region_used=r,vs.replaceWithRegionalInformation(e,r);this.regionDiscoveryMetadata.region_outcome=we}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(Bn.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const r=await or(this.getCloudDiscoveryMetadataFromNetwork.bind(this),Bn.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return ti(e,r,!0),te;throw ot(We)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||d.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),ti(e,t,!1),Z;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const t=(r=this.hostnameAndPort,vi(fi.metadata,r));if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),ti(e,t,!1),re;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}var r;const n=ri(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),ee):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===ui)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),vs.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=vi(JSON.parse(this.authorityOptions.cloudDiscoveryMetadata).metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),e)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),e;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),ot($e)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),vs.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Bn.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${d.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let r=null;try{const n=await this.networkInterface.sendGetRequestAsync(e,t);let o,i;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}(n.body))o=n.body,i=o.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${o.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(n.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${n.status}`),o=n.body,o.error===d.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${o.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${o.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),i=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),r=vi(i,this.hostnameAndPort)}catch(e){if(e instanceof Me)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return r||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),r=vs.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),r}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter((e=>e&&rr.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort)).length>0}static generateAuthority(e,t){let r;if(t&&t.azureCloudInstance!==Mo.None){const e=t.tenant?t.tenant:d.DEFAULT_COMMON_TENANT;r=`${t.azureCloudInstance}/${e}/`}return r||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return d.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw Zt(dt)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Ci.has(e)}static isPublicCloudAuthority(e){return d.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,r){const n=new rr(e);n.validateAsUri();const o=n.getUrlComponents();let i=`${t}.${o.HostNameAndPort}`;this.isPublicCloudAuthority(o.HostNameAndPort)&&(i=`${t}.${d.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const s=rr.constructAuthorityUriFromObject({...n.getUrlComponents(),HostNameAndPort:i}).urlString;return r?`${s}?${r}`:s}static replaceWithRegionalInformation(e,t){const r={...e};return r.authorization_endpoint=vs.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=vs.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=vs.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(e){let t=e;const r=new rr(e).getUrlComponents();if(0===r.PathSegments.length&&r.HostNameAndPort.endsWith(d.CIAM_AUTH_URL)){t=`${t}${r.HostNameAndPort.split(".")[0]}${d.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}function ws(e){return e.endsWith(d.FORWARD_SLASH)?e:`${e}${d.FORWARD_SLASH}`}function Is(e){const t=e.cloudDiscoveryMetadata;let r;if(t)try{r=JSON.parse(t)}catch(e){throw ot($e)}return{canonicalAuthority:e.authority?ws(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:r}}vs.reservedTenantDomains=new Set(["{tenant}","{tenantid}",N,q,O]);const Ts="no_tokens_found",As="native_account_unavailable",ks="refresh_token_expired",Ss="interaction_required",Es="consent_required",bs="login_required",Rs="bad_token",_s=[Ss,Es,bs,Rs],Ps=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Ms={[Ts]:"No refresh token found in the cache. Please sign-in.",[As]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[ks]:"Refresh token has expired.",[Rs]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."},Ns={noTokensFoundError:{code:Ts,desc:Ms[Ts]},native_account_unavailable:{code:As,desc:Ms[As]},bad_token:{code:Rs,desc:Ms[Rs]}};class Os extends Me{constructor(e,t,r,n,o,i,s,a){super(e,t,r),Object.setPrototypeOf(this,Os.prototype),this.timestamp=n||d.EMPTY_STRING,this.traceId=o||d.EMPTY_STRING,this.correlationId=i||d.EMPTY_STRING,this.claims=s||d.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=a}}function qs(e,t,r){const n=!!e&&_s.indexOf(e)>-1,o=!!r&&Ps.indexOf(r)>-1,i=!!t&&_s.some((e=>t.indexOf(e)>-1));return n||i||o}function Us(e){return new Os(e,Ms[e])}class Ls{static setRequestState(e,t,r){const n=Ls.generateLibraryState(e,r);return t?`${n}${d.RESOURCE_DELIM}${t}`:n}static generateLibraryState(e,t){if(!e)throw Zt(qt);const r={id:e.createNewGuid()};t&&(r.meta=t);const n=JSON.stringify(r);return e.base64Encode(n)}static parseRequestState(e,t){if(!e)throw Zt(qt);if(!t)throw Zt(pt);try{const r=t.split(d.RESOURCE_DELIM),n=r[0],o=r.length>1?r.slice(1).join(d.RESOURCE_DELIM):d.EMPTY_STRING,i=e.base64Decode(n),s=JSON.parse(i);return{userRequestState:o||d.EMPTY_STRING,libraryState:s}}catch(e){throw Zt(pt)}}}const Hs="home_account_id",xs="UPN";class Bs{constructor(){if(!window.localStorage)throw uo(io)}getItem(e){return window.localStorage.getItem(e)}setItem(e,t){window.localStorage.setItem(e,t)}removeItem(e){window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}}class Ds{constructor(){if(!window.sessionStorage)throw uo(io)}getItem(e){return window.sessionStorage.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}}function Fs(e,t){if(!t)return null;try{return Ls.parseRequestState(e,t).libraryState.meta}catch(e){throw Zt(pt)}}const Ks=864e5;class zs{getItem(e){const t=`${encodeURIComponent(e)}`,r=document.cookie.split(";");for(let e=0;e<r.length;e++){const n=r[e],[o,...i]=decodeURIComponent(n).trim().split("="),s=i.join("=");if(o===t)return s}return""}setItem(e,t,r,n=!0){let o=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(r){const e=function(e){const t=new Date,r=new Date(t.getTime()+e*Ks);return r.toUTCString()}(r);o+=`expires=${e};`}n&&(o+="Secure;"),document.cookie=o}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach((e=>{const r=decodeURIComponent(e).trim().split("=");t.push(r[0])})),t}containsKey(e){return this.getKeys().includes(e)}}class Gs extends ki{constructor(e,t,r,n,o,i){super(e,r,n,o),this.cacheConfig=t,this.logger=n,this.internalStorage=new ps,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupBrowserStorage(this.cacheConfig.temporaryCacheLocation),this.cookieStorage=new zs,t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=i}setupBrowserStorage(e){try{switch(e){case gn.LocalStorage:return new Bs;case gn.SessionStorage:return new Ds;case gn.MemoryStorage:}}catch(e){this.logger.error(e)}return this.cacheConfig.cacheLocation=gn.MemoryStorage,new ps}migrateCacheEntries(){const e=`${d.CACHE_PREFIX}.${S}`,t=`${d.CACHE_PREFIX}.${E}`,r=`${d.CACHE_PREFIX}.${R}`,n=`${d.CACHE_PREFIX}.${_}`,o=[this.browserStorage.getItem(e),this.browserStorage.getItem(t),this.browserStorage.getItem(r),this.browserStorage.getItem(n)];[S,E,R,_].forEach(((e,t)=>{const r=o[t];r&&this.setTemporaryCache(e,r,!0)}))}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(En),t=this.getItem(`${bn}.${this.clientId}`);if(e&&t)return void this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");this.browserStorage.getKeys().forEach((e=>{if(this.isCredentialKey(e)){const t=this.getItem(e);if(t){const r=this.validateAndParseJson(t);if(r&&r.hasOwnProperty("credentialType"))switch(r.credentialType){case j.ID_TOKEN:if(Qo(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,j.ID_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${e}`);break;case j.ACCESS_TOKEN:case j.ACCESS_TOKEN_WITH_AUTH_SCHEME:if($o(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,j.ACCESS_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${e}`);break;case j.REFRESH_TOKEN:if(Wo(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,j.REFRESH_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${e}`)}}}if(this.isAccountKey(e)){const t=this.getItem(e);if(t){const r=this.validateAndParseJson(t);r&&pi.isAccountEntity(r)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${e} found, saving key to account key map`),this.addAccountKeyToMap(e))}}}))}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const r=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,r,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const r=this.validateAndParseJson(t);return r&&pi.isAccountEntity(r)?ki.toObject(new pi,r):(this.removeAccountKeyFromMap(e),null)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(En);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();-1===t.indexOf(e)?(t.push(e),this.setItem(En,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),r=t.indexOf(e);r>-1?(t.splice(r,1),this.setItem(En,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,j.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,j.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,j.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${bn}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const r=this.getTokenKeys();switch(t){case j.ID_TOKEN:-1===r.idToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),r.idToken.push(e));break;case j.ACCESS_TOKEN:-1===r.accessToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),r.accessToken.push(e));break;case j.REFRESH_TOKEN:-1===r.refreshToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),r.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),Zt(Ut)}this.setItem(`${bn}.${this.clientId}`,JSON.stringify(r))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const r=this.getTokenKeys();switch(t){case j.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const n=r.idToken.indexOf(e);n>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),r.idToken.splice(n,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case j.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const o=r.accessToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),r.accessToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case j.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const i=r.refreshToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),r.refreshToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),Zt(Ut)}this.setItem(`${bn}.${this.clientId}`,JSON.stringify(r))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,j.ID_TOKEN),null;const r=this.validateAndParseJson(t);return r&&Qo(r)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,j.ID_TOKEN),null)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=Do(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,j.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,j.ACCESS_TOKEN),null;const r=this.validateAndParseJson(t);return r&&$o(r)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,j.ACCESS_TOKEN),null)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=Do(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,j.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,j.REFRESH_TOKEN),null;const r=this.validateAndParseJson(t);return r&&Wo(r)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,j.REFRESH_TOKEN),null)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=Do(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,j.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&(n=e,(o=r)&&0===n.indexOf(V)&&o.hasOwnProperty("clientId")&&o.hasOwnProperty("environment"))?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null);var n,o}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=function({environment:e,clientId:t}){return[V,e,t].join(Q).toLowerCase()}(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){const r=0===e.indexOf(ne.CACHE_KEY);let n=!0;return t&&(n=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){return!!t&&0===e.indexOf(Y)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}(e,r)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter((e=>this.isAuthorityMetadata(e)))}setWrapperMetadata(e,t){this.internalStorage.setItem(Rn,e),this.internalStorage.setItem(_n,t)}getWrapperMetadata(){return[this.internalStorage.getItem(Rn)||d.EMPTY_STRING,this.internalStorage.getItem(_n)||d.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(M),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const e=this.generateCacheKey(P),t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const r=this.getAccountInfoFilteredBy({localAccountId:t});return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(r),r):null}const r=this.validateAndParseJson(t);return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:r.homeAccountId,localAccountId:r.localAccountId,tenantId:r.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(M),r=this.generateCacheKey(P);if(e){this.logger.verbose("setActiveAccount: Active account set");const n={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(n)),this.browserStorage.setItem(r,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(r)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){let r=!1;e&&(r=0===e.indexOf(ae));let n=!0;return t&&(n=t.hasOwnProperty("throttleTime")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),r):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const e=this.cookieStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}const n=this.temporaryCacheStorage.getItem(r);if(!n){if(this.cacheConfig.cacheLocation===gn.LocalStorage){const e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),n}setTemporaryCache(e,t,r){const n=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(n,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(n,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach((e=>{-1===e.indexOf(d.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.removeTemporaryItem(e)})),this.browserStorage.getKeys().forEach((e=>{-1===e.indexOf(d.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.browserStorage.removeItem(e)})),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(Bn.ClearTokensAndKeysWithClaims,t);const r=this.getTokenKeys(),n=[];r.accessToken.forEach((e=>{const t=this.getAccessTokenCredential(e);t?.requestedClaimsHash&&e.includes(t.requestedClaimsHash.toLowerCase())&&n.push(this.removeAccessToken(e))})),await Promise.all(n),n.length>0&&this.logger.warning(`${n.length} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):it.startsWith(e,d.CACHE_PREFIX)||it.startsWith(e,b)?e:`${d.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=Ls.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${fn}.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=Ls.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${yn}.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=Ls.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${Cn}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),r=this.getTemporaryCache(t);if(!r)return null;const n=this.generateAuthorityKey(r);return this.getTemporaryCache(n)}updateCacheEntries(e,t,r,n,o){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const i=this.generateStateKey(e);this.setTemporaryCache(i,e,!1);const s=this.generateNonceKey(e);this.setTemporaryCache(s,t,!1);const a=this.generateAuthorityKey(e);if(this.setTemporaryCache(a,r,!1),o){const e={credential:o.homeAccountId,type:Hs};this.setTemporaryCache(An,JSON.stringify(e),!0)}else if(n){const e={credential:n,type:xs};this.setTemporaryCache(An,JSON.stringify(e),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach((t=>{-1!==t.indexOf(e)&&this.removeTemporaryItem(t)})),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(In)),this.removeTemporaryItem(this.generateCacheKey(vn)),this.removeTemporaryItem(this.generateCacheKey(wn)),this.removeTemporaryItem(this.generateCacheKey(kn)),this.removeTemporaryItem(this.generateCacheKey(An)),this.removeTemporaryItem(this.generateCacheKey(Sn)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const t=this.generateStateKey(e),r=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r||d.EMPTY_STRING)}}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach((t=>{if(-1===t.indexOf(Cn))return;const r=this.temporaryCacheStorage.getItem(t);if(!r)return;const n=Fs(this.cryptoImpl,r);n&&n.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r))})),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=Qn(JSON.stringify(e));this.setTemporaryCache(In,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(In,!0);if(!t)throw nn(Er);let r;try{r=JSON.parse(us(t))}catch(e){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${e}`),nn(br)}if(this.removeTemporaryItem(this.generateCacheKey(In)),!r.authority){const t=this.generateAuthorityKey(e),n=this.getTemporaryCache(t);if(!n)throw nn(Rr);r.authority=n}return r}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(Sn,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${d.CACHE_PREFIX}.${Tn}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const t=`${d.CACHE_PREFIX}.${Tn}`;if(e){if(this.getInteractionInProgress())throw nn(gr);this.setTemporaryCache(t,this.clientId,!1)}else e||this.getInteractionInProgress()!==this.clientId||this.removeTemporaryItem(t)}getLegacyLoginHint(){const e=this.getTemporaryCache(b);e&&(this.browserStorage.removeItem(b),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(S,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(S)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const r=t||e;if(r){const e=Uo(r,us);if(e.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),e.preferred_username;if(e.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),e.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const r=Do(t);if(e!==r){const n=this.getItem(e);if(n)return this.browserStorage.removeItem(e),this.setItem(r,n),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),r;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){const r=Fo(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let n;t.claims&&(n=await this.cryptoImpl.hashString(t.claims));const o={idToken:r,accessToken:Ko(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,us,void 0,e.tokenType,void 0,t.sshKid,t.claims,n)};return this.saveCacheRecord(o)}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(e){if(e instanceof Ai&&this.performanceClient&&r)try{const e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},r)}catch(e){}throw e}}}const $s=(e,t)=>{const r={cacheLocation:gn.MemoryStorage,temporaryCacheLocation:gn.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new Gs(e,r,No,t)};function Qs(e,t,r,n){return e.verbose("getAllAccounts called"),r?t.getAllAccounts(n):[]}function Ws(e,t,r){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;const n=r.getAccountInfoFilteredBy(e);return n?(t.verbose("getAccount: Account matching provided filter found, returning"),n):(t.verbose("getAccount: No matching account found, returning null"),null)}function js(e,t,r){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;const n=r.getAccountInfoFilteredBy({username:e});return n?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),n):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}function Vs(e,t,r){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;const n=r.getAccountInfoFilteredBy({homeAccountId:e});return n?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),n):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function Js(e,t,r){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;const n=r.getAccountInfoFilteredBy({localAccountId:e});return n?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),n):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function Ys(e,t){t.setActiveAccount(e)}function Xs(e){return e.getActiveAccount()}const Zs={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};class ea{constructor(e){this.eventCallbacks=new Map,this.logger=e||new _o({})}addEventCallback(e,t,r){if("undefined"!=typeof window){const n=r||bo();return this.eventCallbacks.has(n)?(this.logger.error(`Event callback with id: ${n} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(n,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${n}`),n)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,r,n){if("undefined"!=typeof window){const o={eventType:e,interactionType:t||null,payload:r||null,error:n||null,timestamp:Date.now()};this.eventCallbacks.forEach((([t,r],n)=>{(0===r.length||r.includes(e))&&(this.logger.verbose(`Emitting event to callback ${n}: ${e}`),t.apply(null,[o]))}))}}}class ta extends Me{constructor(e,t,r,n,o){super(e,t,r),this.name="ServerError",this.errorNo=n,this.status=o,Object.setPrototypeOf(this,ta.prototype)}}class ra{static generateThrottlingStorageKey(e){return`${ae}.${JSON.stringify(e)}`}static preProcess(e,t){const r=ra.generateThrottlingStorageKey(t),n=e.getThrottlingCache(r);if(n){if(n.throttleTime<Date.now())return void e.removeItem(r);throw new ta(n.errorCodes?.join(" ")||d.EMPTY_STRING,n.errorMessage,n.subError)}}static postProcess(e,t,r){if(ra.checkResponseStatus(r)||ra.checkResponseForRetryAfter(r)){const n={throttleTime:ra.calculateThrottleTime(parseInt(r.headers[v])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(ra.generateThrottlingStorageKey(t),n)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&(e.headers.hasOwnProperty(v)&&(e.status<200||e.status>=300))}static calculateThrottleTime(e){const t=e<=0?0:e,r=Date.now()/1e3;return Math.floor(1e3*Math.min(r+(t||ie),r+se))}static removeThrottle(e,t,r,n){const o={clientId:t,authority:r.authority,scopes:r.scopes,homeAccountIdentifier:n,claims:r.claims,authenticationScheme:r.authenticationScheme,resourceRequestMethod:r.resourceRequestMethod,resourceRequestUri:r.resourceRequestUri,shrClaims:r.shrClaims,sshKid:r.sshKid},i=this.generateThrottlingStorageKey(o);e.removeItem(i)}}const na="client_id",oa="redirect_uri",ia="response_type",sa="token_type",aa="req_cnf",ca="return_spa_code",la="x-client-xtra-sku",da="brk_client_id",ha="brk_redirect_uri";class ua{static validateRedirectUri(e){if(!e)throw ot(Oe)}static validatePrompt(e){const t=[];for(const e in H)t.push(H[e]);if(t.indexOf(e)<0)throw ot(Be)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw ot(De)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw ot(Ge);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([x.PLAIN,x.S256].indexOf(e)<0)throw ot(ze)}}class ga{constructor(e,t){this.parameters=new Map,this.performanceClient=t,this.correlationId=e}addResponseTypeCode(){this.parameters.set(ia,encodeURIComponent(d.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(ia,encodeURIComponent(`${d.TOKEN_RESPONSE_TYPE} ${d.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set("response_mode",encodeURIComponent(e||D.QUERY))}addNativeBroker(){this.parameters.set("nativebroker",encodeURIComponent("1"))}addScopes(e,t=!0,r=m){!t||r.includes("openid")||e.includes("openid")||r.push("openid");const n=t?[...e||[],...r]:e||[],o=new ni(n);this.parameters.set("scope",encodeURIComponent(o.printScopes()))}addClientId(e){this.parameters.set(na,encodeURIComponent(e))}addRedirectUri(e){ua.validateRedirectUri(e),this.parameters.set(oa,encodeURIComponent(e))}addPostLogoutRedirectUri(e){ua.validateRedirectUri(e),this.parameters.set("post_logout_redirect_uri",encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set("id_token_hint",encodeURIComponent(e))}addDomainHint(e){this.parameters.set("domain_hint",encodeURIComponent(e))}addLoginHint(e){this.parameters.set("login_hint",encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(w,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(w,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set("sid",encodeURIComponent(e))}addClaims(e,t){const r=this.addClientCapabilitiesToClaims(e,t);ua.validateClaims(r),this.parameters.set("claims",encodeURIComponent(r))}addCorrelationId(e){this.parameters.set("client-request-id",encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set("x-client-SKU",e.sku),this.parameters.set("x-client-VER",e.version),e.os&&this.parameters.set("x-client-OS",e.os),e.cpu&&this.parameters.set("x-client-CPU",e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set("x-app-name",e.appName),e?.appVersion&&this.parameters.set("x-app-ver",e.appVersion)}addPrompt(e){ua.validatePrompt(e),this.parameters.set("prompt",encodeURIComponent(e))}addState(e){e&&this.parameters.set("state",encodeURIComponent(e))}addNonce(e){this.parameters.set("nonce",encodeURIComponent(e))}addCodeChallengeParams(e,t){if(ua.validateCodeChallengeParams(e,t),!e||!t)throw ot(Ge);this.parameters.set("code_challenge",encodeURIComponent(e)),this.parameters.set("code_challenge_method",encodeURIComponent(t))}addAuthorizationCode(e){this.parameters.set("code",encodeURIComponent(e))}addDeviceCode(e){this.parameters.set("device_code",encodeURIComponent(e))}addRefreshToken(e){this.parameters.set("refresh_token",encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set("code_verifier",encodeURIComponent(e))}addClientSecret(e){this.parameters.set("client_secret",encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set("client_assertion",encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set("client_assertion_type",encodeURIComponent(e))}addOboAssertion(e){this.parameters.set("assertion",encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set("requested_token_use",encodeURIComponent(e))}addGrantType(e){this.parameters.set("grant_type",encodeURIComponent(e))}addClientInfo(){this.parameters.set("client_info","1")}addExtraQueryParameters(e){Object.entries(e).forEach((([e,t])=>{!this.parameters.has(e)&&t&&this.parameters.set(e,t)}))}addClientCapabilitiesToClaims(e,t){let r;if(e)try{r=JSON.parse(e)}catch(e){throw ot(De)}else r={};return t&&t.length>0&&(r.hasOwnProperty(U)||(r[U]={}),r[U][L]={values:t}),JSON.stringify(r)}addUsername(e){this.parameters.set(he,encodeURIComponent(e))}addPassword(e){this.parameters.set(ue,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(sa,oe.POP),this.parameters.set(aa,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(sa,oe.SSH),this.parameters.set(aa,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set("x-client-current-telemetry",e.generateCurrentRequestHeaderValue()),this.parameters.set("x-client-last-telemetry",e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set("x-ms-lib-capability",ce)}addLogoutHint(e){this.parameters.set("logout_hint",encodeURIComponent(e))}addBrokerParameters(e){const t={};t[da]=e.brokerClientId,t[ha]=e.brokerRedirectUri,this.addExtraQueryParameters(t)}createQueryString(){const e=new Array;return this.parameters.forEach(((t,r)=>{e.push(`${r}=${t}`)})),function(e,t,r){if(!t)return;const n=e.get(na);n&&e.has(da)&&r?.addFields({embeddedClientId:n,embeddedRedirectUri:e.get(oa)},t)}(this.parameters,this.correlationId,this.performanceClient),e.join("&")}}async function pa(e,t,r,n,o,i,s){s?.addQueueMeasurement(Bn.AuthorityFactoryCreateDiscoveredInstance,i);const a=vs.transformCIAMAuthority(ws(e)),c=new vs(a,t,r,n,o,i,s);try{return await or(c.resolveEndpointsAsync.bind(c),Bn.AuthorityResolveEndpointsAsync,o,s,i)(),c}catch(e){throw Zt(dt)}}class ma{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:n,storageInterface:o,networkInterface:i,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:l,serverTelemetryManager:d,persistencePlugin:h,serializableCache:u}){const g={...bi,...r};return{authOptions:(p=e,{clientCapabilities:[],azureCloudOptions:Ni,skipAuthorityMetadataCache:!1,instanceAware:!1,...p}),systemOptions:{...Ei,...t},loggerOptions:g,cacheOptions:{...Ri,...n},storageInterface:o||new Si(e.clientId,No,new _o(g)),networkInterface:i||_i,cryptoInterface:s||No,clientCredentials:a||Mi,libraryInfo:{...Pi,...c},telemetry:{...Oi,...l},serverTelemetryManager:d||null,persistencePlugin:h||null,serializableCache:u||null};var p}(e),this.logger=new _o(this.config.loggerOptions,Oo,qo),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[C]=d.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case Hs:try{const r=ii(e.credential);t[w]=`Oid:${r.uid}@${r.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case xs:t[w]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,r,n,o,i){i&&this.performanceClient?.addQueueMeasurement(i,o);const s=await this.sendPostRequest(n,e,{body:t,headers:r},o);return this.config.serverTelemetryManager&&s.status<500&&429!==s.status&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async sendPostRequest(e,t,r,n){let o;ra.preProcess(this.cacheManager,e);try{o=await or(this.networkClient.sendPostRequestAsync.bind(this.networkClient),Bn.NetworkClientSendPostRequestAsync,this.logger,this.performanceClient,n)(t,r);const e=o.headers||{};this.performanceClient?.addFields({refreshTokenSize:o.body.refresh_token?.length||0,httpVerToken:e[k]||"",requestId:e[A]||""},n)}catch(e){if(e instanceof Bi){const t=e.responseHeaders;throw t&&this.performanceClient?.addFields({httpVerToken:t[k]||"",requestId:t[A]||"",contentTypeHeader:t[C]||void 0,contentLengthHeader:t[y]||void 0,httpStatus:e.httpStatus},n),e.error}throw e instanceof Me?e:Zt(ht)}return ra.postProcess(this.cacheManager,e,o),o}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(Bn.UpdateTokenEndpointAuthority,t);const r=`https://${e}/${this.authority.tenant}/`,n=await pa(r,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=n}createTokenQueryParameters(e){const t=new ga(e.correlationId,this.performanceClient);return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.addCorrelationId(e.correlationId),t.createQueryString()}}const fa="sw";class Ca{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(Bn.PopTokenGenerateCnf,e.correlationId);const r=await or(this.generateKid.bind(this),Bn.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),n=this.cryptoUtils.base64UrlEncode(JSON.stringify(r));return{kid:r.kid,reqCnfString:n}}async generateKid(e){this.performanceClient?.addQueueMeasurement(Bn.PopTokenGenerateKid,e.correlationId);return{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:fa}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,n){const{resourceRequestMethod:o,resourceRequestUri:i,shrClaims:s,shrNonce:a,shrOptions:c}=r,l=i?new rr(i):void 0,d=l?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:Ho(),m:o?.toUpperCase(),u:d?.HostNameAndPort,nonce:a||this.cryptoUtils.createNewGuid(),p:d?.AbsolutePath,q:d?.QueryString?[[],d.QueryString]:void 0,client_claims:s||void 0,...n},t,c,r.correlationId)}}class ya{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class va{constructor(e,t,r,n,o,i,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=n,this.serializableCache=o,this.persistencePlugin=i,this.performanceClient=s}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?Zt(ft,"Cached State"):Zt(ft,"Server State");let r,n;try{r=decodeURIComponent(e.state)}catch(t){throw Zt(pt,e.state)}try{n=decodeURIComponent(t)}catch(t){throw Zt(pt,e.state)}if(r!==n)throw Zt(mt);if(e.error||e.error_description||e.suberror){const t=function(e){const t="code=",r=e.error_uri?.lastIndexOf(t);return r&&r>=0?e.error_uri?.substring(r+5):void 0}(e);if(qs(e.error,e.error_description,e.suberror))throw new Os(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new ta(e.error||"",e.error_description,e.suberror,t)}}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const r=`Error(s): ${e.error_codes||d.NOT_AVAILABLE} - Timestamp: ${e.timestamp||d.NOT_AVAILABLE} - Description: ${e.error_description||d.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||d.NOT_AVAILABLE} - Trace ID: ${e.trace_id||d.NOT_AVAILABLE}`,n=e.error_codes?.length?e.error_codes[0]:void 0,o=new ta(e.error,r,e.suberror,n,e.status);if(t&&e.status&&e.status>=g&&e.status<=p)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${o}`);if(t&&e.status&&e.status>=h&&e.status<=u)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${o}`);if(qs(e.error,e.error_description,e.suberror))throw new Os(e.error,e.error_description,e.suberror,e.timestamp||d.EMPTY_STRING,e.trace_id||d.EMPTY_STRING,e.correlation_id||d.EMPTY_STRING,e.claims||d.EMPTY_STRING,n);throw o}}async handleServerTokenResponse(e,t,r,n,o,i,s,a,c){let l,h;if(this.performanceClient?.addQueueMeasurement(Bn.HandleServerTokenResponse,e.correlation_id),e.id_token){if(l=Uo(e.id_token||d.EMPTY_STRING,this.cryptoObj.base64Decode),o&&o.nonce&&l.nonce!==o.nonce)throw Zt(Ct);if(n.maxAge||0===n.maxAge){const e=l.auth_time;if(!e)throw Zt(yt);Lo(e,n.maxAge)}}this.homeAccountIdentifier=pi.generateHomeAccountId(e.client_info||d.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,l),o&&o.state&&(h=Ls.parseRequestState(this.cryptoObj,o.state)),e.key_id=e.key_id||n.sshKid||void 0;const u=this.generateCacheRecord(e,t,r,n,l,i,o);let g;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),g=new ya(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(g)),s&&!a&&u.account){const e=u.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await va.generateAuthenticationResult(this.cryptoObj,t,u,!1,n,l,h,void 0,c)}await this.cacheStorage.saveCacheRecord(u,n.storeInCache,n.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&g&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(g))}return va.generateAuthenticationResult(this.cryptoObj,t,u,!1,n,l,h,e,c)}generateCacheRecord(e,t,r,n,o,i,s){const a=t.getPreferredCache();if(!a)throw Zt(Nt);const c=gi(o);let l,d;e.id_token&&o&&(l=Fo(this.homeAccountIdentifier,a,e.id_token,this.clientId,c||""),d=wa(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,o,e.client_info,a,c,s,void 0,this.logger));let h=null;if(e.access_token){const o=e.scope?ni.fromString(e.scope):new ni(n.scopes||[]),s=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,l=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,d=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+s,g=u+l,p=d&&d>0?r+d:void 0;h=Ko(this.homeAccountIdentifier,a,e.access_token,this.clientId,c||t.tenant||"",o.printScopes(),u,g,this.cryptoObj.base64Decode,p,e.token_type,i,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;if(e.refresh_token_expires_in){t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)}u=zo(this.homeAccountIdentifier,a,e.refresh_token,this.clientId,e.foci,i,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:a,familyId:e.foci}),{account:d,idToken:l,accessToken:h,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(e,t,r,n,o,i,s,a,c){let l,h,u=d.EMPTY_STRING,g=[],p=null,m=d.EMPTY_STRING;if(r.accessToken){if(r.accessToken.tokenType!==oe.POP||o.popKid)u=r.accessToken.secret;else{const t=new Ca(e),{secret:n,keyId:i}=r.accessToken;if(!i)throw Zt(Gt);u=await t.signPopToken(n,i,o)}g=ni.fromString(r.accessToken.target).asArray(),p=new Date(1e3*Number(r.accessToken.expiresOn)),l=new Date(1e3*Number(r.accessToken.extendedExpiresOn)),r.accessToken.refreshOn&&(h=new Date(1e3*Number(r.accessToken.refreshOn)))}r.appMetadata&&(m=r.appMetadata.familyId===J?J:"");const f=i?.oid||i?.sub||"",C=i?.tid||"";a?.spa_accountid&&r.account&&(r.account.nativeAccountId=a?.spa_accountid);const y=r.account?ci(r.account.getAccountInfo(),void 0,i,r.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:f,tenantId:C,scopes:g,account:y,idToken:r?.idToken?.secret||"",idTokenClaims:i||{},accessToken:u,fromCache:n,expiresOn:p,extExpiresOn:l,refreshOn:h,correlationId:o.correlationId,requestId:c||d.EMPTY_STRING,familyId:m,tokenType:r.accessToken?.tokenType||d.EMPTY_STRING,state:s?s.userRequestState:d.EMPTY_STRING,cloudGraphHostName:r.account?.cloudGraphHostName||d.EMPTY_STRING,msGraphHost:r.account?.msGraphHost||d.EMPTY_STRING,code:a?.spa_code,fromNativeBroker:!1}}}function wa(e,t,r,n,o,i,s,a,c,l,d){d?.verbose("setCachedAccount called");const h=e.getAccountKeys().find((e=>e.startsWith(r)));let u=null;h&&(u=e.getAccount(h,d));const g=u||pi.createAccount({homeAccountId:r,idTokenClaims:o,clientInfo:i,environment:s,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:l},t,n),p=g.tenantProfiles||[],m=a||g.realm;if(m&&!p.find((e=>e.tenantId===m))){const e=ai(r,g.localAccountId,m,o);p.push(e)}return g.tenantProfiles=p,g}async function Ia(e,t,r){if("string"==typeof e)return e;return e({clientId:t,tokenEndpoint:r})}class Ta extends ma{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(Bn.GetAuthCodeUrl,e.correlationId);const t=await or(this.createAuthCodeUrlQueryString.bind(this),Bn.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return rr.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(Bn.AuthClientAcquireToken,e.correlationId),!e.code)throw Zt(At);const r=Ho(),n=await or(this.executeTokenRequest.bind(this),Bn.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),o=n.headers?.[A],i=new va(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(n.body),or(i.handleServerTokenResponse.bind(i),Bn.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,r,e,t,void 0,void 0,void 0,o)}handleFragmentResponse(e,t){if(new va(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw Zt(Ft);return e}getLogoutUri(e){if(!e)throw ot(Ke);const t=this.createLogoutUrlQueryString(e);return rr.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(Bn.AuthClientExecuteTokenRequest,t.correlationId);const r=this.createTokenQueryParameters(t),n=rr.appendQueryString(e.tokenEndpoint,r),o=await or(this.createTokenRequestBody.bind(this),Bn.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const e=oi(t.clientInfo,this.cryptoUtils.base64Decode);i={credential:`${e.uid}${W}${e.utid}`,type:Hs}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const s=this.createTokenRequestHeaders(i||t.ccsCredential),a={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return or(this.executePostToTokenEndpoint.bind(this),Bn.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(n,o,s,a,t.correlationId,Bn.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(Bn.AuthClientCreateTokenRequestBody,e.correlationId);const t=new ga(e.correlationId,this.performanceClient);if(t.addClientId(e.embeddedClientId||e.tokenBodyParameters?.[na]||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):ua.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!qi(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const r=this.config.clientCredentials.clientAssertion;t.addClientAssertion(await Ia(r.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),t.addClientAssertionType(r.assertionType)}if(t.addGrantType(F),t.addClientInfo(),e.authenticationScheme===oe.POP){const r=new Ca(this.cryptoUtils,this.performanceClient);let n;if(e.popKid)n=this.cryptoUtils.encodeKid(e.popKid);else{n=(await or(r.generateCnf.bind(r),Bn.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString}t.addPopToken(n)}else if(e.authenticationScheme===oe.SSH){if(!e.sshJwk)throw ot(je);t.addSshJwk(e.sshJwk)}let r;if((!it.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=oi(e.clientInfo,this.cryptoUtils.base64Decode);r={credential:`${t.uid}${W}${t.utid}`,type:Hs}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else r=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&r)switch(r.type){case Hs:try{const e=ii(r.credential);t.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case xs:t.addCcsUpn(r.credential)}return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[ca]||t.addExtraQueryParameters({[ca]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){const t=e.correlationId||this.config.cryptoInterface.createNewGuid();this.performanceClient?.addQueueMeasurement(Bn.AuthClientCreateQueryString,t);const r=new ga(t,this.performanceClient);r.addClientId(e.embeddedClientId||e.extraQueryParameters?.[na]||this.config.authOptions.clientId);const n=[...e.scopes||[],...e.extraScopesToConsent||[]];if(r.addScopes(n,!0,this.oidcDefaultScopes),r.addRedirectUri(e.redirectUri),r.addCorrelationId(t),r.addResponseMode(e.responseMode),r.addResponseTypeCode(),r.addLibraryInfo(this.config.libraryInfo),qi(this.config)||r.addApplicationTelemetry(this.config.telemetry.application),r.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&r.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&r.addPrompt(e.prompt),e.domainHint&&r.addDomainHint(e.domainHint),e.prompt!==H.SELECT_ACCOUNT)if(e.sid&&e.prompt===H.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),r.addSid(e.sid);else if(e.account){const t=this.extractAccountSid(e.account);let n=this.extractLoginHint(e.account);if(n&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),n=null),n){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),r.addLoginHint(n);try{const t=ii(e.account.homeAccountId);r.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(t&&e.prompt===H.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),r.addSid(t);try{const t=ii(e.account.homeAccountId);r.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),r.addLoginHint(e.loginHint),r.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),r.addLoginHint(e.account.username);try{const t=ii(e.account.homeAccountId);r.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),r.addLoginHint(e.loginHint),r.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&r.addNonce(e.nonce),e.state&&r.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.embeddedClientId&&r.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),this.addExtraQueryParams(e,r),e.nativeBroker&&(r.addNativeBroker(),e.authenticationScheme===oe.POP)){const t=new Ca(this.cryptoUtils);let n;if(e.popKid)n=this.cryptoUtils.encodeKid(e.popKid);else{n=(await or(t.generateCnf.bind(t),Bn.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString}r.addPopToken(n)}return r.createQueryString()}createLogoutUrlQueryString(e){const t=new ga(e.correlationId,this.performanceClient);return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}function Aa(e){const{skus:t,libraryName:r,libraryVersion:n,extensionName:o,extensionVersion:i}=e,s=new Map([[0,[r,n]],[2,[o,i]]]);let a=[];if(t?.length){if(a=t.split(","),a.length<4)return t}else a=Array.from({length:4},(()=>"|"));return s.forEach(((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){const{skuArr:t,index:r,skuName:n,skuVersion:o}=e;if(r>=t.length)return;t[r]=[n,o].join("|")}({skuArr:a,index:t,skuName:e[0],skuVersion:e[1]})})),a.join(",")}class ka{constructor(e,t){this.cacheOutcome=Ie,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||d.EMPTY_STRING,this.wrapperVer=e.wrapperVer||d.EMPTY_STRING,this.telemetryCacheKey=ne.CACHE_KEY+Q+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${ne.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();r?.length&&t.push(`broker_error=${r}`);const n=t.join(ne.VALUE_SEPARATOR),o=[e,this.getRegionDiscoveryFields()].join(ne.VALUE_SEPARATOR);return[ne.SCHEMA_VERSION,o,n].join(ne.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=ka.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(ne.VALUE_SEPARATOR),n=e.errors.slice(0,t).join(ne.VALUE_SEPARATOR),o=e.errors.length,i=[o,t<o?ne.OVERFLOW_TRUE:ne.OVERFLOW_FALSE].join(ne.VALUE_SEPARATOR);return[ne.SCHEMA_VERSION,e.cacheHits,r,n,i].join(ne.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=ne.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof Me?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(ne.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){const e=this.getLastRequests(),t=ka.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{const r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r)}}static maxErrorsToSend(e){let t,r=0,n=0;const o=e.errors.length;for(t=0;t<o;t++){const o=e.failedRequests[2*t]||d.EMPTY_STRING,i=e.failedRequests[2*t+1]||d.EMPTY_STRING,s=e.errors[t]||d.EMPTY_STRING;if(n+=o.toString().length+i.toString().length+s.length+3,!(n<ne.MAX_LAST_HEADER_BYTES))break;r+=1}return r}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||d.EMPTY_STRING),e.push(this.regionSource||d.EMPTY_STRING),e.push(this.regionOutcome||d.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return Aa(e)}}class Sa{constructor(e,t,r,n,o,i,s,a,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=o,this.navigationClient=i,this.nativeMessageHandler=a,this.correlationId=c||ro(),this.logger=n.clone(on.MSAL_SKU,Qi,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e){if(e){pi.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(pi.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return rr.getAbsoluteUrl(t,Co())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const r={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new ka(r,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,r=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(Bn.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.requestAuthority||this.config.auth.authority,i=r?.length?"true"===r:this.config.auth.instanceAware,s=t&&i?this.config.auth.authority.replace(rr.getDomainFromUrl(o),t.environment):o,a=vs.generateAuthority(s,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await or(pa,Bn.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(a,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw ot(et);return c}}async function Ea(e,t,r){e.addQueueMeasurement(Bn.GeneratePkceCodes,r);const n=nr(ba,Bn.GenerateCodeVerifier,t,e,r)(e,t,r);return{verifier:n,challenge:await or(Ra,Bn.GenerateCodeChallengeFromVerifier,t,e,r)(n,e,t,r)}}function ba(e,t,r){try{const n=new Uint8Array(32);nr(eo,Bn.GetRandomValues,t,e,r)(n);return $n(n)}catch(e){throw nn(ir)}}async function Ra(e,t,r,n){t.addQueueMeasurement(Bn.GenerateCodeChallengeFromVerifier,n);try{const o=await or(Zn,Bn.Sha256Digest,r,t,n)(e,t,n);return $n(new Uint8Array(o))}catch(e){throw nn(ir)}}async function _a(e,t,r,n){r.addQueueMeasurement(Bn.InitializeBaseRequest,e.correlationId);const o=e.authority||t.auth.authority,i=[...e&&e.scopes||[]],s={...e,correlationId:e.correlationId,authority:o,scopes:i};if(s.authenticationScheme){if(s.authenticationScheme===oe.SSH){if(!e.sshJwk)throw ot(je);if(!e.sshKid)throw ot(Ve)}n.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}else s.authenticationScheme=oe.BEARER,n.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!it.isEmptyObj(e.claims)&&(s.requestedClaimsHash=await oo(e.claims)),s}async function Pa(e,t,r,n,o){n.addQueueMeasurement(Bn.InitializeSilentRequest,e.correlationId);const i=await or(_a,Bn.InitializeBaseRequest,o,n,e.correlationId)(e,r,n,o);return{...e,...i,account:t,forceRefresh:e.forceRefresh||!1}}class Ma extends Sa{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(Bn.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);const t=await or(Ea,Bn.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),r={...e,redirectUri:e.redirectUri,code:d.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=d.S256_CODE_CHALLENGE_METHOD,r}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||ro(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=rr.getAbsoluteUrl(e.postLogoutRedirectUri,Co())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=rr.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,Co())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=rr.getAbsoluteUrl(Co(),Co())),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(Bn.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const t=await or(this.getClientConfiguration.bind(this),Bn.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e);return new Ta(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:r,requestAzureCloudOptions:n,requestExtraQueryParameters:o,account:i}=e;this.performanceClient.addQueueMeasurement(Bn.StandardInteractionClientGetClientConfiguration,this.correlationId);const s=await or(this.getDiscoveredAuthority.bind(this),Bn.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:r,requestAzureCloudOptions:n,requestExtraQueryParameters:o,account:i}),a=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:s,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:a.loggerCallback,piiLoggingEnabled:a.piiLoggingEnabled,logLevel:a.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:on.MSAL_SKU,version:Qi,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(Bn.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const r=this.getRedirectUri(e.redirectUri),n={interactionType:t},o=Ls.setRequestState(this.browserCrypto,e&&e.state||d.EMPTY_STRING,n),i={...await or(_a,Bn.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:r,state:o,nonce:e.nonce||ro(),responseMode:this.config.auth.OIDCOptions.serverResponseType};if(e.loginHint||e.sid)return i;const s=e.account||this.browserStorage.getActiveAccount();if(s&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${s.homeAccountId}`,this.correlationId),i.account=s),!i.loginHint&&!s){const e=this.browserStorage.getLegacyLoginHint();e&&(i.loginHint=e)}return i}}const Na="user_switch",Oa={[Na]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class qa extends Me{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,qa.prototype),this.name="NativeAuthError",this.ext=r}}function Ua(e){return!(!e.ext||!e.ext.status||"PERSISTENT_ERROR"!==e.ext.status&&"DISABLED"!==e.ext.status)||(!(!e.ext||!e.ext.error||-2147186943!==e.ext.error)||"ContentError"===e.errorCode)}function La(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return Us(As);case"USER_INTERACTION_REQUIRED":return new Os(e,t);case"USER_CANCEL":return nn(fr);case"NO_NETWORK":return nn(Or)}return new qa(e,Oa[e]||t,r)}class Ha extends ma{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(Bn.RefreshTokenClientAcquireToken,e.correlationId);const t=Ho(),r=await or(this.executeTokenRequest.bind(this),Bn.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),n=r.headers?.[A],o=new va(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(r.body),or(o.handleServerTokenResponse.bind(o),Bn.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,n)}async acquireTokenByRefreshToken(e){if(!e)throw ot(Fe);if(this.performanceClient?.addQueueMeasurement(Bn.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw Zt(Pt);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await or(this.acquireTokenWithCachedRefreshToken.bind(this),Bn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(t){const r=t instanceof Os&&t.errorCode===Ts,n=t instanceof ta&&t.errorCode===le&&t.subError===de;if(r||n)return or(this.acquireTokenWithCachedRefreshToken.bind(this),Bn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw t}return or(this.acquireTokenWithCachedRefreshToken.bind(this),Bn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(Bn.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const r=nr(this.cacheManager.getRefreshToken.bind(this.cacheManager),Bn.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!r)throw Us(Ts);if(r.expiresOn&&xo(r.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw Us(ks);const n={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||oe.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:Hs}};try{return await or(this.acquireToken.bind(this),Bn.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(n)}catch(e){if(e instanceof Os&&e.subError===Rs){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const e=Do(r);this.cacheManager.removeRefreshToken(e)}throw e}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(Bn.RefreshTokenClientExecuteTokenRequest,e.correlationId);const r=this.createTokenQueryParameters(e),n=rr.appendQueryString(t.tokenEndpoint,r),o=await or(this.createTokenRequestBody.bind(this),Bn.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),s={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return or(this.executePostToTokenEndpoint.bind(this),Bn.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(n,o,i,s,e.correlationId,Bn.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(Bn.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,r=new ga(t,this.performanceClient);if(r.addClientId(e.embeddedClientId||e.tokenBodyParameters?.[na]||this.config.authOptions.clientId),e.redirectUri&&r.addRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),r.addGrantType(K),r.addClientInfo(),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!qi(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),r.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await Ia(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(e.authenticationScheme===oe.POP){const t=new Ca(this.cryptoUtils,this.performanceClient);let n;if(e.popKid)n=this.cryptoUtils.encodeKid(e.popKid);else{n=(await or(t.generateCnf.bind(t),Bn.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString}r.addPopToken(n)}else if(e.authenticationScheme===oe.SSH){if(!e.sshJwk)throw ot(je);r.addSshJwk(e.sshJwk)}if((!it.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case Hs:try{const t=ii(e.ccsCredential.credential);r.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case xs:r.addCcsUpn(e.ccsCredential.credential)}return e.embeddedClientId&&r.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),r.createQueryString()}}class xa extends ma{constructor(e,t){super(e,t)}async acquireToken(e){try{const[t,r]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...m]});if(r===Se){this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.");new Ha(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch((()=>{}))}return t}catch(t){if(t instanceof Xt&&t.errorCode===xt){return new Ha(this.config,this.performanceClient).acquireTokenByRefreshToken(e)}throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(Bn.SilentFlowClientAcquireCachedToken,e.correlationId);let t=Ie;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!it.isEmptyObj(e.claims))throw this.setCacheOutcome(Te,e.correlationId),Zt(xt);if(!e.account)throw Zt(Pt);const r=e.account.tenantId||function(e){const t=new rr(e).getUrlComponents(),r=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(r){case N:case O:case q:return;default:return r}}(e.authority),n=this.cacheManager.getTokenKeys(),o=this.cacheManager.getAccessToken(e.account,e,n,r,this.performanceClient,e.correlationId);if(!o)throw this.setCacheOutcome(Ae,e.correlationId),Zt(xt);if(Bo(o.cachedAt)||xo(o.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(ke,e.correlationId),Zt(xt);o.refreshOn&&xo(o.refreshOn,0)&&(t=Se);const i=e.authority||this.authority.getPreferredCache(),s={account:this.cacheManager.readAccountFromCache(e.account),accessToken:o,idToken:this.cacheManager.getIdToken(e.account,n,r,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(i)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await or(this.generateResultFromCacheRecord.bind(this),Bn.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(s,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==Ie&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let r;if(this.performanceClient?.addQueueMeasurement(Bn.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId),e.idToken&&(r=Uo(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=r?.auth_time;if(!e)throw Zt(yt);Lo(e,t.maxAge)}return va.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,r)}}class Ba extends Ma{async acquireToken(e){this.performanceClient.addQueueMeasurement(Bn.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(Pn.acquireTokenSilent_silentFlow),r=await or(this.getClientConfiguration.bind(this),Bn.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),n=new xa(r,this.performanceClient);this.logger.verbose("Silent auth client created");try{const t=(await or(n.acquireCachedToken.bind(n),Bn.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof rn&&e.errorCode===xr&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}}class Da extends Sa{constructor(e,t,r,n,o,i,s,a,c,l,d,h){super(e,t,r,n,o,i,a,c,h),this.apiId=s,this.accountId=l,this.nativeMessageHandler=c,this.nativeStorageManager=d,this.silentCacheClient=new Ba(e,this.nativeStorageManager,r,n,o,i,a,c,h),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);const u=this.nativeMessageHandler.getExtensionId()===an?"chrome":this.nativeMessageHandler.getExtensionId()?.length?"unknown":void 0;this.skus=ka.makeExtraSkuString({libraryName:on.MSAL_SKU,libraryVersion:Qi,extensionName:u,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[la]:this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(Bn.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(Bn.NativeInteractionClientAcquireToken,e.correlationId),r=Ho();try{const n=await this.initializeNativeRequest(e);try{const e=await this.acquireTokensFromCache(this.accountId,n);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const{...o}=n,i={method:hn,request:o},s=await this.nativeMessageHandler.sendMessage(i),a=this.validateNativeResponse(s);return await this.handleNativeResponse(a,n,r).then((e=>(t.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),e))).catch((e=>{throw t.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e}))}catch(e){throw e instanceof qa&&this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:ni.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),Zt(Ot);const r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!r)throw Zt(Ot);try{const e=this.createSilentCacheRequest(t,r),n=await this.silentCacheClient.acquireToken(e),o={...r,idTokenClaims:n?.idTokenClaims,idToken:n?.idToken};return{...n,account:o}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...r}=e;delete r.onRedirectNavigate;const n=await this.initializeNativeRequest(r),o={method:hn,request:n};try{const e=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(e)}catch(e){if(e instanceof qa&&(this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),Ua(e)))throw e}this.browserStorage.setTemporaryCache(Sn,JSON.stringify(n),!0);const i={apiId:Pn.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},s=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(s,i)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:n,...o}=r;n&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(Sn));const i={method:hn,request:o},s=Ho();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const e=await this.nativeMessageHandler.sendMessage(i);this.validateNativeResponse(e);const t=this.handleNativeResponse(e,o,s);this.browserStorage.setInteractionInProgress(!1);const r=await t;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),r}catch(e){throw this.browserStorage.setInteractionInProgress(!1),e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const n=Uo(e.id_token,us),o=this.createHomeAccountIdentifier(e,n),i=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId})?.homeAccountId;if(o!==i&&e.account.id!==t.accountId)throw La(Na);const s=await this.getDiscoveredAuthority({requestAuthority:t.authority}),a=wa(this.browserStorage,s,o,us,n,e.client_info,void 0,n.tid,void 0,e.account.id,this.logger),c=await this.generateAuthenticationResult(e,t,n,a,s.canonicalAuthority,r);return this.cacheAccount(a),this.cacheNativeTokens(e,t,o,n,e.access_token,c.tenantId,r),c}createHomeAccountIdentifier(e,t){return pi.generateHomeAccountId(e.client_info||d.EMPTY_STRING,li,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?ni.fromString(e.scope):ni.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===oe.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const r=new Ca(this.browserCrypto),n={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw Zt(Gt);return r.signPopToken(e.access_token,t.keyId,n)}return e.access_token}async generateAuthenticationResult(e,t,r,n,o,i){const s=this.addTelemetryFromNativeResponse(e),a=e.scope?ni.fromString(e.scope):ni.fromString(t.scope),c=e.account.properties||{},l=c.UID||r.oid||r.sub||d.EMPTY_STRING,h=c.TenantId||r.tid||d.EMPTY_STRING,u=ci(n.getAccountInfo(),void 0,r,e.id_token);u.nativeAccountId!==e.account.id&&(u.nativeAccountId=e.account.id);const g=await this.generatePopAccessToken(e,t),p=t.tokenType===oe.POP?oe.POP:oe.BEARER;return{authority:o,uniqueId:l,tenantId:h,scopes:a.asArray(),account:u,idToken:e.id_token,idTokenClaims:r,accessToken:g,fromCache:!!s&&this.isResponseFromCache(s),expiresOn:new Date(1e3*Number(i+e.expires_in)),tokenType:p,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch((e=>{this.logger.error(`Error occurred while removing account context from browser storage. ${e}`)}))}cacheNativeTokens(e,t,r,n,o,i,s){const a=Fo(r,t.authority,e.id_token||"",t.clientId,n.tid||""),c=s+(t.tokenType===oe.POP?d.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0),l=this.generateScopes(e,t),h={idToken:a,accessToken:Ko(r,t.authority,o,t.clientId,n.tid||i,l.printScopes(),c,0,us,void 0,t.tokenType,void 0,t.keyId)};this.nativeStorageManager.saveCacheRecord(h,t.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw Ne(be,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const r=new rr(t);r.validateAsUri();const{scopes:n,...o}=e,i=new ni(n||[]);i.appendScopes(m);const s={...o,accountId:this.accountId,clientId:this.config.auth.clientId,authority:r.urlString,scope:i.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:(()=>{switch(this.apiId){case Pn.ssoSilent:case Pn.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),H.NONE}if(e.prompt)switch(e.prompt){case H.NONE:case H.CONSENT:case H.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),nn(jr)}else this.logger.trace("initializeNativeRequest: prompt was not provided")})(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(s.signPopToken&&e.popKid)throw nn(Jr);if(this.handleExtraBrokerParams(s),s.extraParameters=s.extraParameters||{},s.extraParameters.telemetry=cn,e.authenticationScheme===oe.POP){const t={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},r=new Ca(this.browserCrypto);let n;if(s.keyId)n=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:s.keyId})),s.signPopToken=!1;else{const o=await or(r.generateCnf.bind(r),Bn.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(t,this.logger);n=o.reqCnfString,s.keyId=o.kid,s.signPopToken=!0}s.reqCnf=n}return this.addRequestSKUs(s),s}handleExtraBrokerParams(e){const t=e.extraParameters&&e.extraParameters.hasOwnProperty(da)&&e.extraParameters.hasOwnProperty(ha)&&e.extraParameters.hasOwnProperty(na);if(!e.embeddedClientId&&!t)return;let r="";const n=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,r=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters[ha],r=e.extraParameters[na]),e.extraParameters={child_client_id:r,child_redirect_uri:n},this.performanceClient?.addFields({embeddedClientId:r,embeddedRedirectUri:n},e.correlationId)}}class Fa{constructor(e,t,r,n){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=n,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(Bn.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:sn,extensionId:this.extensionId,responseId:ro(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise(((e,r)=>{this.resolvers.set(t.responseId,{resolve:e,reject:r})}))}static async createProvider(e,t,r){e.trace("NativeMessageHandler - createProvider called.");try{const n=new Fa(e,t,r,an);return await n.sendHandshakeRequest(),n}catch(n){const o=new Fa(e,t,r);return await o.sendHandshakeRequest(),o}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:sn,extensionId:this.extensionId,responseId:ro(),body:{method:ln}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise(((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout((()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r(nn(Gr)),this.handshakeResolvers.delete(e.responseId)}),this.handshakeTimeoutMs)}))}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(t.channel&&t.channel===sn&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===ln){const e=this.handshakeResolvers.get(t.responseId);if(!e)return void this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(nn($r))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,r=this.resolvers.get(t.responseId),n=this.handshakeResolvers.get(t.responseId);try{const e=t.body.method;if(e===un){if(!r)return;const e=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(La(e.code,e.description,e.ext));else{if(!e.result)throw Ne(be,"Event does not contain result.");e.result.code&&e.result.description?r.reject(La(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result)}this.resolvers.delete(t.responseId)}else if(e===dn){if(!n)return void this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),n.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(t):n&&n.reject(t)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,r,n){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!r)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(n)switch(n){case oe.BEARER:case oe.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}class Ka{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(Bn.HandleCodeResponse,t.correlationId);try{r=this.authModule.handleFragmentResponse(e,t.state)}catch(e){throw e instanceof ta&&e.subError===fr?nn(fr):e}return or(this.handleCodeResponseFromServer.bind(this),Bn.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(Bn.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await or(this.authModule.updateAuthority.bind(this.authModule),Bn.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await or(this.authModule.acquireToken.bind(this.authModule),Bn.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:Hs}:e.loginHint?{credential:e.loginHint,type:xs}:null}}function za(e,t,r){const n=tr(e);if(!n)throw er(e)?(r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),nn(dr)):(r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),nn(cr));return n}class Ga extends Ma{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,s,c,l),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=a}acquireToken(e){try{const t={popupName:this.generatePopupName(e.scopes||m,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),t.popup=this.openSizedPopup("about:blank",t),this.acquireTokenPopupAsync(e,t))}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),r={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},n=e&&e.authority,o=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,n,o)):(this.logger.verbose("asyncPopup set to false, opening popup"),r.popup=this.openSizedPopup("about:blank",r),this.logoutPopupAsync(t,r,n,o))}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(e,t){this.logger.verbose("acquireTokenPopupAsync called");const r=this.initializeServerTelemetryManager(Pn.acquireTokenPopup),n=await or(this.initializeAuthorizationRequest.bind(this),Bn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,Mn.Popup);Eo(n.authority);try{const o=await or(this.initializeAuthorizationCodeRequest.bind(this),Bn.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(n),i=await or(this.createAuthCodeClient.bind(this),Bn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),s=Fa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let a;s&&(a=this.performanceClient.startMeasurement(Bn.FetchAccountIdWithNativeBroker,e.correlationId));const c=await i.getAuthCodeUrl({...n,nativeBroker:s}),l=new Ka(i,this.browserStorage,o,this.logger,this.performanceClient),d=this.initiateAuthRequest(c,t);this.eventHandler.emitEvent(Zs.POPUP_OPENED,Mn.Popup,{popupWindow:d},null);const h=await this.monitorPopupForHash(d,t.popupWindowParent),u=nr(za,Bn.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(h,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(ra.removeThrottle(this.browserStorage,this.config.auth.clientId,o),u.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),a&&a.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw nn(Qr);const e=new Da(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Pn.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,u.accountId,this.nativeStorage,n.correlationId),{userRequestState:t}=Ls.parseRequestState(this.browserCrypto,n.state);return await e.acquireToken({...n,state:t,prompt:void 0})}return await l.handleCodeResponse(u,n)}catch(e){throw t.popup?.close(),e instanceof Me&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}async logoutPopupAsync(e,t,r,n){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(Zs.LOGOUT_START,Mn.Popup,e);const o=this.initializeServerTelemetryManager(Pn.logoutPopup);try{await this.clearCacheOnLogout(e.account);const i=await or(this.createAuthCodeClient.bind(this),Bn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:o,requestAuthority:r,account:e.account||void 0});try{i.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&i.authority.protocolMode===Po.OIDC){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(Zs.LOGOUT_SUCCESS,Mn.Popup,e),n){const e={apiId:Pn.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=rr.getAbsoluteUrl(n,Co());await this.navigationClient.navigateInternal(t,e)}return void t.popup?.close()}}const s=i.getLogoutUri(e);this.eventHandler.emitEvent(Zs.LOGOUT_SUCCESS,Mn.Popup,e);const a=this.openPopup(s,t);if(this.eventHandler.emitEvent(Zs.POPUP_OPENED,Mn.Popup,{popupWindow:a},null),await this.monitorPopupForHash(a,t.popupWindowParent).catch((()=>{})),n){const e={apiId:Pn.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=rr.getAbsoluteUrl(n,Co());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw t.popup?.close(),e instanceof Me&&(e.setCorrelationId(this.correlationId),o.cacheFailedRequest(e)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(Zs.LOGOUT_FAILURE,Mn.Popup,null,e),this.eventHandler.emitEvent(Zs.LOGOUT_END,Mn.Popup),e}this.eventHandler.emitEvent(Zs.LOGOUT_END,Mn.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),nn(ar)}monitorPopupForHash(e,t){return new Promise(((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const n=setInterval((()=>{if(e.closed)return this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(n),void r(nn(fr));let o="";try{o=e.location.href}catch(e){}if(!o||"about:blank"===o)return;clearInterval(n);let i="";const s=this.config.auth.OIDCOptions.serverResponseType;e&&(i=s===B.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(i)}),this.config.system.pollIntervalMilliseconds)})).finally((()=>{this.cleanPopup(e,t)}))}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t)),!r)throw nn(mr);return r.focus&&r.focus(),this.currentWindow=r,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),r}catch(e){throw this.logger.error("error opening popup "+e.message),this.browserStorage.setInteractionInProgress(!1),nn(pr)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:r,popupWindowParent:n}){const o=n.screenLeft?n.screenLeft:n.screenX,i=n.screenTop?n.screenTop:n.screenY,s=n.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,a=n.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=r.popupSize?.width,l=r.popupSize?.height,d=r.popupPosition?.top,h=r.popupPosition?.left;return(!c||c<0||c>s)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=on.POPUP_WIDTH),(!l||l<0||l>a)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),l=on.POPUP_HEIGHT),(!d||d<0||d>a)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),d=Math.max(0,a/2-on.POPUP_HEIGHT/2+i)),(!h||h<0||h>s)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),h=Math.max(0,s/2-on.POPUP_WIDTH/2+o)),n.open(e,t,`width=${c}, height=${l}, top=${d}, left=${h}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(Mn.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${on.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${on.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}class $a{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(vn,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(kn,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const r={apiId:Pn.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if("function"==typeof t.onRedirectNavigate){this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback");return!1!==t.onRedirectNavigate(e)?(this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),void await t.navigationClient.navigateExternal(e,r)):void this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation")}return this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),void await t.navigationClient.navigateExternal(e,r)}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),nn(ar)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const r=this.browserStorage.generateStateKey(t),n=this.browserStorage.getTemporaryCache(r);if(!n)throw Zt(ft,"Cached State");let o;try{o=this.authModule.handleFragmentResponse(e,n)}catch(e){throw e instanceof ta&&e.subError===fr?nn(fr):e}const i=this.browserStorage.generateNonceKey(n),s=this.browserStorage.getTemporaryCache(i);if(this.authCodeRequest.code=o.code,o.cloud_instance_host_name&&await or(this.authModule.updateAuthority.bind(this.authModule),Bn.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(o.cloud_instance_host_name,this.authCodeRequest.correlationId),o.nonce=s||void 0,o.state=n,o.client_info)this.authCodeRequest.clientInfo=o.client_info;else{const e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}const a=await this.authModule.acquireToken(this.authCodeRequest,o);return this.browserStorage.cleanRequestByState(t),a}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(An,!0);if(e)try{return JSON.parse(e)}catch(t){this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}class Qa extends Ma{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,s,c,l),this.nativeStorage=a}async acquireToken(e){const t=await or(this.initializeAuthorizationRequest.bind(this),Bn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,Mn.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const r=this.initializeServerTelemetryManager(Pn.acquireTokenRedirect),n=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(Zs.RESTORE_FROM_BFCACHE,Mn.Redirect))};try{const o=await or(this.initializeAuthorizationCodeRequest.bind(this),Bn.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),i=await or(this.createAuthCodeClient.bind(this),Bn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),s=new $a(i,this.browserStorage,o,this.logger,this.performanceClient),a=await i.getAuthCodeUrl({...t,nativeBroker:Fa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),c=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${c}`),window.addEventListener("pageshow",n),await s.initiateAuthRequest(a,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:c,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(e){throw e instanceof Me&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),window.removeEventListener("pageshow",n),this.browserStorage.cleanRequestByState(t.state),e}}async handleRedirectPromise(e="",t){const r=this.initializeServerTelemetryManager(Pn.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[n,o]=this.getRedirectResponse(e||"");if(!n)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(Mn.Redirect),"back_forward"!==function(){if("undefined"==typeof window||void 0===window.performance||"function"!=typeof window.performance.getEntriesByType)return;const e=window.performance.getEntriesByType("navigation"),t=e.length?e[0]:void 0;return t?.type}()?t.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const i=this.browserStorage.getTemporaryCache(vn,!0)||d.EMPTY_STRING,s=rr.removeHashFromUrl(i);if(s===rr.removeHashFromUrl(window.location.href)&&this.config.auth.navigateToLoginRequestUrl){this.logger.verbose("Current page is loginRequestUrl, handling response"),i.indexOf("#")>-1&&po(i);return await this.handleResponse(n,r)}if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(n,r);if(!mo()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(wn,o,!0);const e={apiId:Pn.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let t=!0;if(i&&"null"!==i)this.logger.verbose(`Navigating to loginRequestUrl: ${i}`),t=await this.navigationClient.navigateInternal(i,e);else{const r=yo();this.browserStorage.setTemporaryCache(vn,r,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),t=await this.navigationClient.navigateInternal(r,e)}if(!t)return await this.handleResponse(n,r)}return null}catch(e){throw e instanceof Me&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),this.browserStorage.cleanRequestByInteractionType(Mn.Redirect),e}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(t=this.config.auth.OIDCOptions.serverResponseType===B.QUERY?window.location.search:window.location.hash);let r=tr(t);if(r){try{!function(e,t,r){if(!e.state)throw nn(lr);const n=Fs(t,e.state);if(!n)throw nn(hr);if(n.interactionType!==r)throw nn(ur)}(r,this.browserCrypto,Mn.Redirect)}catch(e){return e instanceof Me&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return go(window),this.logger.verbose("Hash contains known properties, returning response hash"),[r,t]}const n=this.browserStorage.getTemporaryCache(wn,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(wn)),n&&(r=tr(n),r)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[r,n]):[null,""]}async handleResponse(e,t){const r=e.state;if(!r)throw nn(lr);const n=this.browserStorage.getCachedRequest(r);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw nn(Qr);const t=new Da(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Pn.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,n.correlationId),{userRequestState:o}=Ls.parseRequestState(this.browserCrypto,r);return t.acquireToken({...n,state:o,prompt:void 0}).finally((()=>{this.browserStorage.cleanRequestByState(r)}))}const o=this.browserStorage.getCachedAuthority(r);if(!o)throw nn(Rr);const i=await or(this.createAuthCodeClient.bind(this),Bn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:o});ra.removeThrottle(this.browserStorage,this.config.auth.clientId,n);return new $a(i,this.browserStorage,n,this.logger,this.performanceClient).handleCodeResponse(e,r)}async logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),r=this.initializeServerTelemetryManager(Pn.logout);try{this.eventHandler.emitEvent(Zs.LOGOUT_START,Mn.Redirect,e),await this.clearCacheOnLogout(t.account);const n={apiId:Pn.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},o=await or(this.createAuthCodeClient.bind(this),Bn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(o.authority.protocolMode===Po.OIDC)try{o.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId)return this.browserStorage.removeAccount(t.account?.homeAccountId),void this.eventHandler.emitEvent(Zs.LOGOUT_SUCCESS,Mn.Redirect,t)}const i=o.getLogoutUri(t);if(this.eventHandler.emitEvent(Zs.LOGOUT_SUCCESS,Mn.Redirect,t),!e||"function"!=typeof e.onRedirectNavigate)return this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(i,n);if(!1!==e.onRedirectNavigate(i))return this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(i,n);this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}catch(e){throw e instanceof Me&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),this.eventHandler.emitEvent(Zs.LOGOUT_FAILURE,Mn.Redirect,null,e),this.eventHandler.emitEvent(Zs.LOGOUT_END,Mn.Redirect),e}this.eventHandler.emitEvent(Zs.LOGOUT_END,Mn.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return rr.getAbsoluteUrl(t,Co())}}async function Wa(e,t,r,n,o){if(t.addQueueMeasurement(Bn.SilentHandlerInitiateAuthRequest,n),!e)throw r.info("Navigate url is empty"),nn(ar);return o?or(Va,Bn.SilentHandlerLoadFrame,r,t,n)(e,o,t,n):nr(Ja,Bn.SilentHandlerLoadFrameSync,r,t,n)(e)}async function ja(e,t,r,n,o,i,s){return n.addQueueMeasurement(Bn.SilentHandlerMonitorIframeForHash,i),new Promise(((n,i)=>{t<Gi&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (${Gi}ms). This may result in timeouts.`);const a=window.setTimeout((()=>{window.clearInterval(c),i(nn(yr))}),t),c=window.setInterval((()=>{let t="";const r=e.contentWindow;try{t=r?r.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let o="";r&&(o=s===B.QUERY?r.location.search:r.location.hash),window.clearTimeout(a),window.clearInterval(c),n(o)}),r)})).finally((()=>{nr(Xa,Bn.RemoveHiddenIframe,o,n,i)(e)}))}function Va(e,t,r,n){return r.addQueueMeasurement(Bn.SilentHandlerLoadFrame,n),new Promise(((r,n)=>{const o=Ya();window.setTimeout((()=>{o?(o.src=e,r(o)):n("Unable to load iframe")}),t)}))}function Ja(e){const t=Ya();return t.src=e,t}function Ya(){const e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function Xa(e){document.body===e.parentNode&&document.body.removeChild(e)}class Za extends Ma{constructor(e,t,r,n,o,i,s,a,c,l,d){super(e,t,r,n,o,i,a,l,d),this.apiId=s,this.nativeStorage=c}async acquireToken(e){this.performanceClient.addQueueMeasurement(Bn.SilentIframeClientAcquireToken,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==H.NONE&&t.prompt!==H.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${H.NONE}`),t.prompt=H.NONE):t.prompt=H.NONE;const r=await or(this.initializeAuthorizationRequest.bind(this),Bn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,Mn.Silent);Eo(r.authority);const n=this.initializeServerTelemetryManager(this.apiId);let o;try{return o=await or(this.createAuthCodeClient.bind(this),Bn.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:r.authority,requestAzureCloudOptions:r.azureCloudOptions,requestExtraQueryParameters:r.extraQueryParameters,account:r.account}),await or(this.silentTokenHelper.bind(this),Bn.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(o,r)}catch(r){if(r instanceof Me&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),!(o&&r instanceof Me&&r.errorCode===on.INVALID_GRANT_ERROR))throw r;this.performanceClient.addFields({retryError:r.errorCode},this.correlationId);const i=await or(this.initializeAuthorizationRequest.bind(this),Bn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,Mn.Silent);return await or(this.silentTokenHelper.bind(this),Bn.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(o,i)}}logout(){return Promise.reject(nn(Ar))}async silentTokenHelper(e,t){const r=t.correlationId;this.performanceClient.addQueueMeasurement(Bn.SilentIframeClientTokenHelper,r);const n=await or(this.initializeAuthorizationCodeRequest.bind(this),Bn.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,r)(t),o=await or(e.getAuthCodeUrl.bind(e),Bn.GetAuthCodeUrl,this.logger,this.performanceClient,r)({...t,nativeBroker:Fa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),i=new Ka(e,this.browserStorage,n,this.logger,this.performanceClient),s=await or(Wa,Bn.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,r)(o,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait),a=this.config.auth.OIDCOptions.serverResponseType,c=await or(ja,Bn.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,a),l=nr(za,Bn.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(c,a,this.logger);if(l.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw nn(Qr);const e=new Da(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,l.accountId,this.browserStorage,r),{userRequestState:n}=Ls.parseRequestState(this.browserCrypto,t.state);return or(e.acquireToken.bind(e),Bn.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,r)({...t,state:n,prompt:t.prompt||H.NONE})}return or(i.handleCodeResponse.bind(i),Bn.HandleCodeResponse,this.logger,this.performanceClient,r)(l,t)}}class ec extends Ma{async acquireToken(e){this.performanceClient.addQueueMeasurement(Bn.SilentRefreshClientAcquireToken,e.correlationId);const t=await or(_a,Bn.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));const n=this.initializeServerTelemetryManager(Pn.acquireTokenSilent_silentFlow),o=await this.createRefreshTokenClient({serverTelemetryManager:n,authorityUrl:r.authority,azureCloudOptions:r.azureCloudOptions,account:r.account});return or(o.acquireTokenByRefreshToken.bind(o),Bn.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(r).catch((e=>{throw e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e),e}))}logout(){return Promise.reject(nn(Ar))}async createRefreshTokenClient(e){const t=await or(this.getClientConfiguration.bind(this),Bn.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new Ha(t,this.performanceClient)}}class tc{constructor(e,t,r,n){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=n}loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw nn(Mr);const n=t.id_token?Uo(t.id_token,us):void 0,o={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},i=e.authority?new vs(vs.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,o,this.logger,e.correlationId||ro()):void 0,s=this.loadAccount(e,r.clientInfo||t.client_info||"",n,i),a=this.loadIdToken(t,s.homeAccountId,s.environment,s.realm),c=this.loadAccessToken(e,t,s.homeAccountId,s.environment,s.realm,r),l=this.loadRefreshToken(t,s.homeAccountId,s.environment);return this.generateAuthenticationResult(e,{account:s,idToken:a,accessToken:c,refreshToken:l},n,i)}loadAccount(e,t,r,n){if(this.logger.verbose("TokenCache - loading account"),e.account){const t=pi.createFromAccountInfo(e.account);return this.storage.setAccount(t),t}if(!n||!t&&!r)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),nn(Hr);const o=pi.generateHomeAccountId(t,n.authorityType,this.logger,this.cryptoObj,r),i=r?.tid,s=wa(this.storage,n,o,us,r,t,n.hostnameAndPort,i,void 0,void 0,this.logger);return this.storage.setAccount(s),s}loadIdToken(e,t,r,n){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const o=Fo(t,r,e.id_token,this.config.auth.clientId,n);return this.storage.setIdTokenCredential(o),o}loadAccessToken(e,t,r,n,o,i){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!(t.scope||e.scopes&&e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");const s=t.scope?ni.fromString(t.scope):new ni(e.scopes),a=i.expiresOn||t.expires_in+(new Date).getTime()/1e3,c=i.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+(new Date).getTime()/1e3,l=Ko(r,n,t.access_token,this.config.auth.clientId,o,s.printScopes(),a,c,us);return this.storage.setAccessTokenCredential(l),l}loadRefreshToken(e,t,r){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const n=zo(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(n),n}generateAuthenticationResult(e,t,r,n){let o,i="",s=[],a=null;t?.accessToken&&(i=t.accessToken.secret,s=ni.fromString(t.accessToken.target).asArray(),a=new Date(1e3*Number(t.accessToken.expiresOn)),o=new Date(1e3*Number(t.accessToken.extendedExpiresOn)));const c=t.account;return{authority:n?n.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:s,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:r||{},accessToken:i,fromCache:!0,expiresOn:a,correlationId:e.correlationId||"",requestId:"",extExpiresOn:o,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}class rc extends Ta{constructor(e){super(e),this.includeRedirectUri=!1}}class nc extends Ma{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,a,c,l),this.apiId=s}async acquireToken(e){if(!e.code)throw nn(Br);const t=await or(this.initializeAuthorizationRequest.bind(this),Bn.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,Mn.Silent),r=this.initializeServerTelemetryManager(this.apiId);try{const n={...t,code:e.code},o=await or(this.getClientConfiguration.bind(this),Bn.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),i=new rc(o);this.logger.verbose("Auth code client created");const s=new Ka(i,this.browserStorage,n,this.logger,this.performanceClient);return await or(s.handleCodeResponseFromServer.bind(s),Bn.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(e){throw e instanceof Me&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}logout(){return Promise.reject(nn(Ar))}}function oc(e){const t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?"9188040d-6c67-4c5b-b112-36a304b66dad"===t?.tid?"MSA":"AAD":void 0}function ic(e,t){try{ko(e)}catch(e){throw t.end({success:!1},e),e}}class sc{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new fs(this.logger,this.performanceClient):No,this.eventHandler=new ea(this.logger),this.browserStorage=this.isBrowserEnvironment?new Gs(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,Is(this.config.auth),this.performanceClient):$s(this.config.auth.clientId,this.logger);const t={cacheLocation:gn.MemoryStorage,temporaryCacheLocation:gn.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new Gs(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new tc(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this),this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}static async createController(e,t){const r=new sc(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized)return void this.logger.info("initialize has already been called, exiting early.");if(!this.isBrowserEnvironment)return this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,void this.eventHandler.emitEvent(Zs.INITIALIZE_END);const t=e?.correlationId||this.getRequestCorrelationId(),r=this.config.system.allowNativeBroker,n=this.performanceClient.startMeasurement(Bn.InitializeClientApplication,t);if(this.eventHandler.emitEvent(Zs.INITIALIZE_START),r)try{this.nativeExtensionProvider=await Fa.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await or(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),Bn.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(Zs.INITIALIZE_END),n.end({allowNativeBroker:r,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),Ao(this.initialized),this.isBrowserEnvironment){const t=e||"";let r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){const t=this.getAllAccounts(),r=this.browserStorage.getCachedNativeRequest(),n=r&&Fa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,o=n?r?.correlationId:this.browserStorage.getTemporaryCache(kn,!0)||"",i=this.performanceClient.startMeasurement(Bn.AcquireTokenRedirect,o);let s;if(this.eventHandler.emitEvent(Zs.HANDLE_REDIRECT_START,Mn.Redirect),n&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");const e=new Da(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Pn.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,r.accountId,this.nativeInternalStorage,r.correlationId);s=or(e.handleRedirectPromise.bind(e),Bn.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,i.event.correlationId)(this.performanceClient,i.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const t=this.createRedirectClient(o);s=or(t.handleRedirectPromise.bind(t),Bn.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,i.event.correlationId)(e,i)}return s.then((e=>{if(e){t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(Zs.LOGIN_SUCCESS,Mn.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_SUCCESS,Mn.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),i.end({success:!0,accountType:oc(e.account)})}else i.event.errorCode?i.end({success:!1}):i.discard();return this.eventHandler.emitEvent(Zs.HANDLE_REDIRECT_END,Mn.Redirect),e})).catch((e=>{const r=e;throw t.length>0?this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_FAILURE,Mn.Redirect,null,r):this.eventHandler.emitEvent(Zs.LOGIN_FAILURE,Mn.Redirect,null,r),this.eventHandler.emitEvent(Zs.HANDLE_REDIRECT_END,Mn.Redirect),i.end({success:!1},r),e}))}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const r=this.performanceClient.startMeasurement(Bn.AcquireTokenPreRedirect,t);r.add({accountType:oc(e.account),scenarioId:e.scenarioId});const n=e.onRedirectNavigate;if(n)e.onRedirectNavigate=e=>{const t="function"==typeof n?n(e):void 0;return!1!==t?r.end({success:!0}):r.discard(),t};else{const e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{const n="function"==typeof e?e(t):void 0;return!1!==n?r.end({success:!0}):r.discard(),n}}const o=this.getAllAccounts().length>0;try{let n;if(So(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),o?this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_START,Mn.Redirect,e):this.eventHandler.emitEvent(Zs.LOGIN_START,Mn.Redirect,e),this.nativeExtensionProvider&&this.canUseNative(e)){n=new Da(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Pn.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,r).catch((r=>{if(r instanceof qa&&Ua(r)){this.nativeExtensionProvider=void 0;return this.createRedirectClient(t).acquireToken(e)}if(r instanceof Os){this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow");return this.createRedirectClient(t).acquireToken(e)}throw this.browserStorage.setInteractionInProgress(!1),r}))}else{n=this.createRedirectClient(t).acquireToken(e)}return await n}catch(e){throw r.end({success:!1},e),o?this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_FAILURE,Mn.Redirect,null,e):this.eventHandler.emitEvent(Zs.LOGIN_FAILURE,Mn.Redirect,null,e),e}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(Bn.AcquireTokenPopup,t);r.add({scenarioId:e.scenarioId,accountType:oc(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),ic(this.initialized,r),this.browserStorage.setInteractionInProgress(!0)}catch(e){return Promise.reject(e)}const n=this.getAllAccounts();let o;if(n.length>0?this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_START,Mn.Popup,e):this.eventHandler.emitEvent(Zs.LOGIN_START,Mn.Popup,e),this.canUseNative(e))o=this.acquireTokenNative({...e,correlationId:t},Pn.acquireTokenPopup).then((e=>(this.browserStorage.setInteractionInProgress(!1),r.end({success:!0,isNativeBroker:!0,accountType:oc(e.account)}),e))).catch((r=>{if(r instanceof qa&&Ua(r)){this.nativeExtensionProvider=void 0;return this.createPopupClient(t).acquireToken(e)}if(r instanceof Os){this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow");return this.createPopupClient(t).acquireToken(e)}throw this.browserStorage.setInteractionInProgress(!1),r}));else{o=this.createPopupClient(t).acquireToken(e)}return o.then((e=>(n.length<this.getAllAccounts().length?this.eventHandler.emitEvent(Zs.LOGIN_SUCCESS,Mn.Popup,e):this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_SUCCESS,Mn.Popup,e),r.end({success:!0,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:oc(e.account)}),e))).catch((e=>(n.length>0?this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_FAILURE,Mn.Popup,null,e):this.eventHandler.emitEvent(Zs.LOGIN_FAILURE,Mn.Popup,null,e),r.end({success:!1},e),Promise.reject(e))))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const t=this.getRequestCorrelationId(e),r={...e,prompt:e.prompt,correlationId:t};let n;if(this.ssoSilentMeasurement=this.performanceClient.startMeasurement(Bn.SsoSilent,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:oc(e.account)}),ic(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(Zs.SSO_SILENT_START,Mn.Silent,r),this.canUseNative(r))n=this.acquireTokenNative(r,Pn.ssoSilent).catch((e=>{if(e instanceof qa&&Ua(e)){this.nativeExtensionProvider=void 0;return this.createSilentIframeClient(r.correlationId).acquireToken(r)}throw e}));else{n=this.createSilentIframeClient(r.correlationId).acquireToken(r)}return n.then((e=>(this.eventHandler.emitEvent(Zs.SSO_SILENT_SUCCESS,Mn.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:oc(e.account)}),e))).catch((e=>{throw this.eventHandler.emitEvent(Zs.SSO_SILENT_FAILURE,Mn.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const r=this.performanceClient.startMeasurement(Bn.AcquireTokenByCode,t);ic(this.initialized,r),this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_BY_CODE_START,Mn.Silent,e),r.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw nn(Fr);if(e.code){const n=e.code;let o=this.hybridAuthCodeResponses.get(n);return o?(this.logger.verbose("Existing acquireTokenByCode request found",t),r.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),o=this.acquireTokenByCodeAsync({...e,correlationId:t}).then((e=>(this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_BY_CODE_SUCCESS,Mn.Silent,e),this.hybridAuthCodeResponses.delete(n),r.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:oc(e.account)}),e))).catch((e=>{throw this.hybridAuthCodeResponses.delete(n),this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_BY_CODE_FAILURE,Mn.Silent,null,e),r.end({success:!1},e),e})),this.hybridAuthCodeResponses.set(n,o)),await o}if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId)){const n=await this.acquireTokenNative({...e,correlationId:t},Pn.acquireTokenByCode,e.nativeAccountId).catch((e=>{throw e instanceof qa&&Ua(e)&&(this.nativeExtensionProvider=void 0),e}));return r.end({accountType:oc(n.account),success:!0}),n}throw nn(zr)}throw nn(Dr)}catch(e){throw this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_BY_CODE_FAILURE,Mn.Silent,null,e),r.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(Bn.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);const t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then((e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker}),e))).catch((e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(Bn.AcquireTokenFromCache,e.correlationId),t){case Hn.Default:case Hn.AccessToken:case Hn.AccessTokenAndRefreshToken:const t=this.createSilentCacheClient(e.correlationId);return or(t.acquireToken.bind(t),Bn.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw Zt(xt)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(Bn.AcquireTokenByRefreshToken,e.correlationId),t){case Hn.Default:case Hn.AccessTokenAndRefreshToken:case Hn.RefreshToken:case Hn.RefreshTokenAndNetwork:const t=this.createSilentRefreshClient(e.correlationId);return or(t.acquireToken.bind(t),Bn.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw Zt(xt)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(Bn.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return or(t.acquireToken.bind(t),Bn.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);So(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0);return this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);ko(this.initialized),this.browserStorage.setInteractionInProgress(!0);return this.createPopupClient(t).logout(e)}catch(e){return Promise.reject(e)}}async clearCache(e){if(!this.isBrowserEnvironment)return void this.logger.info("in non-browser environment, returning early.");const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return Qs(this.logger,this.browserStorage,this.isBrowserEnvironment,e)}getAccount(e){return Ws(e,this.logger,this.browserStorage)}getAccountByUsername(e){return js(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return Vs(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return Js(e,this.logger,this.browserStorage)}setActiveAccount(e){Ys(e,this.browserStorage)}getActiveAccount(){return Xs(this.browserStorage)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=pi.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(r),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw nn(Qr);return new Da(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!Fa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case H.NONE:case H.CONSENT:case H.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!(!t&&!this.getNativeAccountId(e))||(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1)}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new Ga(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new Qa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new Za(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Pn.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new Ba(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new ec(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new nc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Pn.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return To(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}handleAccountCacheChange(e){try{e.key?.includes(M)&&this.eventHandler.emitEvent(Zs.ACTIVE_ACCOUNT_CHANGED);const t=e.newValue||e.oldValue;if(!t)return;const r=JSON.parse(t);if("object"!=typeof r||!pi.isAccountEntity(r))return;const n=ki.toObject(new pi,r).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.eventHandler.emitEvent(Zs.ACCOUNT_ADDED,void 0,n)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.eventHandler.emitEvent(Zs.ACCOUNT_REMOVED,void 0,n))}catch(e){return}}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?ro():d.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||On})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||On})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(Bn.AcquireTokenSilent,t);r.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),ic(this.initialized,r),this.logger.verbose("acquireTokenSilent called",t);const n=e.account||this.getActiveAccount();if(!n)throw nn(kr);r.add({accountType:oc(n)});const o={clientId:this.config.auth.clientId,authority:e.authority||d.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:n.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions},i=JSON.stringify(o),s=this.activeSilentTokenRequests.get(i);if(void 0===s){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);const o=or(this.acquireTokenSilentAsync.bind(this),Bn.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},n).then((t=>(this.activeSilentTokenRequests.delete(i),r.end({success:!0,fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,accessTokenSize:t.accessToken.length,idTokenSize:t.idToken.length}),t))).catch((e=>{throw this.activeSilentTokenRequests.delete(i),r.end({success:!1},e),e}));return this.activeSilentTokenRequests.set(i,o),{...await o,state:e.state}}return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),r.discard(),{...await s,state:e.state}}async acquireTokenSilentAsync(e,t){const r=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(Bn.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_START,Mn.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",r);const n=await or(Pa,Bn.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),o=e.cacheLookupPolicy||Hn.Default;return this.acquireTokenSilentNoIframe(n,o).catch((async e=>{const t=function(e,t){const r=!(e instanceof Os&&e.subError!==Rs),n=e.errorCode===on.INVALID_GRANT_ERROR||e.errorCode===xt,o=r&&n||e.errorCode===Ts||e.errorCode===ks,i=xn.includes(t);return o&&i}(e,o);if(t){if(this.activeIframeRequest){if(o!==Hn.Skip){const[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,n.correlationId);const i=this.performanceClient.startMeasurement(Bn.AwaitConcurrentIframe,n.correlationId);i.add({awaitIframeCorrelationId:r});const s=await t;if(i.end({success:s}),s)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,n.correlationId),this.acquireTokenSilentNoIframe(n,o);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",n.correlationId),or(this.acquireTokenBySilentIframe.bind(this),Bn.AcquireTokenBySilentIframe,this.logger,this.performanceClient,n.correlationId)(n)}{let e;return this.activeIframeRequest=[new Promise((t=>{e=t})),n.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",n.correlationId),or(this.acquireTokenBySilentIframe.bind(this),Bn.AcquireTokenBySilentIframe,this.logger,this.performanceClient,n.correlationId)(n).then((t=>(e(!0),t))).catch((t=>{throw e(!1),t})).finally((()=>{this.activeIframeRequest=void 0}))}}throw e})).then((t=>(this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_SUCCESS,Mn.Silent,t),e.correlationId&&this.performanceClient.addFields({fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker},e.correlationId),t))).catch((e=>{throw this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_FAILURE,Mn.Silent,null,e),e})).finally((()=>{document.removeEventListener("visibilitychange",r)}))}async acquireTokenSilentNoIframe(e,t){return Fa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,Pn.acquireTokenSilent_silentFlow).catch((async e=>{if(e instanceof qa&&Ua(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,Zt(xt);throw e}))):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),or(this.acquireTokenFromCache.bind(this),Bn.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch((r=>{if(t===Hn.AccessToken)throw r;return this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_NETWORK_START,Mn.Silent,e),or(this.acquireTokenByRefreshToken.bind(this),Bn.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)})))}}class ac{constructor(e,t,r,n){this.clientId=e,this.clientCapabilities=t,this.crypto=r,this.logger=n}toNaaTokenRequest(e){let t;t=void 0===e.extraQueryParameters?new Map:new Map(Object.entries(e.extraQueryParameters));const r=e.correlationId||this.crypto.createNewGuid(),n=new ga(r).addClientCapabilitiesToClaims(e.claims,this.clientCapabilities),o=e.scopes||m;return{platformBrokerId:e.account?.homeAccountId,clientId:this.clientId,authority:e.authority,scope:o.join(" "),correlationId:r,claims:it.isEmptyObj(n)?void 0:n,state:e.state,authenticationScheme:e.authenticationScheme||oe.BEARER,extraParameters:t}}fromNaaTokenResponse(e,t,r){if(!t.token.id_token||!t.token.access_token)throw Zt(lt);const n=new Date(1e3*(r+(t.token.expires_in||0))),o=Uo(t.token.id_token,this.crypto.base64Decode),i=this.fromNaaAccountInfo(t.account,t.token.id_token,o),s=t.token.scope||e.scope;return{authority:t.token.authority||i.environment,uniqueId:i.localAccountId,tenantId:i.tenantId,scopes:s.split(" "),account:i,idToken:t.token.id_token,idTokenClaims:o,accessToken:t.token.access_token,fromCache:!1,expiresOn:n,tokenType:e.authenticationScheme||oe.BEARER,correlationId:e.correlationId,extExpiresOn:n,state:e.state}}fromNaaAccountInfo(e,t,r){const n=r||e.idTokenClaims,o=e.localAccountId||n?.oid||n?.sub||"",i=e.tenantId||n?.tid||"",s=e.homeAccountId||`${o}.${i}`,a=e.username||n?.preferred_username||"",c=e.name||n?.name,l=new Map,d=ai(s,o,i,n);l.set(i,d);return{homeAccountId:s,environment:e.environment,tenantId:i,username:a,localAccountId:o,name:c,idToken:t,idTokenClaims:n,tenantProfiles:l}}fromBridgeError(e){if(!function(e){return void 0!==e.status}(e))return new Me("unknown_error","An unknown error occurred");switch(e.status){case Ji:return new Xt(Qt);case Yi:return new Xt($t);case ts:return new Xt(Ot);case es:return new Xt(Vt);case rs:return new Xt(e.code||Vt,e.description);case Xi:case Zi:return new ta(e.code,e.description);case Vi:return new Os(e.code,e.description);default:return new Me(e.code,e.description)}}toAuthenticationResultFromCache(e,t,r,n,o){if(!t||!r)throw Zt(lt);const i=Uo(t.secret,this.crypto.base64Decode),s=r.target||n.scopes.join(" ");return{authority:r.environment||e.environment,uniqueId:e.localAccountId,tenantId:e.tenantId,scopes:s.split(" "),account:e,idToken:t.secret,idTokenClaims:i||{},accessToken:r.secret,fromCache:!0,expiresOn:new Date(1e3*Number(r.expiresOn)),tokenType:n.authenticationScheme||oe.BEARER,correlationId:o,extExpiresOn:new Date(1e3*Number(r.extendedExpiresOn)),state:n.state}}}const cc={code:"unsupported_method",desc:"This method is not supported in nested app environment."};class lc extends Me{constructor(e,t){super(e,t),Object.setPrototypeOf(this,lc.prototype),this.name="NestedAppAuthError"}static createUnsupportedError(){return new lc(cc.code,cc.desc)}}class dc{constructor(e){this.operatingContext=e;const t=this.operatingContext.getBridgeProxy();if(void 0===t)throw new Error("unexpected: bridgeProxy is undefined");this.bridgeProxy=t,this.config=e.getConfig(),this.logger=this.operatingContext.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=e.isBrowserEnvironment()?new fs(this.logger,this.performanceClient,!0):No,this.browserStorage=this.operatingContext.isBrowserEnvironment()?new Gs(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,Is(this.config.auth)):$s(this.config.auth.clientId,this.logger),this.eventHandler=new ea(this.logger),this.nestedAppAuthAdapter=new ac(this.config.auth.clientId,this.config.auth.clientCapabilities,this.browserCrypto,this.logger);const r=this.bridgeProxy.getAccountContext();if(r){Ys(Ws(r,this.logger,this.browserStorage),this.browserStorage)}}static async createController(e){const t=new dc(e);return Promise.resolve(t)}initialize(){return Promise.resolve()}ensureValidRequest(e){return e?.correlationId?e:{...e,correlationId:this.browserCrypto.createNewGuid()}}async acquireTokenInteractive(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_START,Mn.Popup,t);const r=this.performanceClient.startMeasurement(Bn.AcquireTokenPopup,t.correlationId);r?.add({nestedAppAuthRequest:!0});try{const n=this.nestedAppAuthAdapter.toNaaTokenRequest(t),o=Ho(),i=await this.bridgeProxy.getTokenInteractive(n),s={...this.nestedAppAuthAdapter.fromNaaTokenResponse(n,i,o)};return await this.hydrateCache(s,e),this.browserStorage.setActiveAccount(s.account),this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_SUCCESS,Mn.Popup,s),r.add({accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length}),r.end({success:!0,requestId:s.requestId}),s}catch(e){const t=this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_FAILURE,Mn.Popup,null,e),r.end({success:!1},e),t}}async acquireTokenSilentInternal(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_START,Mn.Silent,t);const r=await this.acquireTokenFromCache(t);if(r)return this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_SUCCESS,Mn.Silent,r),r;const n=this.performanceClient.startMeasurement(Bn.SsoSilent,t.correlationId);n?.increment({visibilityChangeCount:0}),n?.add({nestedAppAuthRequest:!0});try{const r=this.nestedAppAuthAdapter.toNaaTokenRequest(t),o=Ho(),i=await this.bridgeProxy.getTokenSilent(r),s=this.nestedAppAuthAdapter.fromNaaTokenResponse(r,i,o);return await this.hydrateCache(s,e),this.browserStorage.setActiveAccount(s.account),this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_SUCCESS,Mn.Silent,s),n?.add({accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length}),n?.end({success:!0,requestId:s.requestId}),s}catch(e){const t=this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_FAILURE,Mn.Silent,null,e),n?.end({success:!1},e),t}}async acquireTokenFromCache(e){const t=this.performanceClient.startMeasurement(Bn.AcquireTokenSilent,e.correlationId);if(t?.add({nestedAppAuthRequest:!0}),e.claims)return this.logger.verbose("Claims are present in the request, skipping cache lookup"),null;let r=null;switch(e.cacheLookupPolicy){case Hn.Default:case Hn.AccessToken:case Hn.AccessTokenAndRefreshToken:r=await this.acquireTokenFromCacheInternal(e);break;default:return null}return r?(this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_SUCCESS,Mn.Silent,r),t?.add({accessTokenSize:r?.accessToken.length,idTokenSize:r?.idToken.length}),t?.end({success:!0}),r):(this.logger.error("Cached tokens are not found for the account, proceeding with silent token request."),this.eventHandler.emitEvent(Zs.ACQUIRE_TOKEN_FAILURE,Mn.Silent,null),t?.end({success:!1}),null)}async acquireTokenFromCacheInternal(e){const t=this.bridgeProxy.getAccountContext();let r=null;if(t){r=Ws(t,this.logger,this.browserStorage)||e.account}if(!r)return this.logger.verbose("No active account found, falling back to the host"),Promise.resolve(null);this.logger.verbose("active account found, attempting to acquire token silently");const n={...e,correlationId:e.correlationId||this.browserCrypto.createNewGuid(),authority:e.authority||r.environment,scopes:e.scopes?.length?e.scopes:[...m]},o=this.browserStorage.getTokenKeys(),i=this.browserStorage.getAccessToken(r,n,o,r.tenantId,this.performanceClient,n.correlationId);if(!i)return this.logger.verbose("No cached access token found"),Promise.resolve(null);if(Bo(i.cachedAt)||xo(i.expiresOn,this.config.system.tokenRenewalOffsetSeconds))return this.logger.verbose("Cached access token has expired"),Promise.resolve(null);const s=this.browserStorage.getIdToken(r,o,r.tenantId,this.performanceClient,n.correlationId);return s?this.nestedAppAuthAdapter.toAuthenticationResultFromCache(r,s,i,n,n.correlationId):(this.logger.verbose("No cached id token found"),Promise.resolve(null))}async acquireTokenPopup(e){return this.acquireTokenInteractive(e)}acquireTokenRedirect(e){throw lc.createUnsupportedError()}async acquireTokenSilent(e){return this.acquireTokenSilentInternal(e)}acquireTokenByCode(e){throw lc.createUnsupportedError()}acquireTokenNative(e,t,r){throw lc.createUnsupportedError()}acquireTokenByRefreshToken(e,t){throw lc.createUnsupportedError()}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){throw lc.createUnsupportedError()}removePerformanceCallback(e){throw lc.createUnsupportedError()}enableAccountStorageEvents(){throw lc.createUnsupportedError()}disableAccountStorageEvents(){throw lc.createUnsupportedError()}getAllAccounts(e){return Qs(this.logger,this.browserStorage,this.isBrowserEnv(),e)}getAccount(e){return Ws(e,this.logger,this.browserStorage)}getAccountByUsername(e){return js(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return Vs(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return Js(e,this.logger,this.browserStorage)}setActiveAccount(e){return Ys(e,this.browserStorage)}getActiveAccount(){return Xs(this.browserStorage)}handleRedirectPromise(e){return Promise.resolve(null)}loginPopup(e){return this.acquireTokenInteractive(e||On)}loginRedirect(e){throw lc.createUnsupportedError()}logout(e){throw lc.createUnsupportedError()}logoutRedirect(e){throw lc.createUnsupportedError()}logoutPopup(e){throw lc.createUnsupportedError()}ssoSilent(e){return this.acquireTokenSilentInternal(e)}getTokenCache(){throw lc.createUnsupportedError()}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){}setNavigationClient(e){this.logger.warning("setNavigationClient is not supported in nested app auth")}getConfiguration(){return this.config}isBrowserEnv(){return this.operatingContext.isBrowserEnvironment()}getBrowserCrypto(){return this.browserCrypto}getPerformanceClient(){throw lc.createUnsupportedError()}getRedirectResponse(){throw lc.createUnsupportedError()}async clearCache(e){throw lc.createUnsupportedError()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=pi.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(r),this.browserStorage.hydrateCache(e,t)}}async function hc(e){const t=new is(e),r=new os(e),n=[t.initialize(),r.initialize()];return await Promise.all(n),r.isAvailable()&&e.auth.supportsNestedAppAuth?dc.createController(r):t.isAvailable()?sc.createController(t):null}class uc{static async createPublicClientApplication(e){const t=await async function(e,t){const r=new is(e);return await r.initialize(),sc.createController(r,t)}(e);return new uc(e,t)}constructor(e,t){this.controller=t||new sc(new is(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}async function gc(e){const t=new os(e);if(await t.initialize(),t.isAvailable()){const r=new dc(t);return new uc(e,r)}return pc(e)}async function pc(e){const t=new uc(e);return await t.initialize(),t}class mc{constructor(e){this.initialized=!1,this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.logger=e.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new fs(this.logger,this.performanceClient):No,this.browserStorage=this.isBrowserEnvironment?new Gs(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,void 0,this.performanceClient):$s(this.config.auth.clientId,this.logger)}getBrowserStorage(){return this.browserStorage}getAccount(e){return null}getAccountByHomeId(e){return null}getAccountByLocalId(e){return null}getAccountByUsername(e){return null}getAllAccounts(){return[]}initialize(){return this.initialized=!0,Promise.resolve()}acquireTokenPopup(e){return Ao(this.initialized),To(),{}}acquireTokenRedirect(e){return Ao(this.initialized),To(),Promise.resolve()}acquireTokenSilent(e){return Ao(this.initialized),To(),{}}acquireTokenByCode(e){return Ao(this.initialized),To(),{}}acquireTokenNative(e,t,r){return Ao(this.initialized),To(),{}}acquireTokenByRefreshToken(e,t){return Ao(this.initialized),To(),{}}addEventCallback(e,t){return null}removeEventCallback(e){}addPerformanceCallback(e){return Ao(this.initialized),To(),""}removePerformanceCallback(e){return Ao(this.initialized),To(),!0}enableAccountStorageEvents(){Ao(this.initialized),To()}disableAccountStorageEvents(){Ao(this.initialized),To()}handleRedirectPromise(e){return Ao(this.initialized),Promise.resolve(null)}loginPopup(e){return Ao(this.initialized),To(),{}}loginRedirect(e){return Ao(this.initialized),To(),{}}logout(e){return Ao(this.initialized),To(),{}}logoutRedirect(e){return Ao(this.initialized),To(),{}}logoutPopup(e){return Ao(this.initialized),To(),{}}ssoSilent(e){return Ao(this.initialized),To(),{}}getTokenCache(){return Ao(this.initialized),To(),{}}getLogger(){return this.logger}setLogger(e){Ao(this.initialized),To()}setActiveAccount(e){Ao(this.initialized),To()}getActiveAccount(){return Ao(this.initialized),To(),null}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){Ao(this.initialized),To()}getConfiguration(){return this.config}isBrowserEnv(){return Ao(this.initialized),To(),!0}getBrowserCrypto(){return Ao(this.initialized),To(),{}}getPerformanceClient(){return Ao(this.initialized),To(),{}}getRedirectResponse(){return Ao(this.initialized),To(),{}}async clearCache(e){Ao(this.initialized),To()}async hydrateCache(e,t){Ao(this.initialized),To()}}class fc extends ji{getId(){return fc.ID}getModuleName(){return fc.MODULE_NAME}async initialize(){return!0}}fc.MODULE_NAME="",fc.ID="UnknownOperatingContext";class Cc{static async createPublicClientApplication(e){const t=await hc(e);let r;return r=null!==t?new Cc(e,t):new Cc(e),r}constructor(e,t){if(this.configuration=e,t)this.controller=t;else{const t=new fc(e);this.controller=new mc(t)}}async initialize(){if(this.controller instanceof mc){const e=await hc(this.configuration);return null!==e&&(this.controller=e),this.controller.initialize()}return Promise.resolve()}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}const yc={initialize:()=>Promise.reject(uo(so)),acquireTokenPopup:()=>Promise.reject(uo(so)),acquireTokenRedirect:()=>Promise.reject(uo(so)),acquireTokenSilent:()=>Promise.reject(uo(so)),acquireTokenByCode:()=>Promise.reject(uo(so)),getAllAccounts:()=>[],getAccount:()=>null,getAccountByHomeId:()=>null,getAccountByUsername:()=>null,getAccountByLocalId:()=>null,handleRedirectPromise:()=>Promise.reject(uo(so)),loginPopup:()=>Promise.reject(uo(so)),loginRedirect:()=>Promise.reject(uo(so)),logout:()=>Promise.reject(uo(so)),logoutRedirect:()=>Promise.reject(uo(so)),logoutPopup:()=>Promise.reject(uo(so)),ssoSilent:()=>Promise.reject(uo(so)),addEventCallback:()=>null,removeEventCallback:()=>{},addPerformanceCallback:()=>"",removePerformanceCallback:()=>!1,enableAccountStorageEvents:()=>{},disableAccountStorageEvents:()=>{},getTokenCache:()=>{throw uo(so)},getLogger:()=>{throw uo(so)},setLogger:()=>{},setActiveAccount:()=>{},getActiveAccount:()=>null,initializeWrapperLibrary:()=>{},setNavigationClient:()=>{},getConfiguration:()=>{throw uo(so)},hydrateCache:()=>Promise.reject(uo(so)),clearCache:()=>Promise.reject(uo(so))};class vc{constructor(e){if(e===gn.LocalStorage)this.windowStorage=new Bs;else{if(e!==gn.SessionStorage)throw uo(io);this.windowStorage=new Ds}}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}class wc{static getInteractionStatusFromEvent(e,t){switch(e.eventType){case Zs.LOGIN_START:return Nn.Login;case Zs.SSO_SILENT_START:return Nn.SsoSilent;case Zs.ACQUIRE_TOKEN_START:if(e.interactionType===Mn.Redirect||e.interactionType===Mn.Popup)return Nn.AcquireToken;break;case Zs.HANDLE_REDIRECT_START:return Nn.HandleRedirect;case Zs.LOGOUT_START:return Nn.Logout;case Zs.SSO_SILENT_SUCCESS:case Zs.SSO_SILENT_FAILURE:if(t&&t!==Nn.SsoSilent)break;return Nn.None;case Zs.LOGOUT_END:if(t&&t!==Nn.Logout)break;return Nn.None;case Zs.HANDLE_REDIRECT_END:if(t&&t!==Nn.HandleRedirect)break;return Nn.None;case Zs.LOGIN_SUCCESS:case Zs.LOGIN_FAILURE:case Zs.ACQUIRE_TOKEN_SUCCESS:case Zs.ACQUIRE_TOKEN_FAILURE:case Zs.RESTORE_FROM_BFCACHE:if(e.interactionType===Mn.Redirect||e.interactionType===Mn.Popup){if(t&&t!==Nn.Login&&t!==Nn.AcquireToken)break;return Nn.None}}return null}}class Ic{constructor(e,t){const r=t&&t.loggerOptions||{};this.logger=new _o(r,$i,Qi),this.cryptoOps=new fs(this.logger),this.popTokenGenerator=new Ca(this.cryptoOps),this.shrParameters=e}async generatePublicKeyThumbprint(){const{kid:e}=await this.popTokenGenerator.generateKid(this.shrParameters);return e}async signRequest(e,t,r){return this.popTokenGenerator.signPayload(e,t,this.shrParameters,r)}async removeKeys(e){return this.cryptoOps.removeTokenBindingKey(e)}}function Tc(e,t,r,n=5){if(e instanceof Error)return e instanceof Me?(r.errorCode=e.errorCode,r.subErrorCode=e.subError,void((e instanceof ta||e instanceof Os)&&(r.serverErrorNo=e.errorNo))):void(e instanceof Ai?r.errorCode=e.errorCode:r.errorStack?.length?t.trace("PerformanceClient.addErrorStack: Stack already exist",r.correlationId):e.stack?.length?(e.stack&&(r.errorStack=function(e,t){if(t<0)return[];const r=e.split("\n")||[],n=[],o=r[0];o.startsWith("TypeError: Cannot read property")||o.startsWith("TypeError: Cannot read properties of")||o.startsWith("TypeError: Cannot set property")||o.startsWith("TypeError: Cannot set properties of")||o.endsWith("is not a function")?n.push(Ac(o)):(o.startsWith("SyntaxError")||o.startsWith("TypeError"))&&n.push(Ac(o.replace(/['].*[']|["].*["]/g,"<redacted>")));for(let e=1;e<r.length&&!(n.length>=t);e++){const t=r[e];n.push(Ac(t))}return n}(e.stack,n)),r.errorName=e.name):t.trace("PerformanceClient.addErrorStack: Input stack is empty",r.correlationId));t.trace("PerformanceClient.addErrorStack: Input error is not instance of Error",r.correlationId)}function Ac(e){const t=e.lastIndexOf(" ")+1;if(t<1)return e;const r=e.substring(t);let n=r.lastIndexOf("/");return n=n<0?r.lastIndexOf("\\"):n,n>=0?(e.substring(0,t)+"("+r.substring(n+1)+(")"===r.charAt(r.length-1)?"":")")).trimStart():e.trimStart()}class kc{constructor(e,t,r,n,o,i,s,a){this.authority=t,this.libraryName=n,this.libraryVersion=o,this.applicationTelemetry=i,this.clientId=e,this.logger=r,this.callbacks=new Map,this.eventsByCorrelationId=new Map,this.eventStack=new Map,this.queueMeasurements=new Map,this.preQueueTimeByCorrelationId=new Map,this.intFields=s||new Set;for(const e of zn)this.intFields.add(e);this.abbreviations=a||new Map;for(const[e,t]of Dn)this.abbreviations.set(e,t)}startPerformanceMeasurement(e,t){return{}}getPreQueueTime(e,t){const r=this.preQueueTimeByCorrelationId.get(t);if(r){if(r.name===e)return r.time;this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${e}, unable to add queue measurement`)}else this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${t}, unable to add queue measurement`)}calculateQueuedTime(e,t){return e<1?(this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${e}`),0):t<1?(this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${t}`),0):t<e?(this.logger.trace("PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved"),0):t-e}addQueueMeasurement(e,t,r,n){if(!t)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${e}, cannot add queue measurement`);if(0===r)this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${e} is ${r}`);else if(!r)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${e}`);const o={eventName:e,queueTime:n?0:r,manuallyCompleted:n},i=this.queueMeasurements.get(t);if(i)i.push(o),this.queueMeasurements.set(t,i);else{this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${t} to queue measurements`);const e=[o];this.queueMeasurements.set(t,e)}this.preQueueTimeByCorrelationId.delete(t)}startMeasurement(e,t){const r=t||this.generateId();t||this.logger.info(`PerformanceClient: No correlation id provided for ${e}, generating`,r),this.logger.trace(`PerformanceClient: Performance measurement started for ${e}`,r);const n={eventId:this.generateId(),status:Fn,authority:this.authority,libraryName:this.libraryName,libraryVersion:this.libraryVersion,clientId:this.clientId,name:e,startTimeMs:Date.now(),correlationId:r,appName:this.applicationTelemetry?.appName,appVersion:this.applicationTelemetry?.appVersion};var o,i,s;return this.cacheEventByCorrelationId(n),o=n,i=this.abbreviations,(s=this.eventStack.get(r))&&s.push({name:i.get(o.name)||o.name}),{end:(e,t)=>this.endMeasurement({...n,...e},t),discard:()=>this.discardMeasurements(n.correlationId),add:e=>this.addFields(e,n.correlationId),increment:e=>this.incrementFields(e,n.correlationId),event:n,measurement:new Li}}endMeasurement(e,t){const r=this.eventsByCorrelationId.get(e.correlationId);if(!r)return this.logger.trace(`PerformanceClient: Measurement not found for ${e.eventId}`,e.correlationId),null;const n=e.eventId===r.eventId;let o={totalQueueTime:0,totalQueueCount:0,manuallyCompletedCount:0};e.durationMs=Math.round(e.durationMs||this.getDurationMs(e.startTimeMs));const i=JSON.stringify(function(e,t,r,n){if(!r?.length)return;const o=e=>e.length?e[e.length-1]:void 0,i=t.get(e.name)||e.name,s=o(r);if(s?.name!==i)return;const a=r?.pop();if(!a)return;const c=n instanceof Me?n.errorCode:n instanceof Error?n.name:void 0,l=n instanceof Me?n.subError:void 0;c&&a.childErr!==c&&(a.err=c,l&&(a.subErr=l)),delete a.name,delete a.childErr;const d={...a,dur:e.durationMs};e.success||(d.fail=1);const h=o(r);if(!h)return{[i]:d};let u;if(c&&(h.childErr=c),h[i]){const e=Object.keys(h).filter((e=>e.startsWith(i))).length;u=`${i}_${e+1}`}else u=i;return h[u]=d,h}(e,this.abbreviations,this.eventStack.get(r.correlationId),t));if(n?(o=this.getQueueInfo(e.correlationId),this.discardMeasurements(r.correlationId)):r.incompleteSubMeasurements?.delete(e.eventId),this.logger.trace(`PerformanceClient: Performance measurement ended for ${e.name}: ${e.durationMs} ms`,e.correlationId),t&&Tc(t,this.logger,r),!n)return r[e.name+"DurationMs"]=Math.floor(e.durationMs),{...r};n&&!t&&(r.errorCode||r.subErrorCode)&&(this.logger.trace(`PerformanceClient: Remove error and sub-error codes for root event ${e.name} as intermediate error was successfully handled`,e.correlationId),r.errorCode=void 0,r.subErrorCode=void 0);let s={...r,...e},a=0;return s.incompleteSubMeasurements?.forEach((t=>{this.logger.trace(`PerformanceClient: Incomplete submeasurement ${t.name} found for ${e.name}`,s.correlationId),a++})),s.incompleteSubMeasurements=void 0,s={...s,queuedTimeMs:o.totalQueueTime,queuedCount:o.totalQueueCount,queuedManuallyCompletedCount:o.manuallyCompletedCount,status:Kn,incompleteSubsCount:a,context:i},this.truncateIntegralFields(s),this.emitEvents([s],e.correlationId),s}addFields(e,t){this.logger.trace("PerformanceClient: Updating static fields");const r=this.eventsByCorrelationId.get(t);r?this.eventsByCorrelationId.set(t,{...r,...e}):this.logger.trace("PerformanceClient: Event not found for",t)}incrementFields(e,t){this.logger.trace("PerformanceClient: Updating counters");const r=this.eventsByCorrelationId.get(t);if(r)for(const t in e){if(r.hasOwnProperty(t)){if(isNaN(Number(r[t])))return}else r[t]=0;r[t]+=e[t]}else this.logger.trace("PerformanceClient: Event not found for",t)}cacheEventByCorrelationId(e){const t=this.eventsByCorrelationId.get(e.correlationId);t?(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} added/updated`,e.correlationId),t.incompleteSubMeasurements=t.incompleteSubMeasurements||new Map,t.incompleteSubMeasurements.set(e.eventId,{name:e.name,startTimeMs:e.startTimeMs})):(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} started`,e.correlationId),this.eventsByCorrelationId.set(e.correlationId,{...e}),this.eventStack.set(e.correlationId,[]))}getQueueInfo(e){const t=this.queueMeasurements.get(e);t||this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${e}`);let r=0,n=0,o=0;return t?.forEach((e=>{r+=e.queueTime,n++,o+=e.manuallyCompleted?1:0})),{totalQueueTime:r,totalQueueCount:n,manuallyCompletedCount:o}}discardMeasurements(e){this.logger.trace("PerformanceClient: Performance measurements discarded",e),this.eventsByCorrelationId.delete(e),this.logger.trace("PerformanceClient: QueueMeasurements discarded",e),this.queueMeasurements.delete(e),this.logger.trace("PerformanceClient: Pre-queue times discarded",e),this.preQueueTimeByCorrelationId.delete(e),this.logger.trace("PerformanceClient: Event stack discarded",e),this.eventStack.delete(e)}addPerformanceCallback(e){for(const[t,r]of this.callbacks)if(r.toString()===e.toString())return this.logger.warning(`PerformanceClient: Performance callback is already registered with id: ${t}`),t;const t=this.generateId();return this.callbacks.set(t,e),this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${t}`),t}removePerformanceCallback(e){const t=this.callbacks.delete(e);return t?this.logger.verbose(`PerformanceClient: Performance callback ${e} removed.`):this.logger.verbose(`PerformanceClient: Performance callback ${e} not removed.`),t}emitEvents(e,t){this.logger.verbose("PerformanceClient: Emitting performance events",t),this.callbacks.forEach(((r,n)=>{this.logger.trace(`PerformanceClient: Emitting event to callback ${n}`,t),r.apply(null,[e])}))}truncateIntegralFields(e){this.intFields.forEach((t=>{t in e&&"number"==typeof e[t]&&(e[t]=Math.floor(e[t]))}))}getDurationMs(e){const t=Date.now()-e;return t<0?t:0}}function Sc(){let e;try{e=window[gn.SessionStorage];const t=e?.getItem("msal.browser.performance.enabled");if(1===Number(t))return Promise.resolve().then(r.bind(r,91512))}catch(e){}}function Ec(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.now}function bc(e){if(e&&Ec())return Math.round(window.performance.now()-e)}class Rc extends kc{constructor(e,t,r){super(e.auth.clientId,e.auth.authority||`${d.DEFAULT_AUTHORITY}`,new _o(e.system?.loggerOptions||{},$i,Qi),$i,Qi,e.telemetry?.application||{appName:"",appVersion:""},t,r)}generateId(){return ro()}getPageVisibility(){return document.visibilityState?.toString()||null}deleteIncompleteSubMeasurements(e){Sc()?.then((t=>{const r=this.eventsByCorrelationId.get(e.event.correlationId),n=r&&r.eventId===e.event.eventId,o=[];n&&r?.incompleteSubMeasurements&&r.incompleteSubMeasurements.forEach((e=>{o.push({...e})})),t.BrowserPerformanceMeasurement.flushMeasurements(e.event.correlationId,o)}))}startMeasurement(e,t){const r=this.getPageVisibility(),n=super.startMeasurement(e,t),o=Ec()?window.performance.now():void 0,i=Sc()?.then((t=>new t.BrowserPerformanceMeasurement(e,n.event.correlationId)));return i?.then((e=>e.startMeasurement())),{...n,end:(e,t)=>{const s=n.end({...e,startPageVisibility:r,endPageVisibility:this.getPageVisibility(),durationMs:bc(o)},t);return i?.then((e=>e.endMeasurement())),this.deleteIncompleteSubMeasurements(n),s},discard:()=>{n.discard(),i?.then((e=>e.flushMeasurement())),this.deleteIncompleteSubMeasurements(n)}}}setPreQueueTime(e,t){if(!Ec())return void this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to set telemetry queue time for ${e}`);if(!t)return void this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to set telemetry queue time`);const r=this.preQueueTimeByCorrelationId.get(t);r&&(this.logger.trace(`BrowserPerformanceClient: Incomplete pre-queue ${r.name} found`,t),this.addQueueMeasurement(r.name,t,void 0,!0)),this.preQueueTimeByCorrelationId.set(t,{name:e,time:window.performance.now()})}addQueueMeasurement(e,t,r,n){if(!Ec())return void this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to add queue measurement for ${e}`);if(!t)return void this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to add queue measurement`);const o=super.getPreQueueTime(e,t);if(!o)return;const i=window.performance.now(),s=r||super.calculateQueuedTime(o,i);return super.addQueueMeasurement(e,t,s,n)}}var _c=r(91512);class Pc{constructor(e){this.headers=e}getShrNonce(){const e=this.headers[T];if(e){const t=this.parseChallenges(e);if(t.nextnonce)return t.nextnonce;throw ot(Ye)}const t=this.headers[I];if(t){const e=this.parseChallenges(t);if(e.nonce)return e.nonce;throw ot(Ye)}throw ot(Je)}parseChallenges(e){const t=e.indexOf(" "),r=e.substr(t+1).split(","),n={};return r.forEach((e=>{const[t,r]=e.split("=");n[t]=unescape(r.replace(/['"]+/g,d.EMPTY_STRING))})),n}}},91512:(e,t,r)=>{r.r(t),r.d(t,{BrowserPerformanceMeasurement:()=>n});class n{constructor(e,t){this.correlationId=t,this.measureName=n.makeMeasureName(e,t),this.startMark=n.makeStartMark(e,t),this.endMark=n.makeEndMark(e,t)}static makeMeasureName(e,t){return`msal.measure.${e}.${t}`}static makeStartMark(e,t){return`msal.start.${e}.${t}`}static makeEndMark(e,t){return`msal.end.${e}.${t}`}static supportsBrowserPerformance(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.mark&&"function"==typeof window.performance.measure&&"function"==typeof window.performance.clearMarks&&"function"==typeof window.performance.clearMeasures&&"function"==typeof window.performance.getEntriesByName}static flushMeasurements(e,t){if(n.supportsBrowserPerformance())try{t.forEach((t=>{const r=n.makeMeasureName(t.name,e);window.performance.getEntriesByName(r,"measure").length>0&&(window.performance.clearMeasures(r),window.performance.clearMarks(n.makeStartMark(r,e)),window.performance.clearMarks(n.makeEndMark(r,e)))}))}catch(e){}}startMeasurement(){if(n.supportsBrowserPerformance())try{window.performance.mark(this.startMark)}catch(e){}}endMeasurement(){if(n.supportsBrowserPerformance())try{window.performance.mark(this.endMark),window.performance.measure(this.measureName,this.startMark,this.endMark)}catch(e){}}flushMeasurement(){if(n.supportsBrowserPerformance())try{const e=window.performance.getEntriesByName(this.measureName,"measure");if(e.length>0){const t=e[0].duration;return window.performance.clearMeasures(this.measureName),window.performance.clearMarks(this.startMark),window.performance.clearMarks(this.endMark),t}}catch(e){}return null}}},96413:(e,t,r)=>{r.r(t),r.d(t,{BrowserPerformanceMeasurement:()=>n});class n{constructor(e,t){this.correlationId=t,this.measureName=n.makeMeasureName(e,t),this.startMark=n.makeStartMark(e,t),this.endMark=n.makeEndMark(e,t)}static makeMeasureName(e,t){return`msal.measure.${e}.${t}`}static makeStartMark(e,t){return`msal.start.${e}.${t}`}static makeEndMark(e,t){return`msal.end.${e}.${t}`}static supportsBrowserPerformance(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.mark&&"function"==typeof window.performance.measure&&"function"==typeof window.performance.clearMarks&&"function"==typeof window.performance.clearMeasures&&"function"==typeof window.performance.getEntriesByName}static flushMeasurements(e,t){if(n.supportsBrowserPerformance())try{t.forEach((t=>{const r=n.makeMeasureName(t.name,e);window.performance.getEntriesByName(r,"measure").length>0&&(window.performance.clearMeasures(r),window.performance.clearMarks(n.makeStartMark(r,e)),window.performance.clearMarks(n.makeEndMark(r,e)))}))}catch(e){}}startMeasurement(){if(n.supportsBrowserPerformance())try{window.performance.mark(this.startMark)}catch(e){}}endMeasurement(){if(n.supportsBrowserPerformance())try{window.performance.mark(this.endMark),window.performance.measure(this.measureName,this.startMark,this.endMark)}catch(e){}}flushMeasurement(){if(n.supportsBrowserPerformance())try{const e=window.performance.getEntriesByName(this.measureName,"measure");if(e.length>0){const t=e[0].duration;return window.performance.clearMeasures(this.measureName),window.performance.clearMarks(this.startMark),window.performance.clearMarks(this.endMark),t}}catch(e){}return null}}}}]);
//# sourceMappingURL=vendors~auth-msal-browser.js.map