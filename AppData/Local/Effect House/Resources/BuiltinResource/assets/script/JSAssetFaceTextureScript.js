"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&__createBinding(t,e,n);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.JSAssetFaceTextureScript=void 0;const JSAssetScriptBase_1=require("./JSAssetScriptBase"),APJS=require('amazingpro.js'),screenVs="precision highp float;\n    attribute vec3 attPosition;\n    attribute vec2 attTexcoord0;\n    uniform mat4 u_Model;\n    uniform mat4 u_MVP;\n    varying vec2 g_vary_uv0;\n    varying vec4 v_sampling_pos;\n    void main ()\n    {\n      vec4 homogeneous_pos = vec4(attPosition, 1.0);\n      g_vary_uv0 = attTexcoord0;\n      v_sampling_pos = u_MVP * homogeneous_pos;\n      vec2 uv_pos = g_vary_uv0.xy * 2.0 - vec2(1.0);\n      gl_Position = vec4(uv_pos, 0.0, 1.0);\n    }\n    ",screenPs="precision highp float;\n    uniform sampler2D u_AlbedoTexture;\n    varying vec4 v_sampling_pos;\n\n    void main ()\n    {\n      vec2 sampling_uv = (v_sampling_pos.xy / v_sampling_pos.w) * 0.5 + 0.5;\n      vec4 textureColor = texture2D(u_AlbedoTexture, sampling_uv);\n      gl_FragColor = textureColor;\n    }\n    ",screenMetalVs="\n    #include <metal_stdlib>\n    #include <simd/simd.h>\n\n    using namespace metal;\n\n    struct buffer_t\n    {\n        float4x4 u_MVP;\n    };\n\n    struct main0_out\n    {\n        float2 g_vary_uv0;\n        float4 v_sampling_pos;\n        float4 gl_Position [[position]];\n    };\n\n    struct main0_in\n    {\n        float3 attPosition [[attribute(0)]];\n        float2 attTexcoord0 [[attribute(1)]];\n    };\n\n    vertex main0_out main0(main0_in in [[stage_in]], constant buffer_t& buffer)\n    {\n        main0_out out = {};\n        float4 homogeneous_pos = float4(in.attPosition, 1.0);\n        out.g_vary_uv0 = in.attTexcoord0;\n        out.v_sampling_pos = buffer.u_MVP * homogeneous_pos;\n        float2 uv_pos = (out.g_vary_uv0 * 2.0) - float2(1.0);\n        out.gl_Position = float4(uv_pos, 0.0, 1.0);\n        out.gl_Position.z = (out.gl_Position.z + out.gl_Position.w) * 0.5;       // Adjust clip-space for Metal\n        return out;\n    }\n    ",screenMetalPs="\n    #include <metal_stdlib>\n    #include <simd/simd.h>\n\n    using namespace metal;\n\n    struct main0_out\n    {\n        float4 gl_FragColor [[color(0)]];\n    };\n\n    struct main0_in\n    {\n        float4 v_sampling_pos;\n    };\n\n    fragment main0_out main0(main0_in in [[stage_in]], texture2d<float> u_AlbedoTexture [[texture(0)]], sampler u_AlbedoTextureSmplr [[sampler(0)]])\n    {\n        main0_out out = {};\n        float2 sampling_uv = ((in.v_sampling_pos.xy / float2(in.v_sampling_pos.w)) * 0.5) + float2(0.5);\n        float4 textureColor = u_AlbedoTexture.sample(u_AlbedoTextureSmplr, sampling_uv);\n        out.gl_FragColor = textureColor;\n        return out;\n    }\n    ";class JSAssetFaceTextureScript extends JSAssetScriptBase_1.JSAssetScriptBase{get faceIndex(){return this._faceIndex}set faceIndex(e){this._faceIndex=e}get faceMesh(){return this._faceMesh}set faceMesh(e){this._faceMesh=e}get textureResScale(){return this._textureResScale}set textureResScale(e){this._textureResScale=e}get sourceTexture(){return this._sourceTexture}set sourceTexture(e){this._sourceTexture=e}get algoSubGraphName(){return this._algoSubGraphName}set algoSubGraphName(e){this._algoSubGraphName=e}constructor(){super(),this._initialized=!1,this._faceIndex=void 0;const e=JSAssetScriptBase_1.RenderingUtil.createShaders({gles2:{vs:screenVs,fs:screenPs},metal:{vs:screenMetalVs,fs:screenMetalPs}});this._faceMaterial=this.createFaceTexMaterial(e)}get mainObject(){return this._mainObject}set mainObject(e){this._mainObject=e}onStart(){var e;if(!this.mainObject)return;const t=this.mainObject.getControl();let n;t.setDepth(1),t.setWidth(640),t.setHeight(360),t.filterMag=APJS.FilterMode.Nearest,t.filterMin=APJS.FilterMode.Nearest,t.filterMipmap=APJS.FilterMipmapMode.None,t.setAttachment(APJS.RenderTextureAttachment.NONE),(0,JSAssetScriptBase_1.IsRenderChainEventSupported)()?n=this.sourceTexture:(n=null===(e=this.scene)||void 0===e?void 0:e.assetManager.SyncLoad("share://input.texture"),console.log("DQDQ, FaceTexture onStart set inputTexture")),this._faceMaterial.setTex("u_AlbedoTexture",n),this.textureResScale&&(t.setWidth(APJS.AmazingManager.getSingleton("BuiltinObject").getOutputTextureWidth()*this.textureResScale),t.setHeight(APJS.AmazingManager.getSingleton("BuiltinObject").getOutputTextureHeight()*this.textureResScale))}onUpdate(){if(this.cmdBufferHelper&&(!this._initialized&&this.mainObject&&(this.cmdBufferHelper.setRenderTexture(this.mainObject),this.cmdBufferHelper.clearRenderTexture(!0,!0,new APJS.Color(0,0,0,0),0),this._initialized=!0),this.faceMesh&&this._faceMaterial&&void 0!==this.faceIndex&&this.mainObject&&this.algoSubGraphName)){const e=APJS.AlgorithmManager.getResult().getFaceCount();if(e<=this.faceIndex)return;const t="facefitting_3d_0";console.log("algfaceCount",e);const n=APJS.AlgorithmManager.getGraphNode(this.algoSubGraphName,t).getInfo(this.faceIndex);if(n){const e=n.data.get("vertexes"),t=n.data.get("normals");null!==e&&null!==t&&0<e.size()&&0<t.size()&&(this._faceMaterial.setMat4("u_MVP",n.data.get("mvp")),this.faceMesh.setVertexArray(e,0,0,!0),this.faceMesh.setNormalArray(t,0,0));const a=new APJS.Matrix4x4f;a.setIdentity(),this.cmdBufferHelper.setRenderTexture(this.mainObject),this.cmdBufferHelper.drawMesh(this.faceMesh,a,this._faceMaterial,0,0,new APJS.MaterialPropertyBlock,!1)}else null===this.faceMesh&&console.error("face texture asset: mesh not found!"),null===this._faceMaterial&&console.error("face texture asset: material not found!")}}createFaceTexMaterial(e){const t=new APJS.Pass;t.shaders=e,t.clearColor=new APJS.Color(0,0,0,1),t.clearType=APJS.CameraClearType.ColorDepth;const n=new APJS.Map;n.insert("attColor",APJS.VertexAttribType.COLOR),n.insert("attPosition",APJS.VertexAttribType.POSITION),n.insert("attTexcoord0",APJS.VertexAttribType.TEXCOORD0),t.semantics=n;const a=new APJS.RenderState;a.viewport=new APJS.ViewportState,a.viewport.rect=new APJS.Rect(0,0,1,1),a.viewport.minDepth=0,a.viewport.maxDepth=1,a.rasterization=new APJS.RasterizationState;const r=new APJS.DepthStencilState;r.depthWriteEnable=!1,a.depthstencil=r;const s=new APJS.ColorBlendState,i=new APJS.ColorBlendAttachmentState;i.blendEnable=!0,i.srcColorBlendFactor=APJS.BlendFactor.SRC_ALPHA,i.dstColorBlendFactor=APJS.BlendFactor.ONE_MINUS_SRC_ALPHA,i.srcAlphaBlendFactor=APJS.BlendFactor.SRC_ALPHA,i.dstAlphaBlendFactor=APJS.BlendFactor.ONE_MINUS_SRC_ALPHA,i.ColorBlendOp=APJS.BlendOp.ADD,i.AlphaBlendOp=APJS.BlendOp.ADD,s.attachments.pushBack(i),a.colorBlend=s,t.renderState=a;const o=JSAssetScriptBase_1.RenderingUtil.createMaterial(t);return o.renderQueue=1,o.setMat4("u_MVP",new APJS.Matrix4x4f),o}}exports.JSAssetFaceTextureScript=JSAssetFaceTextureScript;